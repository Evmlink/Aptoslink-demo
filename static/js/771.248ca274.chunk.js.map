{"version":3,"file":"static/js/771.248ca274.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/openlogin-adapter/node_modules/@toruslabs/openlogin-utils/src/utils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@toruslabs/openlogin-utils/src/browserStorage.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@toruslabs/openlogin-utils/src/constants.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@toruslabs/openlogin-utils/src/interfaces.ts","../node_modules/@toruslabs/base-session-manager/src/baseSessionManager.ts","../node_modules/@toruslabs/eccrypto/src/index.ts","../node_modules/@toruslabs/metadata-helpers/src/utils.ts","../node_modules/@toruslabs/metadata-helpers/src/webAuthnShareResolver.ts","../node_modules/@toruslabs/openlogin-session-manager/src/openloginSessionManager.ts","../node_modules/@toruslabs/openlogin/node_modules/@toruslabs/openlogin-utils/src/utils.ts","../node_modules/@toruslabs/openlogin/node_modules/@toruslabs/openlogin-utils/src/browserStorage.ts","../node_modules/@toruslabs/openlogin/node_modules/@toruslabs/openlogin-utils/src/constants.ts","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/@toruslabs/secure-pub-sub/src/log.ts","../node_modules/@toruslabs/secure-pub-sub/src/SecurePubSub.ts","../node_modules/@toruslabs/openlogin/src/errors.ts","../node_modules/@toruslabs/openlogin/src/logger.ts","../node_modules/@toruslabs/openlogin/src/utils.ts","../node_modules/@toruslabs/openlogin/src/PopupHandler.ts","../node_modules/@toruslabs/openlogin/src/OpenLogin.ts","../node_modules/@web3auth/openlogin-adapter/src/config.ts","../node_modules/@web3auth/openlogin-adapter/src/openloginAdapter.ts","../node_modules/json-stable-stringify/index.js","../node_modules/jsonify/index.js","../node_modules/jsonify/lib/parse.js","../node_modules/jsonify/lib/stringify.js"],"sourcesContent":["import base64urlLib from \"base64url\";\n\nexport const base64url = base64urlLib;\n\nexport function safebtoa(str: string): string {\n  return base64url.encode(str);\n}\n\nexport function safeatob(str: string): string {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nexport function base64toJSON<T = Record<string, unknown>>(b64str: string): T {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nexport function jsonToBase64<T = Record<string, unknown>>(json: T): string {\n  return base64url.encode(JSON.stringify(json));\n}\n\nexport interface IStorage {\n  getItem(key: string): string;\n  setItem(key: string, value: string): void;\n}\n\nexport function storageAvailable(type: string): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = window[type as \"localStorage\" | \"sessionStorage\"];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (err: unknown) {\n    const error = err as { code: number; name: string };\n    return (\n      error &&\n      // everything except Firefox\n      (error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === \"QuotaExceededError\" ||\n        // Firefox\n        error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n","import { IStorage, storageAvailable } from \"./utils\";\n\nexport class MemoryStore implements IStorage {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key] || null;\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n\nexport class BrowserStorage {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: BrowserStorage;\n\n  public storage: IStorage;\n\n  private _storeKey: string;\n\n  private constructor(storeKey: string, storage: IStorage) {\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(key: string, storageKey: \"session\" | \"local\" = \"local\"): BrowserStorage {\n    if (!this.instance) {\n      let storage: IStorage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n\n      this.instance = new this(key, storage);\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(this._storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n","import { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from \"@toruslabs/constants\";\n\nexport const storeKey = \"openlogin_store\";\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const OPENLOGIN_NETWORK = {\n  ...TORUS_SAPPHIRE_NETWORK,\n  ...TORUS_LEGACY_NETWORK,\n} as const;\n\nexport const SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\",\n} as const;\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\",\n} as const;\n\nexport const MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\",\n} as const;\n\nexport const OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MODIFY_MFA: \"modify_mfa\",\n} as const;\n\nexport const BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\",\n} as const;\n\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n","import { type TORUS_LEGACY_NETWORK_TYPE } from \"@toruslabs/constants\";\n\nimport { BUILD_ENV, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_ACTIONS, OPENLOGIN_NETWORK, SUPPORTED_KEY_CURVES, UX_MODE } from \"./constants\";\n\nexport { TORUS_LEGACY_NETWORK_TYPE };\n\nexport type UX_MODE_TYPE = (typeof UX_MODE)[keyof typeof UX_MODE];\n\nexport type OriginData = {\n  [P in string]: string;\n};\n\nexport type UserData = {\n  [P in string]: string;\n};\n\nexport type BaseRedirectParams = {\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n  /**\n   * Any custom state you wish to pass along. This will be returned to you post redirect.\n   * Use this to store data that you want to be available to the dapp after login.\n   */\n  appState?: string;\n};\n\n/**\n * {@label loginProviderType}\n */\nexport type LOGIN_PROVIDER_TYPE = (typeof LOGIN_PROVIDER)[keyof typeof LOGIN_PROVIDER];\n\nexport type OPENLOGIN_ACTIONS_TYPE = (typeof OPENLOGIN_ACTIONS)[keyof typeof OPENLOGIN_ACTIONS];\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\nexport type CUSTOM_LOGIN_PROVIDER_TYPE = string & { toString?: (radix?: number) => string };\n\nexport type MfaLevelType = (typeof MFA_LEVELS)[keyof typeof MFA_LEVELS];\n\nexport type SUPPORTED_KEY_CURVES_TYPE = (typeof SUPPORTED_KEY_CURVES)[keyof typeof SUPPORTED_KEY_CURVES];\n\nexport type OPENLOGIN_NETWORK_TYPE = (typeof OPENLOGIN_NETWORK)[keyof typeof OPENLOGIN_NETWORK];\n\nexport type BUILD_ENV_TYPE = (typeof BUILD_ENV)[keyof typeof BUILD_ENV];\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\" | string;\n  /**\n   * - `'none'`: do not prompt user for login or consent on re-authentication\n   * - `'login'`: prompt user for re-authentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\" | string;\n  /**\n   * Maximum allowable elapsed time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be re-authenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface ExtraLoginOptions extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport type LoginParams = BaseRedirectParams & {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n\n  /**\n   * You can set the `mfaLevel` to customize when mfa screen should be shown to user.\n   * It currently accepts 4 values:-\n   * - `'default'`: Setting mfa level to `default` will present mfa screen to user on every third login.\n   * - `'optional'`: Setting mfa level to `default` will present mfa screen to user on every login but user can skip it.\n   * - `'mandatory'`: Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login.\n   * - `'none'`: Setting mfa level to `none` will make the user skip the mfa setup screen\n   *\n   * Defaults to `default`\n   * @defaultValue `default`\n   */\n  mfaLevel?: MfaLevelType;\n\n  /**\n   * This option is for internal use only in torus wallet and has no effect\n   * on user's login on other dapps.\n   *\n   * Defaults to false\n   * @defaultValue false\n   * @internal\n   */\n  getWalletKey?: boolean;\n\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user's email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n\n  /**\n   * Custom Logins can get a dapp share returned to them post successful login.\n   * This is useful if the dapps want to use this share to allow users to login seamlessly\n   * dappShare is a 24 word seed phrase\n   */\n  dappShare?: string;\n\n  /**\n   * This curve will be used to determine the public key encoded in the jwt token which returned in\n   * `getUserInfo` function after user login.\n   * You can use that public key from jwt token as a unique user identifier in your backend.\n   *\n   * - `'secp256k1'`: secp256k1 based pub key is added as a wallet public key in jwt token to use.\n   * - `'ed25519'`: ed25519 based pub key is added as a wallet public key in jwt token to use.\n   *\n   * Note: This parameter won't change format of private key returned by openlogin. Private key returned\n   * by openlogin is always `secp256k1`. As of now you have to convert it to `'ed25519'` if you want.\n   * You can use `@toruslabs/openlogin-ed25519` npm package for this purpose.\n   *\n   *\n   * @defaultValue secp256k1\n   */\n  curve?: SUPPORTED_KEY_CURVES_TYPE;\n};\n\nexport type SocialMfaModParams = {\n  /**\n   * loginProvider sets the oauth login method to be used.\n   * You can use any of the valid loginProvider from the supported list.\n   */\n  loginProvider: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n\n  /**\n   * extraLoginOptions can be used to pass standard oauth login options to\n   * loginProvider.\n   *\n   * For ex: you will have to pass `login_hint` as user's email and `domain`\n   * as your app domain in `extraLoginOptions` while using `email_passwordless`\n   * loginProvider\n   */\n  extraLoginOptions?: ExtraLoginOptions;\n};\nexport const LANGUAGES = {\n  en: \"en\",\n  ja: \"ja\",\n  ko: \"ko\",\n  de: \"de\",\n  zh: \"zh\",\n  es: \"es\",\n  fr: \"fr\",\n  pt: \"pt\",\n  nl: \"nl\",\n} as const;\n\nexport type LANGUAGE_TYPE = (typeof LANGUAGES)[keyof typeof LANGUAGES];\n\nexport const THEME_MODES = {\n  light: \"light\",\n  dark: \"dark\",\n  auto: \"auto\",\n};\n\nexport type THEME_MODE_TYPE = (typeof THEME_MODES)[keyof typeof THEME_MODES];\n\nexport type WhiteLabelData = {\n  /**\n   * App name to display in the UI\n   */\n  appName?: string;\n  /**\n   * App url\n   */\n  appUrl?: string;\n  /**\n   * App logo to use in light mode\n   */\n  logoLight?: string;\n  /**\n   * App logo to use in dark mode\n   */\n  logoDark?: string;\n  /**\n   * language which will be used by web3auth. app will use browser language if not specified. if language is not supported it will use \"en\"\n   * en: english\n   * de: german\n   * ja: japanese\n   * ko: korean\n   * zh: mandarin\n   * es: spanish\n   * fr: french\n   * pt: portuguese\n   * nl: dutch\n   *\n   * @defaultValue en\n   */\n  defaultLanguage?: LANGUAGE_TYPE;\n  /**\n   theme\n   *\n   * @defaultValue auto\n   */\n  mode?: THEME_MODE_TYPE;\n  /**\n   * Use logo loader\n   *\n   * @defaultValue false\n   */\n  useLogoLoader?: boolean;\n\n  /**\n   * Used to customize theme of the login modal with following options\n   * `'primary'` - To customize primary color of modal's content.\n   */\n  theme?: {\n    primary?: string;\n    gray?: string;\n    red?: string;\n    green?: string;\n    success?: string;\n    warning?: string;\n    error?: string;\n    info?: string;\n    white?: string;\n  };\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * tncLink: {\n   *  en: \"http://example.com/tnc/en\",\n   *  ja: \"http://example.com/tnc/ja\",\n   * }\n   */\n  tncLink?: Partial<Record<LANGUAGE_TYPE, string>>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   * e.g.\n   * privacyPolicy: {\n   *  en: \"http://example.com/tnc/en\",\n   *  ja: \"http://example.com/tnc/ja\",\n   * }\n   */\n  privacyPolicy?: Partial<Record<LANGUAGE_TYPE, string>>;\n};\n\nexport type TypeOfLogin =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"email_password\"\n  | \"passwordless\"\n  | \"jwt\"\n  | \"webauthn\";\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain?: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport type LoginConfig = Record<\n  string,\n  {\n    verifier: string;\n\n    /**\n     * The type of login. Refer to enum `LOGIN_TYPE`\n     */\n    typeOfLogin: TypeOfLogin;\n\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name?: string;\n\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n\n    /**\n     * Custom client_id. If not provided, we use the default for openlogin app\n     */\n    clientId?: string;\n\n    verifierSubIdentifier?: string;\n\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n\n    /**\n     * If we are using social logins as a backup factor,\n     * then this option will be used to show the type of social login\n     * on the social backup login screen.\n     */\n    showOnSocialBackupFactor?: boolean;\n\n    /**\n     * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n     */\n    jwtParameters?: JwtParameters;\n  }\n>;\n\nexport type OpenloginUserInfo = {\n  email?: string;\n  name?: string;\n  profileImage?: string;\n  aggregateVerifier?: string;\n  verifier: string;\n  verifierId: string;\n  typeOfLogin: LOGIN_PROVIDER_TYPE | CUSTOM_LOGIN_PROVIDER_TYPE;\n  dappShare?: string;\n  /**\n   * Token issued by Web3Auth.\n   */\n  idToken?: string;\n\n  /**\n   * Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthIdToken?: string;\n\n  /**\n   * Access Token issued by OAuth provider. Will be available only if you are using\n   * custom verifiers.\n   */\n  oAuthAccessToken?: string;\n  appState?: string;\n  touchIDPreference?: string;\n  isMfaEnabled?: boolean;\n};\n\nexport type KeyMode = \"v1\" | \"1/1\" | \"2/n\";\n\nexport interface OpenloginSessionData {\n  privKey?: string;\n  coreKitKey?: string;\n  ed25519PrivKey?: string;\n  coreKitEd25519PrivKey?: string;\n  sessionId?: string;\n  oAuthPrivateKey?: string;\n  tKey?: string;\n  walletKey?: string;\n  userInfo?: OpenloginUserInfo;\n  keyMode?: KeyMode;\n  metadataNonce?: string;\n  authToken?: string;\n  factorKey?: string;\n  signatures?: string[];\n  tssShareIndex?: number;\n  tssPubKey?: string;\n  tssShare?: string;\n  tssNonce?: number;\n  nodeIndexes?: number[];\n}\n\nexport const MFA_FACTOR = {\n  DEVICE: \"deviceShareFactor\",\n  BACKUP_SHARE: \"backUpShareFactor\",\n  SOCIAL_BACKUP: \"socialBackupFactor\",\n  PASSWORD: \"passwordFactor\",\n} as const;\n\nexport type MFA_FACTOR_TYPE = (typeof MFA_FACTOR)[keyof typeof MFA_FACTOR];\nexport type MFA_SETTINGS = {\n  enable: boolean;\n  priority?: number;\n  mandatory?: boolean;\n};\n\nexport type MfaSettings = Partial<Record<MFA_FACTOR_TYPE, MFA_SETTINGS>>;\n\nexport type OpenLoginOptions = {\n  /**\n   * You can get your clientId/projectId by registering your\n   * dapp on {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   */\n  clientId: string;\n\n  /**\n   * network specifies the openlogin sdk url to be used.\n   *\n   * - `'mainnet'`: https://app.openlogin.com will be used which is the production version.\n   * - `'cyan'`: https://cyan.openlogin.com will be used which is the production cyan version.\n   * - `'testnet'`: https://testing.openlogin.com will be used which is the testing version.\n   * - `'development'`: http://localhost:3000 will be used for development purpose.\n   */\n  network: OPENLOGIN_NETWORK_TYPE;\n\n  /**\n   * This parameter will be used to change the build environment of openlogin sdk.\n   * @defaultValue production\n   */\n  buildEnv?: BUILD_ENV_TYPE;\n\n  /**\n   * redirectUrl is the dapp's url where user will be redirected after login.\n   *\n   * @remarks\n   * Register this url at {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * else initialization will give error.\n   */\n  redirectUrl?: string;\n\n  /**\n   * two uxModes are supported:-\n   * - `'POPUP'`: In this uxMode, a popup will be shown to user for login.\n   * - `'REDIRECT'`: In this uxMode, user will be redirected to a new window tab for login.\n   *\n   * @defaultValue `'POPUP'`\n   * @remarks\n   *\n   * Use of `'REDIRECT'` mode is recommended in browsers where popups might get blocked.\n   */\n  uxMode?: UX_MODE_TYPE;\n\n  /**\n   * replaceUrlOnRedirect removes the params from the redirected url after login\n   *\n   * @defaultValue true\n   */\n  replaceUrlOnRedirect?: boolean;\n\n  /**\n   * originData is used to verify the origin of dapp by iframe.\n   *\n   * @internal\n   * @remarks\n   * You don't have to pass originData explicitly if you have registered your dapp at\n   * {@link \"https://dashboard.web3auth.io\"| developer dashboard}.\n   *\n   * originData contains a signature of dapp's origin url which is generated using\n   * project's secret.\n   */\n  originData?: OriginData;\n\n  /**\n   * loginConfig enables you to pass your own login verifiers configuration for various\n   * loginProviders.\n   *\n   * loginConfig is key value map where each key should be a valid loginProvider and value\n   * should be custom configuration for that loginProvider\n   *\n   * @remarks\n   * You can deploy your own verifiers from {@link \"https://dashboard.web3auth.io\"| developer dashboard}\n   * to use here.\n   *\n   */\n  loginConfig?: LoginConfig;\n\n  /**\n   * webauthnTransport enables you to configure the transport type user can use\n   * for saving their share.\n   *\n   * @defaultValue [\"internal\"]\n   *\n   * @remarks\n   * This is only available for v1 users.\n   */\n  webauthnTransports?: AuthenticatorTransport[];\n\n  /**\n   * sdkUrl is for internal development use only and is used to override the\n   * `network` parameter.\n   * @internal\n   */\n  sdkUrl?: string;\n\n  /**\n   * options for whitelabling default openlogin modal.\n   */\n  whiteLabel?: WhiteLabelData;\n\n  /**\n   * Specify a custom storage server url\n   * @defaultValue https://broadcast-server.tor.us\n   * @internal\n   */\n  storageServerUrl?: string;\n\n  /**\n   * setting to \"local\" will persist social login session accross browser tabs.\n   *\n   * @defaultValue \"local\"\n   */\n  storageKey?: \"session\" | \"local\";\n\n  /**\n   * How long should a login session last at a minimum in seconds\n   *\n   * @defaultValue 86400 seconds\n   * @remarks Max value of sessionTime can be 7 * 86400 (7 days)\n   */\n  sessionTime?: number;\n\n  /**\n   * This option is for internal use only in torus wallet and has no effect\n   * on user's login on other dapps.\n   * @internal\n   */\n  sessionNamespace?: string;\n\n  /**\n   * This parameter will be used to enable mfa factors and set priority on UI listing.\n   * List of factors available\n   * backUpShareFactor | socialFactor | passwordFactor\n   * @defaultValue false\n   */\n  mfaSettings?: MfaSettings;\n\n  /**\n   * This parameter will be used to use openlogin mpc\n   * @defaultValue false\n   */\n  useMpc?: boolean;\n};\n\nexport interface BaseLoginParams {\n  loginId?: string;\n  sessionNamespace?: string;\n}\n\nexport interface OpenloginSessionConfig {\n  actionType: OPENLOGIN_ACTIONS_TYPE;\n  options: OpenLoginOptions;\n  params: Partial<LoginParams>;\n  sessionId?: string;\n}\n","import { get, patch, post, put } from \"@toruslabs/http-helpers\";\n\nimport { ApiRequestParams, ISessionManager } from \"./interfaces\";\n\nexport abstract class BaseSessionManager<TSessionData> implements ISessionManager<TSessionData> {\n  sessionId: string;\n\n  checkSessionParams() {\n    if (!this.sessionId) throw new Error(\"Session id is required\");\n    this.sessionId = this.sessionId.padStart(64, \"0\");\n  }\n\n  /**\n   * Common handler method for making an http request.\n   *\n   * Note: Embed all the query parameters in the path itself.\n   */\n  protected request<T>({ method = \"GET\", url, data = {}, headers = {} }: ApiRequestParams): Promise<T> {\n    const options = { headers };\n\n    switch (method) {\n      case \"GET\":\n        return get<T>(url, options);\n      case \"POST\":\n        return post<T>(url, data, options);\n      case \"PUT\":\n        return put<T>(url, data, options);\n      case \"PATCH\":\n        return patch<T>(url, data, options);\n    }\n\n    throw new Error(\"Invalid method type\");\n  }\n\n  abstract createSession(data: TSessionData): Promise<string>;\n\n  abstract authorizeSession(): Promise<TSessionData>;\n\n  abstract updateSession(data: Partial<TSessionData>): Promise<void>;\n\n  abstract invalidateSession(): Promise<boolean>;\n}\n","import nodeCrypto from \"crypto\";\nimport { ec as EC } from \"elliptic\";\n\nconst ec = new EC(\"secp256k1\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst browserCrypto = global.crypto || (global as any).msCrypto || {};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst subtle = browserCrypto.subtle || (browserCrypto as any).webkitSubtle;\n\nconst EC_GROUP_ORDER = Buffer.from(\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\", \"hex\");\nconst ZERO32 = Buffer.alloc(32, 0);\n\nexport interface Ecies {\n  iv: Buffer;\n  ephemPublicKey: Buffer;\n  ciphertext: Buffer;\n  mac: Buffer;\n}\n\nfunction assert(condition: boolean, message: string) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\nfunction isScalar(x: Buffer): boolean {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey: Buffer): boolean {\n  if (!isScalar(privateKey)) {\n    return false;\n  }\n  return (\n    privateKey.compare(ZERO32) > 0 &&\n    // > 0\n    privateKey.compare(EC_GROUP_ORDER) < 0\n  ); // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1: Buffer, b2: Buffer): boolean {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i]; // jshint ignore:line\n  }\n\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size: number): Buffer {\n  const arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === \"undefined\") {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  }\n  browserCrypto.getRandomValues(arr);\n\n  return Buffer.from(arr);\n}\n\nasync function sha512(msg: Buffer): Promise<Uint8Array> {\n  if (subtle) {\n    const hash = await subtle.digest(\"SHA-512\", msg);\n    const result = new Uint8Array(hash);\n    return result;\n  }\n  const hash = nodeCrypto.createHash(\"sha512\");\n  const result = hash.update(msg).digest();\n  return new Uint8Array(result);\n}\n\ntype AesFunctionType = (iv: Buffer, key: Buffer, data: Buffer) => Promise<Buffer>;\n\nfunction getAes(op: \"encrypt\" | \"decrypt\"): AesFunctionType {\n  return async function (iv: Buffer, key: Buffer, data: Buffer) {\n    if (subtle) {\n      const importAlgorithm = {\n        name: \"AES-CBC\",\n      };\n      const cryptoKey = await subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n      const encAlgorithm = {\n        name: \"AES-CBC\",\n        iv,\n      };\n      const result = await subtle[op](encAlgorithm, cryptoKey, data);\n      return Buffer.from(new Uint8Array(result));\n    } else if (op === \"encrypt\") {\n      const cipher = nodeCrypto.createCipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = cipher.update(data);\n      const secondChunk = cipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    } else if (op === \"decrypt\") {\n      const decipher = nodeCrypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n      const firstChunk = decipher.update(data);\n      const secondChunk = decipher.final();\n      return Buffer.concat([firstChunk, secondChunk]);\n    }\n    throw new Error(`Unsupported operation: ${op}`);\n  };\n}\nconst aesCbcEncrypt = getAes(\"encrypt\");\nconst aesCbcDecrypt = getAes(\"decrypt\");\n\nasync function hmacSha256Sign(key: Buffer, msg: Buffer): Promise<Buffer> {\n  if (subtle) {\n    const importAlgorithm = {\n      name: \"HMAC\",\n      hash: {\n        name: \"SHA-256\",\n      },\n    };\n    const cryptoKey = await subtle.importKey(\"raw\", new Uint8Array(key), importAlgorithm, false, [\"sign\", \"verify\"]);\n    const sig = await subtle.sign(\"HMAC\", cryptoKey, msg);\n    const result = Buffer.from(new Uint8Array(sig));\n    return result;\n  }\n  const hmac = nodeCrypto.createHmac(\"sha256\", Buffer.from(key));\n  hmac.update(msg);\n  const result = hmac.digest();\n  return result;\n}\nasync function hmacSha256Verify(key: Buffer, msg: Buffer, sig: Buffer): Promise<boolean> {\n  const expectedSig = await hmacSha256Sign(key, msg);\n  return equalConstTime(expectedSig, sig);\n}\n\n/**\n * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n * depending on your browser.\n */\nexport const generatePrivate = function (): Buffer {\n  let privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nexport const getPublic = function (privateKey: Buffer): Buffer {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"array\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nexport const getPublicCompressed = function (privateKey: Buffer): Buffer {\n  // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  const compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"array\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexport const sign = async function (privateKey: Buffer, msg: Buffer): Promise<Buffer> {\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  return Buffer.from(\n    ec\n      .sign(msg, privateKey, {\n        canonical: true,\n      })\n      .toDER()\n  );\n};\n\nexport const verify = async function (publicKey: Buffer, msg: Buffer, sig: Buffer): Promise<null> {\n  assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n  if (publicKey.length === 65) {\n    assert(publicKey[0] === 4, \"Bad public key\");\n  }\n  if (publicKey.length === 33) {\n    assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n  }\n  assert(msg.length > 0, \"Message should not be empty\");\n  assert(msg.length <= 32, \"Message is too long\");\n  if (ec.verify(msg, sig, publicKey)) {\n    return null;\n  }\n  throw new Error(\"Bad signature\");\n};\n\nexport const derive = async function (privateKeyA: Buffer, publicKeyB: Buffer): Promise<Buffer> {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toArray());\n};\n\nexport const deriveUnpadded = derive;\n\nexport const derivePadded = async function (privateKeyA: Buffer, publicKeyB: Buffer): Promise<Buffer> {\n  assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n  assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n  assert(privateKeyA.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n  assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n  if (publicKeyB.length === 65) {\n    assert(publicKeyB[0] === 4, \"Bad public key\");\n  }\n  if (publicKeyB.length === 33) {\n    assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n  }\n  const keyA = ec.keyFromPrivate(privateKeyA);\n  const keyB = ec.keyFromPublic(publicKeyB);\n  const Px = keyA.derive(keyB.getPublic()); // BN instance\n  return Buffer.from(Px.toString(16, 64), \"hex\");\n};\n\nexport const encrypt = async function (publicKeyTo: Buffer, msg: Buffer, opts?: { iv?: Buffer; ephemPrivateKey?: Buffer }): Promise<Ecies> {\n  opts = opts || {};\n\n  let ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  // There is a very unlikely possibility that it is not a valid key\n  while (!isValidPrivateKey(ephemPrivateKey)) {\n    ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n  }\n  const ephemPublicKey = getPublic(ephemPrivateKey);\n  const Px = await deriveUnpadded(ephemPrivateKey, publicKeyTo);\n  const hash = await sha512(Px);\n  const iv = opts.iv || randomBytes(16);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const data = await aesCbcEncrypt(iv, Buffer.from(encryptionKey), msg);\n  const ciphertext = data;\n  const dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n  const mac = await hmacSha256Sign(Buffer.from(macKey), dataToMac);\n  return {\n    iv,\n    ephemPublicKey,\n    ciphertext,\n    mac,\n  };\n};\n\nexport const decrypt = async function (privateKey: Buffer, opts: Ecies, _padding?: boolean): Promise<Buffer> {\n  const padding = _padding ?? false;\n  const deriveLocal = padding ? derivePadded : deriveUnpadded;\n  const Px = await deriveLocal(privateKey, opts.ephemPublicKey);\n  const hash = await sha512(Px);\n  const encryptionKey = hash.slice(0, 32);\n  const macKey = hash.slice(32);\n  const dataToMac = Buffer.concat([opts.iv, opts.ephemPublicKey, opts.ciphertext]);\n  const macGood = await hmacSha256Verify(Buffer.from(macKey), dataToMac, opts.mac);\n  if (!macGood && padding === false) {\n    return decrypt(privateKey, opts, true);\n  } else if (!macGood && padding === true) {\n    throw new Error(\"bad MAC after trying padded\");\n  }\n  const msg = await aesCbcDecrypt(opts.iv, Buffer.from(encryptionKey), opts.ciphertext);\n  return Buffer.from(new Uint8Array(msg));\n};\n","import { ec as EC } from \"elliptic\";\nimport { keccak256 as keccakHash } from \"ethereum-cryptography/keccak\";\n\nexport function keccak256(a: Buffer): Buffer {\n  return Buffer.from(keccakHash(a));\n}\n\nexport const ec = new EC(\"secp256k1\");\n","import { decrypt, Ecies, encrypt, getPublic } from \"@toruslabs/eccrypto\";\n\nimport MetadataStorageLayer, { PubKeyParams } from \"./MetadataStorageLayer\";\nimport { ec } from \"./utils\";\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\n\nexport type EciesHex = {\n  iv: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n  mac: string;\n};\n\nexport function encParamsHexToBuf(encParamsHex: EciesHex): Ecies {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\"),\n  };\n}\n\nexport function encParamsBufToHex(encParams: Ecies): EciesHex {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\"),\n  };\n}\n\nexport async function encryptData(privKeyHex: string, d: unknown): Promise<string> {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\n\nexport async function decryptData<T>(privKeyHex: string, d: string): Promise<T> {\n  const encParamsHex: EciesHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data: T = JSON.parse(serializedDec);\n  return data;\n}\n\nexport async function getAndDecryptData<T>(m: MetadataStorageLayer, privKeyHex: string, namespace: string): Promise<Record<string, T> | null> {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({ pub_key_X: pubKey.getX().toString(16), pub_key_Y: pubKey.getY().toString(16) }, namespace);\n  if (!serializedData) {\n    return null;\n  }\n  const data = await decryptData<T>(privKeyHex, serializedData);\n  return data as Record<string, T>;\n}\n\nexport async function encryptAndSetData(m: MetadataStorageLayer, privKeyHex: string, d: Record<string, unknown>, namespace: string): Promise<void> {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\n\nexport async function setTorusShare(\n  m: MetadataStorageLayer,\n  webAuthnPubKey: PubKeyParams,\n  webAuthnRefHex: string,\n  subspace: string,\n  subspaceData: unknown\n): Promise<void> {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y,\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\n\nexport async function setDeviceShare(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string, subspaceData: unknown): Promise<void> {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\n\nexport async function getTorusShare<T>(m: MetadataStorageLayer, webAuthnKeyHex: string, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<EciesHex>(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\n\nexport async function getDeviceShare<T>(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<T>(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n","import { BaseSessionManager } from \"@toruslabs/base-session-manager\";\nimport { generatePrivate, getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\n\nimport { OpenloginSessionManagerOptions, SessionApiResponse, SessionRequestBody } from \"./interfaces\";\n\nconst DEFAULT_SESSION_TIMEOUT = 86400;\nexport class OpenloginSessionManager<T> extends BaseSessionManager<T> {\n  sessionServerBaseUrl = \"https://broadcast-server.tor.us\";\n\n  sessionNamespace: string;\n\n  sessionTime: number = DEFAULT_SESSION_TIMEOUT;\n\n  public sessionId: string = \"\";\n\n  constructor({ sessionServerBaseUrl, sessionNamespace, sessionTime, sessionId }: OpenloginSessionManagerOptions = {}) {\n    super();\n\n    if (sessionServerBaseUrl) {\n      this.sessionServerBaseUrl = sessionServerBaseUrl;\n    }\n    if (sessionNamespace) this.sessionNamespace = sessionNamespace;\n    if (sessionTime) this.sessionTime = sessionTime;\n    if (sessionId) this.sessionId = sessionId.padStart(64, \"0\");\n  }\n\n  static generateRandomSessionKey(): string {\n    return generatePrivate().toString(\"hex\").padStart(64, \"0\");\n  }\n\n  async createSession(data: T): Promise<string> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const body: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: this.sessionTime,\n    };\n\n    await super.request({ method: \"POST\", url: `${this.sessionServerBaseUrl}/store/set`, data: body });\n\n    return this.sessionId;\n  }\n\n  async authorizeSession(): Promise<T> {\n    super.checkSessionParams();\n    const pubkey = getPublic(Buffer.from(this.sessionId, \"hex\")).toString(\"hex\");\n    const url = new URL(`${this.sessionServerBaseUrl}/store/get`);\n    url.searchParams.append(\"key\", pubkey);\n    if (this.sessionNamespace) url.searchParams.append(\"namespace\", this.sessionNamespace);\n\n    const result = await super.request<SessionApiResponse>({ url: url.toString() });\n    if (!result.message) {\n      throw new Error(\"Session Expired or Invalid public key\");\n    }\n\n    const response = await decryptData<T & { error?: string }>(this.sessionId, result.message);\n    if (response.error) {\n      throw new Error(\"There was an error decrypting data.\");\n    }\n\n    return response;\n  }\n\n  async updateSession(data: Partial<T>): Promise<void> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const body: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n    };\n\n    await super.request({ method: \"PUT\", url: `${this.sessionServerBaseUrl}/store/update`, data: body });\n  }\n\n  async invalidateSession(): Promise<boolean> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, {});\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const data: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: 1,\n    };\n\n    await super.request({ method: \"POST\", url: `${this.sessionServerBaseUrl}/store/set`, data });\n    this.sessionId = \"\";\n    return true;\n  }\n}\n","import base64urlLib from \"base64url\";\n\nexport const base64url = base64urlLib;\n\nexport function safebtoa(str: string): string {\n  return base64url.encode(str);\n}\n\nexport function safeatob(str: string): string {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nexport function base64toJSON<T = Record<string, unknown>>(b64str: string): T {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nexport function jsonToBase64<T = Record<string, unknown>>(json: T): string {\n  return base64url.encode(JSON.stringify(json));\n}\n\nexport interface IStorage {\n  getItem(key: string): string;\n  setItem(key: string, value: string): void;\n}\n\nexport function storageAvailable(type: string): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = window[type as \"localStorage\" | \"sessionStorage\"];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (err: unknown) {\n    const error = err as { code: number; name: string };\n    return (\n      error &&\n      // everything except Firefox\n      (error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === \"QuotaExceededError\" ||\n        // Firefox\n        error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n","import { IStorage, storageAvailable } from \"./utils\";\n\nexport class MemoryStore implements IStorage {\n  store: Record<string, string> = {};\n\n  getItem(key: string): string {\n    return this.store[key] || null;\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n\nexport class BrowserStorage {\n  // eslint-disable-next-line no-use-before-define\n  private static instance: BrowserStorage;\n\n  public storage: IStorage;\n\n  private _storeKey: string;\n\n  private constructor(storeKey: string, storage: IStorage) {\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n\n  static getInstance(key: string, storageKey: \"session\" | \"local\" = \"local\"): BrowserStorage {\n    if (!this.instance) {\n      let storage: IStorage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n\n      this.instance = new this(key, storage);\n    }\n    return this.instance;\n  }\n\n  toJSON(): string {\n    return this.storage.getItem(this._storeKey);\n  }\n\n  resetStore(): Record<string, unknown> {\n    const currStore = this.getStore();\n    this.storage.setItem(this._storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore(): Record<string, unknown> {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n\n  get<T>(key: string): T {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n\n  set<T>(key: string, value: T): void {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n","import { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from \"@toruslabs/constants\";\n\nexport const storeKey = \"openlogin_store\";\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const OPENLOGIN_NETWORK = {\n  ...TORUS_SAPPHIRE_NETWORK,\n  ...TORUS_LEGACY_NETWORK,\n} as const;\n\nexport const SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\",\n} as const;\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\",\n} as const;\n\nexport const MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\",\n} as const;\n\nexport const OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MODIFY_MFA: \"modify_mfa\",\n} as const;\n\nexport const BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\",\n} as const;\n\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK };\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import log from \"loglevel\";\n\nexport default log.getLogger(\"SecurePubSub\");\n","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { post, setLogLevel } from \"@toruslabs/http-helpers\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { LogLevelDesc } from \"loglevel\";\nimport { io, type Socket } from \"socket.io-client\";\n\nimport { ISecurePubSubOptions, SetDataBody } from \"./interfaces\";\nimport log from \"./log\";\n\nexport class SecurePubSub {\n  options: ISecurePubSubOptions;\n\n  SOCKET_CONN: Socket | null = null;\n\n  constructor(options: ISecurePubSubOptions = {}) {\n    this.options = options;\n    this.options.timeout = options.timeout || 600; // 10 mins is default timeout\n    this.options.serverUrl = options.serverUrl || \"https://broadcast-server.tor.us\";\n    this.options.enableLogging = options.enableLogging || false;\n    this.options.namespace = options.namespace || \"\";\n    if (this.options.enableLogging) log.enableAll();\n    else log.disableAll();\n  }\n\n  static setLogLevel(level: LogLevelDesc) {\n    log.setLevel(level);\n    setLogLevel(level);\n  }\n\n  async publish(topic: string, message: string): Promise<void> {\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const encryptedData = await encryptData(topicPrivKey.toString(\"hex\"), message);\n    const signature = await sign(topicPrivKey, keccak256(Buffer.from(encryptedData, \"utf8\")));\n    const fetchBody: SetDataBody = {\n      key: getPublic(topicPrivKey).toString(\"hex\"), // already padded\n      data: encryptedData,\n      signature: signature.toString(\"hex\"),\n      timeout: this.options.timeout,\n      namespace: this.options.namespace,\n    };\n    return post(`${this.options.serverUrl}/channel/set`, fetchBody);\n  }\n\n  async subscribe(topic: string): Promise<string> {\n    let isPromisePending = true;\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const topicPubKey = getPublic(topicPrivKey).toString(\"hex\"); // already padded\n    const currentSocketConnection = this.getSocketConnection();\n    if (currentSocketConnection.connected) {\n      log.debug(\"already connected with socket\");\n      currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n    } else {\n      currentSocketConnection.once(\"connect\", () => {\n        log.debug(\"connected with socket\");\n        currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n      });\n    }\n\n    const reconnect = () => {\n      currentSocketConnection.once(\"connect\", async () => {\n        log.debug(\"connected with socket using reconnect\");\n        if (isPromisePending) currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n      });\n    };\n\n    const visibilityListener = () => {\n      if (!isPromisePending) document.removeEventListener(\"visibilitychange\", visibilityListener);\n      // if not connected, then wait for connection and ping server for latest msg.\n      if (!currentSocketConnection.connected && document.visibilityState === \"visible\") {\n        reconnect();\n      }\n    };\n\n    const disconnectListener = () => {\n      log.debug(\"socket disconnected\", isPromisePending);\n      if (isPromisePending) {\n        log.error(\"socket disconnected unexpectedly, reconnecting socket\");\n        reconnect();\n      } else {\n        currentSocketConnection.removeListener(\"disconnect\", disconnectListener);\n      }\n    };\n\n    currentSocketConnection.on(\"disconnect\", disconnectListener);\n\n    const returnPromise = new Promise<string>((resolve, reject) => {\n      const listener = async (ev: string) => {\n        try {\n          const decData = await decryptData(topicPrivKey.toString(\"hex\"), ev);\n          log.info(\"got data\", decData);\n          resolve(decData as string);\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        } finally {\n          isPromisePending = false;\n          document.removeEventListener(\"visibilitychange\", visibilityListener);\n        }\n      };\n      log.info(\"listening to\", `${topicPubKey}_success`);\n      currentSocketConnection.once(`${topicPubKey}_success`, listener);\n    });\n\n    if (typeof document !== \"undefined\") document.addEventListener(\"visibilitychange\", visibilityListener);\n    return returnPromise;\n  }\n\n  public cleanup() {\n    if (this.SOCKET_CONN) {\n      this.SOCKET_CONN.disconnect();\n      this.SOCKET_CONN = null;\n    }\n  }\n\n  private getSocketConnection(): Socket {\n    if (this.SOCKET_CONN) return this.SOCKET_CONN;\n    const localSocketConnection = io(this.options.serverUrl, {\n      transports: [\"websocket\", \"polling\"], // use WebSocket first, if available\n      withCredentials: true,\n      reconnectionDelayMax: 10000,\n      reconnectionAttempts: 10,\n    });\n\n    localSocketConnection.on(\"connect_error\", (err) => {\n      // revert to classic upgrade\n      localSocketConnection.io.opts.transports = [\"polling\", \"websocket\"];\n      log.error(\"connect error\", err);\n    });\n    localSocketConnection.on(\"connect\", async () => {\n      const { engine } = localSocketConnection.io;\n      log.debug(\"initially connected to\", engine.transport.name); // in most cases, prints \"polling\"\n      engine.once(\"upgrade\", () => {\n        // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n        log.debug(\"upgraded\", engine.transport.name); // in most cases, prints \"websocket\"\n      });\n      engine.once(\"close\", (reason) => {\n        // called when the underlying connection is closed\n        log.debug(\"connection closed\", reason);\n      });\n    });\n\n    localSocketConnection.on(\"error\", (err) => {\n      log.error(\"socket errored\", err);\n      localSocketConnection.disconnect();\n    });\n\n    this.SOCKET_CONN = localSocketConnection;\n    return this.SOCKET_CONN;\n  }\n}\n","import { CustomError } from \"ts-custom-error\";\n\nexport interface IOpenloginError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class OpenloginError extends CustomError implements IOpenloginError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"OpenloginError\" });\n  }\n\n  toJSON(): IOpenloginError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class InitializationError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Invalid constructor params\",\n    5002: \"SDK not initialized. please call init first\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"InitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidParams(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInitialized(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5002, extraMessage);\n  }\n}\n\n/**\n * login errors\n */\n\nexport class LoginError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Invalid login params\",\n    5112: \"User not logged in.\",\n    5113: \"login popup has been closed by the user\",\n    5114: \"Login failed\",\n    5115: \"Popup was blocked. Please call this function as soon as user clicks button or use redirect mode\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"LoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidLoginParams(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5111, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5112, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5113, extraMessage);\n  }\n\n  public static loginFailed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5114, extraMessage);\n  }\n\n  public static popupBlocked(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5115, extraMessage);\n  }\n}\n","import { getLogger } from \"loglevel\";\n\nexport const loglevel = getLogger(\"openlogin\");\n\nloglevel.setLevel(\"error\");\n","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { base64url, LOGIN_PROVIDER, safeatob, safebtoa } from \"@toruslabs/openlogin-utils\";\nimport bowser from \"bowser\";\n\nimport { loglevel as log } from \"./logger\";\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nexport const version = process.env.OPENLOGIN_VERSION;\n\nexport async function whitelistUrl(clientId: string, appKey: string, origin: string): Promise<string> {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, keccak256(Buffer.from(origin, \"utf8\")));\n  return base64url.encode(sig);\n}\n\nexport type HashQueryParamResult = {\n  sessionId?: string;\n  sessionNamespace?: string;\n  error?: string;\n  state?: string;\n};\n\nexport function getHashQueryParams(replaceUrl = false): HashQueryParamResult {\n  const result: HashQueryParamResult = {};\n\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = new URL(window.location.origin + window.location.pathname);\n    cleanUrl.search = window.location.search;\n    if (hashResult) {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      delete hashParams.sessionId;\n      delete hashParams.sessionNamespace;\n      delete hashParams.error;\n      cleanUrl.hash = safebtoa(JSON.stringify(hashParams));\n    }\n    window.history.replaceState({ ...window.history.state, as: cleanUrl.href, url: cleanUrl.href }, \"\", cleanUrl.href);\n  }\n\n  return result;\n}\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function getPopupFeatures(): string {\n  if (typeof window === \"undefined\") return \"\";\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport function isMobileOrTablet(): boolean {\n  if (typeof window === \"undefined\") return false;\n  const browser = bowser.getParser(window.navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === bowser.PLATFORMS_MAP.tablet || platform.type === bowser.PLATFORMS_MAP.mobile;\n}\n\nexport function getTimeout(loginProvider: string) {\n  if ((loginProvider === LOGIN_PROVIDER.FACEBOOK || loginProvider === LOGIN_PROVIDER.LINE) && isMobileOrTablet()) {\n    return 1000 * 60 * 5; // 5 minutes to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n","import { SecurePubSub } from \"@toruslabs/secure-pub-sub\";\nimport { EventEmitter } from \"events\";\n\nimport { LoginError } from \"./errors\";\nimport { getPopupFeatures } from \"./utils\";\n\nexport interface PopupResponse {\n  sessionId?: string;\n  sessionNamespace?: string;\n  state?: string;\n  error?: string;\n}\nclass PopupHandler extends EventEmitter {\n  url: string;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: string; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url, this.target, this.features);\n    if (!this.window) throw LoginError.popupBlocked();\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url);\n    } else {\n      window.location.href = this.url;\n    }\n  }\n\n  async listenOnChannel(loginId: string): Promise<PopupResponse> {\n    const securePubSub = new SecurePubSub();\n    const data = await securePubSub.subscribe(loginId);\n    this.close();\n    securePubSub.cleanup();\n    const parsedData = JSON.parse(data) as { error?: string; state?: string; data?: { sessionId?: string; sessionNamespace?: string } };\n    if (parsedData.error) {\n      return { error: parsedData.error, state: parsedData.state };\n    }\n    return parsedData.data;\n  }\n}\n\nexport default PopupHandler;\n","import { OpenloginSessionManager } from \"@toruslabs/openlogin-session-manager\";\nimport {\n  BaseLoginParams,\n  BaseRedirectParams,\n  BrowserStorage,\n  BUILD_ENV,\n  jsonToBase64,\n  LoginParams,\n  OPENLOGIN_ACTIONS,\n  OPENLOGIN_NETWORK,\n  OpenLoginOptions,\n  OpenloginSessionConfig,\n  OpenloginSessionData,\n  OpenloginUserInfo,\n  SocialMfaModParams,\n  TORUS_LEGACY_NETWORK,\n  type TORUS_LEGACY_NETWORK_TYPE,\n  UX_MODE,\n} from \"@toruslabs/openlogin-utils\";\n\nimport { InitializationError, LoginError } from \"./errors\";\nimport { loglevel as log } from \"./logger\";\nimport PopupHandler, { PopupResponse } from \"./PopupHandler\";\nimport { constructURL, getHashQueryParams, getTimeout, version } from \"./utils\";\n\nclass OpenLogin {\n  state: OpenloginSessionData = {};\n\n  options: OpenLoginOptions;\n\n  private sessionManager: OpenloginSessionManager<OpenloginSessionData>;\n\n  private currentStorage: BrowserStorage;\n\n  private _storageBaseKey = \"openlogin_store\";\n\n  private dappState: string;\n\n  private addVersionInUrls = true;\n\n  constructor(options: OpenLoginOptions) {\n    if (!options.clientId) throw InitializationError.invalidParams(\"clientId is required\");\n    if (!options.network) options.network = OPENLOGIN_NETWORK.SAPPHIRE_MAINNET;\n    if (!options.buildEnv) options.buildEnv = BUILD_ENV.PRODUCTION;\n    if (options.buildEnv === BUILD_ENV.DEVELOPMENT || options.buildEnv === BUILD_ENV.TESTING || options.sdkUrl) this.addVersionInUrls = false;\n    if (!options.sdkUrl && !options.useMpc) {\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://auth.web3auth.io\";\n      }\n    }\n\n    if (options.useMpc && !options.sdkUrl) {\n      if (Object.values(TORUS_LEGACY_NETWORK).includes(options.network as TORUS_LEGACY_NETWORK_TYPE))\n        throw new Error(\"MPC is not supported on legacy networks\");\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-mpc-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-mpc-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://mpc-auth.web3auth.io\";\n      }\n    }\n\n    if (!options.redirectUrl && typeof window !== \"undefined\") {\n      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n    }\n    if (!options.uxMode) options.uxMode = UX_MODE.REDIRECT;\n    if (typeof options.replaceUrlOnRedirect !== \"boolean\") options.replaceUrlOnRedirect = true;\n    if (!options.originData) options.originData = {};\n    if (!options.whiteLabel) options.whiteLabel = {};\n    if (!options.loginConfig) options.loginConfig = {};\n    if (!options.mfaSettings) options.mfaSettings = {};\n    if (!options.storageServerUrl) options.storageServerUrl = \"https://broadcast-server.tor.us\";\n    if (!options.storageKey) options.storageKey = \"local\";\n    if (!options.webauthnTransports) options.webauthnTransports = [\"internal\"];\n    if (!options.sessionTime) options.sessionTime = 86400;\n\n    this.options = options;\n  }\n\n  get privKey(): string {\n    if (this.options.useMpc) return this.state.factorKey || \"\";\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  get coreKitKey(): string {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n\n  get ed25519PrivKey(): string {\n    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get coreKitEd25519Key(): string {\n    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get sessionId(): string {\n    return this.state.sessionId || \"\";\n  }\n\n  get sessionNamespace(): string {\n    return this.options.sessionNamespace || \"\";\n  }\n\n  get appState(): string {\n    return this.state.userInfo.appState || this.dappState || \"\";\n  }\n\n  private get baseUrl(): string {\n    // testing and develop don't have versioning\n    if (!this.addVersionInUrls) return `${this.options.sdkUrl}`;\n    return `${this.options.sdkUrl}/v${version.split(\".\")[0]}`;\n  }\n\n  async init(): Promise<void> {\n    // get sessionNamespace from the redirect result.\n    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);\n    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;\n\n    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;\n    this.currentStorage = BrowserStorage.getInstance(storageKey, this.options.storageKey);\n\n    const sessionId = this.currentStorage.get<string>(\"sessionId\");\n\n    this.sessionManager = new OpenloginSessionManager({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: this.options.sessionTime,\n      sessionId,\n    });\n\n    if (this.options.network === OPENLOGIN_NETWORK.TESTNET || this.options.network === OPENLOGIN_NETWORK.SAPPHIRE_DEVNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\n        `%c WARNING! You are on ${this.options.network}. Please set network: 'mainnet' or 'sapphire_mainnet' in production`,\n        \"color: #FF0000\"\n      );\n    }\n\n    if (this.options.buildEnv !== BUILD_ENV.PRODUCTION) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(`%c WARNING! You are using build env ${this.options.buildEnv}. Please set buildEnv: 'production' in production`, \"color: #FF0000\");\n    }\n\n    if (params.error) {\n      this.dappState = params.state;\n      throw LoginError.loginFailed(params.error);\n    }\n\n    if (params.sessionId) {\n      this.currentStorage.set(\"sessionId\", params.sessionId);\n      this.sessionManager.sessionId = params.sessionId;\n    }\n\n    if (this.sessionManager.sessionId) {\n      const data = await this._authorizeSession();\n      // Fill state with correct info from session\n      // If session is invalid all the data is unset here.\n      this.updateState(data);\n      if (Object.keys(data).length === 0) {\n        // If session is invalid, unset the sessionId from localStorage.\n        this.currentStorage.set(\"sessionId\", \"\");\n      }\n    }\n  }\n\n  async login(params: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string } | null> {\n    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const loginParams: LoginParams = {\n      loginProvider: params.loginProvider,\n      ...defaultParams,\n      ...params,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.LOGIN,\n      options: this.options,\n      params: loginParams,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return { privKey: this.privKey };\n  }\n\n  async logout(): Promise<void> {\n    if (!this.sessionManager.sessionId) throw LoginError.userNotLoggedIn();\n    await this.sessionManager.invalidateSession();\n    this.updateState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      coreKitEd25519PrivKey: \"\",\n      ed25519PrivKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      metadataNonce: \"\",\n      keyMode: undefined,\n      userInfo: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        appState: \"\",\n        email: \"\",\n        verifier: \"\",\n        verifierId: \"\",\n        aggregateVerifier: \"\",\n        typeOfLogin: \"\",\n        isMfaEnabled: false,\n      },\n      authToken: \"\",\n      sessionId: \"\",\n      factorKey: \"\",\n      signatures: [],\n      tssShareIndex: -1,\n      tssPubKey: \"\",\n      tssShare: \"\",\n      tssNonce: -1,\n    });\n\n    this.currentStorage.set(\"sessionId\", \"\");\n  }\n\n  async setupMFA(params: Partial<BaseRedirectParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.ENABLE_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return true;\n  }\n\n  async changeSocialFactor(params: SocialMfaModParams & Partial<BaseRedirectParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.MODIFY_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return true;\n  }\n\n  getUserInfo(): OpenloginUserInfo {\n    if (!this.sessionManager.sessionId) {\n      throw LoginError.userNotLoggedIn();\n    }\n    return this.state.userInfo;\n  }\n\n  async getLoginId(data: OpenloginSessionConfig): Promise<string> {\n    if (!this.sessionManager) throw InitializationError.notInitialized();\n\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    const loginSessionMgr = new OpenloginSessionManager<OpenloginSessionConfig>({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: 600, // each login key must be used with 10 mins (might be used at the end of popup redirect)\n      sessionId: loginId,\n    });\n\n    await loginSessionMgr.createSession(JSON.parse(JSON.stringify(data)));\n\n    return loginId;\n  }\n\n  private async _authorizeSession(): Promise<OpenloginSessionData> {\n    try {\n      if (!this.sessionManager.sessionId) return {};\n      const result = await this.sessionManager.authorizeSession();\n      return result;\n    } catch (err) {\n      log.error(\"authorization failed\", err);\n      return {};\n    }\n  }\n\n  private updateState(data: Partial<OpenloginSessionData>) {\n    this.state = { ...this.state, ...data };\n  }\n\n  private async rehydrateSession(): Promise<void> {\n    const result = await this._authorizeSession();\n    this.updateState(result);\n  }\n\n  private async openloginHandler(url: string, dataObject: OpenloginSessionConfig, popupTimeout = 1000 * 10): Promise<PopupResponse | undefined> {\n    const loginId = await this.getLoginId(dataObject);\n    const configParams: BaseLoginParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n    };\n\n    if (this.options.uxMode === UX_MODE.REDIRECT) {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      window.location.href = loginUrl;\n      return undefined;\n    }\n    return new Promise((resolve, reject) => {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      const currentWindow = new PopupHandler({ url: loginUrl, timeout: popupTimeout });\n\n      currentWindow.on(\"close\", () => {\n        reject(LoginError.popupClosed());\n      });\n\n      currentWindow.listenOnChannel(loginId).then(resolve).catch(reject);\n\n      try {\n        currentWindow.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\nexport default OpenLogin;\n","import { OPENLOGIN_NETWORK, UX_MODE } from \"@toruslabs/openlogin-utils\";\n\nimport { OpenloginAdapterOptions } from \"./interface\";\n\nexport const getOpenloginDefaultOptions = (): OpenloginAdapterOptions => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.SAPPHIRE_MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP,\n    },\n    loginSettings: {},\n    privateKeyProvider: undefined,\n  };\n};\n","import OpenLogin from \"@toruslabs/openlogin\";\nimport { LoginParams, OPENLOGIN_NETWORK, OpenLoginOptions, SUPPORTED_KEY_CURVES, UX_MODE } from \"@toruslabs/openlogin-utils\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  IProvider,\n  log,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport merge from \"lodash.merge\";\n\nimport { getOpenloginDefaultOptions } from \"./config\";\nimport type { LoginSettings, OpenloginAdapterOptions, PrivateKeyProvider } from \"./interface\";\n\nexport type OpenloginLoginParams = LoginParams & {\n  // to maintain backward compatibility\n  login_hint?: string;\n};\n\nexport class OpenloginAdapter extends BaseAdapter<OpenloginLoginParams> {\n  readonly name: string = WALLET_ADAPTERS.OPENLOGIN;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.MULTICHAIN;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.IN_APP;\n\n  public openloginInstance: OpenLogin | null = null;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  public privateKeyProvider: PrivateKeyProvider | null = null;\n\n  private openloginOptions: OpenloginAdapterOptions[\"adapterSettings\"];\n\n  private loginSettings: LoginSettings = { loginProvider: \"\" };\n\n  constructor(params: OpenloginAdapterOptions = {}) {\n    super(params);\n    this.setAdapterSettings({\n      ...params.adapterSettings,\n      chainConfig: params.chainConfig,\n      clientId: params.clientId || \"\",\n      sessionTime: params.sessionTime,\n      web3AuthNetwork: params.web3AuthNetwork,\n      useCoreKitKey: params.useCoreKitKey,\n      privateKeyProvider: params.privateKeyProvider,\n    });\n    this.loginSettings = params.loginSettings || { loginProvider: \"\" };\n    this.privateKeyProvider = params.privateKeyProvider || null;\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get provider(): IProvider | null {\n    if (this.status !== ADAPTER_STATUS.NOT_READY && this.privateKeyProvider) {\n      return this.privateKeyProvider;\n    }\n    return null;\n  }\n\n  set provider(_: IProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.openloginOptions) throw WalletInitializationError.invalidParams(\"openloginOptions is required before openlogin's initialization\");\n    const isRedirectResult = this.openloginOptions.uxMode === UX_MODE.REDIRECT;\n\n    this.openloginOptions = {\n      ...this.openloginOptions,\n      replaceUrlOnRedirect: isRedirectResult,\n    };\n    this.openloginInstance = new OpenLogin({\n      ...this.openloginOptions,\n      clientId: this.clientId,\n      network: this.openloginOptions.network || this.web3AuthNetwork || OPENLOGIN_NETWORK.SAPPHIRE_MAINNET,\n    });\n    log.debug(\"initializing openlogin adapter init\");\n\n    await this.openloginInstance.init();\n\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      log.debug(\"initializing openlogin adapter\");\n\n      const finalPrivKey = this._getFinalPrivKey();\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (finalPrivKey && (options.autoConnect || isRedirectResult)) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params: OpenloginLoginParams = { loginProvider: \"\" }): Promise<IProvider | null> {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { ...params, adapter: WALLET_ADAPTERS.OPENLOGIN });\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error: unknown) {\n      log.error(\"Failed to connect with openlogin provider\", error);\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      if ((error as Error)?.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      } else if (error instanceof Web3AuthError) {\n        throw error;\n      }\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privateKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async authenticateUser(): Promise<{ idToken: string }> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const userInfo = await this.getUserInfo();\n    return {\n      idToken: userInfo.idToken as string,\n    };\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = this.openloginInstance.getUserInfo();\n    return userInfo;\n  }\n\n  // should be called only before initialization.\n  setAdapterSettings(adapterSettings: Partial<OpenLoginOptions & BaseAdapterSettings> & { privateKeyProvider?: PrivateKeyProvider }): void {\n    super.setAdapterSettings(adapterSettings);\n    const defaultOptions = getOpenloginDefaultOptions();\n    log.info(\"setting adapter settings\", adapterSettings);\n    this.openloginOptions = {\n      ...defaultOptions.adapterSettings,\n      ...this.openloginOptions,\n      ...adapterSettings,\n    };\n    if (adapterSettings.web3AuthNetwork) {\n      this.openloginOptions.network = adapterSettings.web3AuthNetwork;\n    }\n    if (adapterSettings.useCoreKitKey !== undefined) {\n      this.openloginOptions.useCoreKitKey = adapterSettings.useCoreKitKey;\n    }\n    if (adapterSettings.privateKeyProvider) {\n      this.privateKeyProvider = adapterSettings.privateKeyProvider;\n    }\n  }\n\n  public async addChain(chainConfig: CustomChainConfig, init = false): Promise<void> {\n    super.checkAddChainRequirements(chainConfig, init);\n    this.privateKeyProvider?.addChain(chainConfig);\n    this.addChainConfig(chainConfig);\n  }\n\n  public async switchChain(params: { chainId: string }, init = false): Promise<void> {\n    super.checkSwitchChainRequirements(params, init);\n    await this.privateKeyProvider?.switchChain(params);\n    this.setAdapterSettings({ chainConfig: this.getChainConfig(params.chainId) as CustomChainConfig });\n  }\n\n  private _getFinalPrivKey() {\n    if (!this.openloginInstance) return \"\";\n    let finalPrivKey = this.openloginInstance.privKey;\n    // coreKitKey is available only for custom verifiers by default\n    if (this.openloginOptions?.useCoreKitKey) {\n      // this is to check if the user has already logged in but coreKitKey is not available.\n      // when useCoreKitKey is set to true.\n      // This is to ensure that when there is no user session active, we don't throw an exception.\n      if (this.openloginInstance.privKey && !this.openloginInstance.coreKitKey) {\n        throw WalletLoginError.coreKitKeyNotFound();\n      }\n      finalPrivKey = this.openloginInstance.coreKitKey;\n    }\n    return finalPrivKey;\n  }\n\n  private _getFinalEd25519PrivKey() {\n    if (!this.openloginInstance) return \"\";\n    let finalPrivKey = this.openloginInstance.ed25519PrivKey;\n    // coreKitKey is available only for custom verifiers by default\n    if (this.openloginOptions?.useCoreKitKey) {\n      // this is to check if the user has already logged in but coreKitKey is not available.\n      // when useCoreKitKey is set to true.\n      // This is to ensure that when there is no user session active, we don't throw an exception.\n      if (this.openloginInstance.ed25519PrivKey && !this.openloginInstance.coreKitEd25519Key) {\n        throw WalletLoginError.coreKitKeyNotFound();\n      }\n      finalPrivKey = this.openloginInstance.coreKitEd25519Key;\n    }\n    return finalPrivKey;\n  }\n\n  private async connectWithProvider(params: OpenloginLoginParams = { loginProvider: \"\" }): Promise<void> {\n    if (!this.privateKeyProvider) throw WalletInitializationError.invalidParams(\"PrivateKey Provider is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    const keyAvailable = this._getFinalPrivKey();\n    // if not logged in then login\n    if (!keyAvailable || params.extraLoginOptions?.id_token) {\n      if (!this.loginSettings.curve) {\n        this.loginSettings.curve =\n          this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA ? SUPPORTED_KEY_CURVES.ED25519 : SUPPORTED_KEY_CURVES.SECP256K1;\n      }\n      if (!params.loginProvider && !this.loginSettings.loginProvider)\n        throw WalletInitializationError.invalidParams(\"loginProvider is required for login\");\n      await this.openloginInstance.login(\n        merge(this.loginSettings, params, {\n          extraLoginOptions: { ...(params.extraLoginOptions || {}), login_hint: params.login_hint || params.extraLoginOptions?.login_hint },\n        })\n      );\n    }\n    let finalPrivKey = this._getFinalPrivKey();\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        finalPrivKey = this._getFinalEd25519PrivKey();\n      }\n\n      await this.privateKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.OPENLOGIN, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    }\n  }\n}\n","'use strict';\n\nvar json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nvar isArray = Array.isArray || function (x) {\n\treturn {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n\tvar has = Object.prototype.hasOwnProperty || function () { return true; };\n\tvar keys = [];\n\tfor (var key in obj) {\n\t\tif (has.call(obj, key)) { keys.push(key); }\n\t}\n\treturn keys;\n};\n\nmodule.exports = function (obj, opts) {\n\tif (!opts) { opts = {}; }\n\tif (typeof opts === 'function') { opts = { cmp: opts }; }\n\tvar space = opts.space || '';\n\tif (typeof space === 'number') { space = Array(space + 1).join(' '); }\n\tvar cycles = typeof opts.cycles === 'boolean' ? opts.cycles : false;\n\tvar replacer = opts.replacer || function (key, value) { return value; };\n\n\tvar cmp = opts.cmp && (function (f) {\n\t\treturn function (node) {\n\t\t\treturn function (a, b) {\n\t\t\t\tvar aobj = { key: a, value: node[a] };\n\t\t\t\tvar bobj = { key: b, value: node[b] };\n\t\t\t\treturn f(aobj, bobj);\n\t\t\t};\n\t\t};\n\t}(opts.cmp));\n\n\tvar seen = [];\n\treturn (function stringify(parent, key, node, level) {\n\t\tvar indent = space ? '\\n' + new Array(level + 1).join(space) : '';\n\t\tvar colonSeparator = space ? ': ' : ':';\n\n\t\tif (node && node.toJSON && typeof node.toJSON === 'function') {\n\t\t\tnode = node.toJSON();\n\t\t}\n\n\t\tnode = replacer.call(parent, key, node);\n\n\t\tif (node === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof node !== 'object' || node === null) {\n\t\t\treturn json.stringify(node);\n\t\t}\n\t\tif (isArray(node)) {\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\tvar item = stringify(node, i, node[i], level + 1) || json.stringify(null);\n\t\t\t\tout.push(indent + space + item);\n\t\t\t}\n\t\t\treturn '[' + out.join(',') + indent + ']';\n\t\t}\n\n\t\tif (seen.indexOf(node) !== -1) {\n\t\t\tif (cycles) { return json.stringify('__cycle__'); }\n\t\t\tthrow new TypeError('Converting circular structure to JSON');\n\t\t} else { seen.push(node); }\n\n\t\tvar keys = objectKeys(node).sort(cmp && cmp(node));\n\t\tvar out = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar value = stringify(node, key, node[key], level + 1);\n\n\t\t\tif (!value) { continue; }\n\n\t\t\tvar keyValue = json.stringify(key)\n\t\t\t\t\t+ colonSeparator\n\t\t\t\t\t+ value;\n\n\t\t\tout.push(indent + space + keyValue);\n\t\t}\n\t\tseen.splice(seen.indexOf(node), 1);\n\t\treturn '{' + out.join(',') + indent + '}';\n\n\t}({ '': obj }, '', obj, 0));\n};\n","'use strict';\n\nexports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","'use strict';\n\nvar at; // The index of the current character\nvar ch; // The current character\nvar escapee = {\n\t'\"': '\"',\n\t'\\\\': '\\\\',\n\t'/': '/',\n\tb: '\\b',\n\tf: '\\f',\n\tn: '\\n',\n\tr: '\\r',\n\tt: '\\t'\n};\nvar text;\n\n// Call error when something is wrong.\nfunction error(m) {\n\tthrow {\n\t\tname: 'SyntaxError',\n\t\tmessage: m,\n\t\tat: at,\n\t\ttext: text\n\t};\n}\n\nfunction next(c) {\n\t// If a c parameter is provided, verify that it matches the current character.\n\tif (c && c !== ch) {\n\t\terror(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n\t}\n\n\t// Get the next character. When there are no more characters, return the empty string.\n\n\tch = text.charAt(at);\n\tat += 1;\n\treturn ch;\n}\n\nfunction number() {\n\t// Parse a number value.\n\tvar num;\n\tvar str = '';\n\n\tif (ch === '-') {\n\t\tstr = '-';\n\t\tnext('-');\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tstr += ch;\n\t\tnext();\n\t}\n\tif (ch === '.') {\n\t\tstr += '.';\n\t\twhile (next() && ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t}\n\t}\n\tif (ch === 'e' || ch === 'E') {\n\t\tstr += ch;\n\t\tnext();\n\t\tif (ch === '-' || ch === '+') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t\twhile (ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t}\n\tnum = Number(str);\n\tif (!isFinite(num)) {\n\t\terror('Bad number');\n\t}\n\treturn num;\n}\n\nfunction string() {\n\t// Parse a string value.\n\tvar hex;\n\tvar i;\n\tvar str = '';\n\tvar uffff;\n\n\t// When parsing for string values, we must look for \" and \\ characters.\n\tif (ch === '\"') {\n\t\twhile (next()) {\n\t\t\tif (ch === '\"') {\n\t\t\t\tnext();\n\t\t\t\treturn str;\n\t\t\t} else if (ch === '\\\\') {\n\t\t\t\tnext();\n\t\t\t\tif (ch === 'u') {\n\t\t\t\t\tuffff = 0;\n\t\t\t\t\tfor (i = 0; i < 4; i += 1) {\n\t\t\t\t\t\thex = parseInt(next(), 16);\n\t\t\t\t\t\tif (!isFinite(hex)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuffff = (uffff * 16) + hex;\n\t\t\t\t\t}\n\t\t\t\t\tstr += String.fromCharCode(uffff);\n\t\t\t\t} else if (typeof escapee[ch] === 'string') {\n\t\t\t\t\tstr += escapee[ch];\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr += ch;\n\t\t\t}\n\t\t}\n\t}\n\terror('Bad string');\n}\n\n// Skip whitespace.\nfunction white() {\n\twhile (ch && ch <= ' ') {\n\t\tnext();\n\t}\n}\n\n// true, false, or null.\nfunction word() {\n\tswitch (ch) {\n\t\tcase 't':\n\t\t\tnext('t');\n\t\t\tnext('r');\n\t\t\tnext('u');\n\t\t\tnext('e');\n\t\t\treturn true;\n\t\tcase 'f':\n\t\t\tnext('f');\n\t\t\tnext('a');\n\t\t\tnext('l');\n\t\t\tnext('s');\n\t\t\tnext('e');\n\t\t\treturn false;\n\t\tcase 'n':\n\t\t\tnext('n');\n\t\t\tnext('u');\n\t\t\tnext('l');\n\t\t\tnext('l');\n\t\t\treturn null;\n\t\tdefault:\n\t\t\terror(\"Unexpected '\" + ch + \"'\");\n\t}\n}\n\n// Parse an array value.\nfunction array() {\n\tvar arr = [];\n\n\tif (ch === '[') {\n\t\tnext('[');\n\t\twhite();\n\t\tif (ch === ']') {\n\t\t\tnext(']');\n\t\t\treturn arr; // empty array\n\t\t}\n\t\twhile (ch) {\n\t\t\tarr.push(value()); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === ']') {\n\t\t\t\tnext(']');\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad array');\n}\n\n// Parse an object value.\nfunction object() {\n\tvar key;\n\tvar obj = {};\n\n\tif (ch === '{') {\n\t\tnext('{');\n\t\twhite();\n\t\tif (ch === '}') {\n\t\t\tnext('}');\n\t\t\treturn obj; // empty object\n\t\t}\n\t\twhile (ch) {\n\t\t\tkey = string();\n\t\t\twhite();\n\t\t\tnext(':');\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\terror('Duplicate key \"' + key + '\"');\n\t\t\t}\n\t\t\tobj[key] = value(); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === '}') {\n\t\t\t\tnext('}');\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad object');\n}\n\n// Parse a JSON value. It could be an object, an array, a string, a number, or a word.\nfunction value() {\n\twhite();\n\tswitch (ch) {\n\t\tcase '{':\n\t\t\treturn object();\n\t\tcase '[':\n\t\t\treturn array();\n\t\tcase '\"':\n\t\t\treturn string();\n\t\tcase '-':\n\t\t\treturn number();\n\t\tdefault:\n\t\t\treturn ch >= '0' && ch <= '9' ? number() : word();\n\t}\n}\n\n// Return the json_parse function. It will have access to all of the above functions and variables.\nmodule.exports = function (source, reviver) {\n\tvar result;\n\n\ttext = source;\n\tat = 0;\n\tch = ' ';\n\tresult = value();\n\twhite();\n\tif (ch) {\n\t\terror('Syntax error');\n\t}\n\n\t// If there is a reviver function, we recursively walk the new structure,\n\t// passing each name/value pair to the reviver function for possible\n\t// transformation, starting with a temporary root object that holds the result\n\t// in an empty key. If there is not a reviver function, we simply return the\n\t// result.\n\n\treturn typeof reviver === 'function' ? (function walk(holder, key) {\n\t\tvar k;\n\t\tvar v;\n\t\tvar val = holder[key];\n\t\tif (val && typeof val === 'object') {\n\t\t\tfor (k in value) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(val, k)) {\n\t\t\t\t\tv = walk(val, k);\n\t\t\t\t\tif (typeof v === 'undefined') {\n\t\t\t\t\t\tdelete val[k];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval[k] = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn reviver.call(holder, key, val);\n\t}({ '': result }, '')) : result;\n};\n","'use strict';\n\nvar escapable = /[\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\nvar gap;\nvar indent;\nvar meta = { // table of character substitutions\n\t'\\b': '\\\\b',\n\t'\\t': '\\\\t',\n\t'\\n': '\\\\n',\n\t'\\f': '\\\\f',\n\t'\\r': '\\\\r',\n\t'\"': '\\\\\"',\n\t'\\\\': '\\\\\\\\'\n};\nvar rep;\n\nfunction quote(string) {\n\t// If the string contains no control characters, no quote characters, and no\n\t// backslash characters, then we can safely slap some quotes around it.\n\t// Otherwise we must also replace the offending characters with safe escape sequences.\n\n\tescapable.lastIndex = 0;\n\treturn escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n\t\tvar c = meta[a];\n\t\treturn typeof c === 'string' ? c\n\t\t\t: '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n\t}) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n\t// Produce a string from holder[key].\n\tvar i; // The loop counter.\n\tvar k; // The member key.\n\tvar v; // The member value.\n\tvar length;\n\tvar mind = gap;\n\tvar partial;\n\tvar value = holder[key];\n\n\t// If the value has a toJSON method, call it to obtain a replacement value.\n\tif (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n\t\tvalue = value.toJSON(key);\n\t}\n\n\t// If we were called with a replacer function, then call the replacer to obtain a replacement value.\n\tif (typeof rep === 'function') {\n\t\tvalue = rep.call(holder, key, value);\n\t}\n\n\t// What happens next depends on the value's type.\n\tswitch (typeof value) {\n\t\tcase 'string':\n\t\t\treturn quote(value);\n\n\t\tcase 'number':\n\t\t\t// JSON numbers must be finite. Encode non-finite numbers as null.\n\t\t\treturn isFinite(value) ? String(value) : 'null';\n\n\t\tcase 'boolean':\n\t\tcase 'null':\n\t\t\t// If the value is a boolean or null, convert it to a string. Note:\n\t\t\t// typeof null does not produce 'null'. The case is included here in\n\t\t\t// the remote chance that this gets fixed someday.\n\t\t\treturn String(value);\n\n\t\tcase 'object':\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tgap += indent;\n\t\t\tpartial = [];\n\n\t\t\t// Array.isArray\n\t\t\tif (Object.prototype.toString.apply(value) === '[object Array]') {\n\t\t\t\tlength = value.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tpartial[i] = str(i, value) || 'null';\n\t\t\t\t}\n\n\t\t\t\t// Join all of the elements together, separated with commas, and wrap them in brackets.\n\t\t\t\tv = partial.length === 0 ? '[]' : gap\n\t\t\t\t\t? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n\t\t\t\t\t: '[' + partial.join(',') + ']';\n\t\t\t\tgap = mind;\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\t// If the replacer is an array, use it to select the members to be stringified.\n\t\t\tif (rep && typeof rep === 'object') {\n\t\t\t\tlength = rep.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tk = rep[i];\n\t\t\t\t\tif (typeof k === 'string') {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Otherwise, iterate through all of the keys in the object.\n\t\t\t\tfor (k in value) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, k)) {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Join all of the member texts together, separated with commas, and wrap them in braces.\n\n\t\t\tv = partial.length === 0 ? '{}' : gap\n\t\t\t\t? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n\t\t\t\t: '{' + partial.join(',') + '}';\n\t\t\tgap = mind;\n\t\t\treturn v;\n\t\tdefault:\n\t}\n}\n\nmodule.exports = function (value, replacer, space) {\n\tvar i;\n\tgap = '';\n\tindent = '';\n\n\t// If the space parameter is a number, make an indent string containing that many spaces.\n\tif (typeof space === 'number') {\n\t\tfor (i = 0; i < space; i += 1) {\n\t\t\tindent += ' ';\n\t\t}\n\t} else if (typeof space === 'string') {\n\t\t// If the space parameter is a string, it will be used as the indent string.\n\t\tindent = space;\n\t}\n\n\t// If there is a replacer, it must be a function or an array. Otherwise, throw an error.\n\trep = replacer;\n\tif (\n\t\treplacer\n\t\t&& typeof replacer !== 'function'\n\t\t&& (typeof replacer !== 'object' || typeof replacer.length !== 'number')\n\t) {\n\t\tthrow new Error('JSON.stringify');\n\t}\n\n\t// Make a fake root object containing our value under the key of ''.\n\t// Return the result of stringifying the value.\n\treturn str('', { '': value });\n};\n"],"names":["base64url","base64urlLib","safebtoa","str","encode","safeatob","decode","base64toJSON","b64str","JSON","parse","jsonToBase64","json","stringify","storageAvailable","type","storage","storageExists","storageLength","window","length","x","setItem","removeItem","err","error","code","name","MemoryStore","constructor","_defineProperty","getItem","key","this","store","value","BrowserStorage","storeKey","_storeKey","resetStore","static","storageKey","instance","localStorage","sessionStorage","toJSON","currStore","getStore","get","set","UX_MODE","POPUP","REDIRECT","OPENLOGIN_NETWORK","TORUS_SAPPHIRE_NETWORK","TORUS_LEGACY_NETWORK","SUPPORTED_KEY_CURVES","SECP256K1","ED25519","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","SMS_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","NONE","OPENLOGIN_ACTIONS","LOGIN","ENABLE_MFA","MODIFY_MFA","BUILD_ENV","PRODUCTION","DEVELOPMENT","STAGING","TESTING","LANGUAGES","en","ja","ko","de","zh","es","fr","pt","nl","THEME_MODES","light","dark","auto","MFA_FACTOR","DEVICE","BACKUP_SHARE","SOCIAL_BACKUP","PASSWORD","BaseSessionManager","checkSessionParams","sessionId","Error","padStart","request","method","url","data","headers","options","post","put","patch","ec","EC","browserCrypto","global","crypto","msCrypto","subtle","webkitSubtle","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","isValidPrivateKey","privateKey","isBuffer","compare","randomBytes","size","arr","Uint8Array","getRandomValues","nodeCrypto","async","sha512","msg","hash","digest","result","update","getAes","op","iv","importAlgorithm","cryptoKey","importKey","encAlgorithm","cipher","firstChunk","secondChunk","final","concat","decipher","aesCbcEncrypt","aesCbcDecrypt","hmacSha256Sign","sig","sign","hmac","generatePrivate","getPublic","keyFromPrivate","canonical","toDER","deriveUnpadded","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","derive","toArray","derivePadded","toString","encrypt","publicKeyTo","opts","ephemPrivateKey","ephemPublicKey","encryptionKey","slice","macKey","ciphertext","dataToMac","mac","decrypt","_padding","padding","deriveLocal","macGood","b1","b2","res","i","equalConstTime","hmacSha256Verify","keccak256","a","keccakHash","encParamsHexToBuf","encParamsHex","encParamsBufToHex","encParams","encryptData","privKeyHex","d","serializedDec","serializedBuf","decryptData","keyPair","getPrivate","OpenloginSessionManager","sessionServerBaseUrl","sessionNamespace","sessionTime","super","privKey","pubKey","encData","body","signature","namespace","timeout","pubkey","URL","searchParams","append","response","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","withNativeBlob","Blob","prototype","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","TransportError","reason","description","context","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","hasCORS","XHR","xdomain","e","join","empty","hasXHR2","responseType","Request","uri","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","assign","req","xhrStatus","pollXhr","re","parts","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","sendPacket","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","sameNamespace","forceNew","multiplex","log","SecurePubSub","serverUrl","enableLogging","enableAll","disableAll","level","setLevel","setLogLevel","topic","topicPrivKey","encryptedData","fetchBody","isPromisePending","topicPubKey","currentSocketConnection","getSocketConnection","debug","visibilityListener","visibilityState","disconnectListener","returnPromise","info","decData","SOCKET_CONN","localSocketConnection","OpenloginError","CustomError","defineProperty","InitializationError","extraMessage","messages","fromCode","LoginError","loglevel","getLogger","getHashQueryParams","replaceUrl","queryResult","queryParams","hashUrl","origin","hashResult","hashParams","cleanUrl","pathname","search","history","replaceState","as","constructURL","params","baseURL","h","getTimeout","loginProvider","platform","bowser","userAgent","getPlatform","isMobileOrTablet","PopupHandler","EventEmitter","target","features","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","left","abs","getPopupFeatures","windowTimer","iClosedWindow","_setupTimer","setInterval","clearInterval","setTimeout","popupBlocked","_this$window","focus","redirect","locationReplaceOnRedirect","loginId","securePubSub","subscribe","parsedData","OpenLogin","clientId","invalidParams","network","buildEnv","sdkUrl","addVersionInUrls","useMpc","values","includes","redirectUrl","uxMode","replaceUrlOnRedirect","originData","whiteLabel","loginConfig","mfaSettings","storageServerUrl","webauthnTransports","factorKey","coreKitKey","ed25519PrivKey","coreKitEd25519Key","coreKitEd25519PrivKey","appState","userInfo","dappState","baseUrl","_storageBaseKey","currentStorage","sessionManager","console","loginFailed","_authorizeSession","updateState","invalidLoginParams","defaultParams","loginParams","dataObject","actionType","openloginHandler","rehydrateSession","userNotLoggedIn","invalidateSession","walletKey","oAuthPrivateKey","tKey","metadataNonce","keyMode","profileImage","dappShare","idToken","oAuthIdToken","oAuthAccessToken","email","verifier","verifierId","aggregateVerifier","typeOfLogin","isMfaEnabled","authToken","signatures","tssShareIndex","tssPubKey","tssShare","tssNonce","getUserInfo","notInitialized","generateRandomSessionKey","loginSessionMgr","createSession","authorizeSession","popupTimeout","getLoginId","configParams","loginUrl","b64Params","currentWindow","popupClosed","listenOnChannel","getOpenloginDefaultOptions","adapterSettings","SAPPHIRE_MAINNET","loginSettings","privateKeyProvider","OpenloginAdapter","BaseAdapter","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","ADAPTER_STATUS","CHAIN_NAMESPACES","setAdapterSettings","chainConfig","web3AuthNetwork","useCoreKitKey","chainConfigProxy","provider","_","checkInitializationRequirements","WalletInitializationError","openloginOptions","isRedirectResult","openloginInstance","init","ADAPTER_EVENTS","_getFinalPrivKey","rehydrated","checkConnectionRequirements","adapter","connectWithProvider","WalletLoginError","Web3AuthError","logout","defaultOptions","checkAddChainRequirements","_this$privateKeyProvi","addChain","addChainConfig","checkSwitchChainRequirements","_this$privateKeyProvi2","switchChain","getChainConfig","chainId","finalPrivKey","_this$openloginOption","_getFinalEd25519PrivKey","_this$openloginOption2","extraLoginOptions","_params$extraLoginOpt","id_token","curve","currentChainNamespace","login","merge","login_hint","_params$extraLoginOpt2","setupProvider","reconnected","require","objectKeys","has","module","exports","cmp","space","f","cycles","node","aobj","bobj","seen","parent","indent","colonSeparator","out","item","TypeError","sort","keyValue","at","ch","text","escapee","r","t","number","isFinite","string","hex","uffff","parseInt","white","object","array","word","walk","holder","val","gap","rep","escapable","meta","quote","lastIndex","partial","mind"],"sourceRoot":""}