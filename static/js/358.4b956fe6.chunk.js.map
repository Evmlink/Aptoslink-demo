{"version":3,"file":"static/js/358.4b956fe6.chunk.js","mappings":"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AAQ,MAAQ,KAAQ,MAAQ,MAAQ,KACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,IAAQ,MAAQ,KAAQ,KAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,M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","sources":["../node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@ethereumjs/util/src/account.ts","../node_modules/@ethereumjs/util/src/address.ts","../node_modules/@ethereumjs/util/src/asyncEventEmitter.ts","../node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@ethereumjs/util/src/encoding.ts","../node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@ethereumjs/util/src/index.ts","../node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@ethereumjs/util/src/lock.ts","../node_modules/@ethereumjs/util/src/provider.ts","../node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@ethereumjs/util/src/types.ts","../node_modules/@ethereumjs/util/src/units.ts","../node_modules/@ethereumjs/util/src/withdrawal.ts","../node_modules/@metamask/abi-utils/src/abi.ts","../node_modules/@metamask/abi-utils/src/errors.ts","../node_modules/@metamask/abi-utils/src/index.ts","../node_modules/@metamask/abi-utils/src/iterator.ts","../node_modules/@metamask/abi-utils/src/packer.ts","../node_modules/@metamask/abi-utils/src/parsers/address.ts","../node_modules/@metamask/abi-utils/src/parsers/array.ts","../node_modules/@metamask/abi-utils/src/parsers/bool.ts","../node_modules/@metamask/abi-utils/src/parsers/bytes.ts","../node_modules/@metamask/abi-utils/src/parsers/fixed-bytes.ts","../node_modules/@metamask/abi-utils/src/parsers/function.ts","../node_modules/@metamask/abi-utils/src/parsers/index.ts","../node_modules/@metamask/abi-utils/src/parsers/number.ts","../node_modules/@metamask/abi-utils/src/parsers/string.ts","../node_modules/@metamask/abi-utils/src/parsers/tuple.ts","../node_modules/@metamask/abi-utils/src/types/index.ts","../node_modules/@metamask/abi-utils/src/utils/buffer.ts","../node_modules/@metamask/abi-utils/src/utils/index.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@stablelib/binary/binary.ts","../node_modules/@stablelib/chacha/chacha.ts","../node_modules/@stablelib/chacha20poly1305/chacha20poly1305.ts","../node_modules/@stablelib/constant-time/constant-time.ts","../node_modules/@stablelib/hash/hash.ts","../node_modules/@stablelib/hkdf/hkdf.ts","../node_modules/@stablelib/hmac/hmac.ts","../node_modules/@stablelib/int/int.ts","../node_modules/@stablelib/poly1305/poly1305.ts","../node_modules/@stablelib/random/random.ts","../node_modules/@stablelib/random/source/browser.ts","../node_modules/@stablelib/random/source/node.ts","../node_modules/@stablelib/random/source/system.ts","../node_modules/@stablelib/sha256/sha256.ts","../node_modules/@stablelib/wipe/wipe.ts","../node_modules/@stablelib/x25519/x25519.ts","../../../../src/constants/index.ts","../../../../src/constants/misc.ts","../../../../src/constants/time.ts","../../../src/index.ts","../../../../src/types/index.ts","../../../../src/types/watch.ts","../../../../src/utils/convert.ts","../../../../src/utils/delay.ts","../../../../src/utils/index.ts","../../../src/watch.ts","../node_modules/detect-browser/es/index.js","../../../src/jsonrpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/openlogin-jrpc/src/mux.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/units.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/account.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/address.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/db.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/kzg.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/blobs.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/util/src/provider.ts","../node_modules/crc/mjs/calculators/crc1.js","../node_modules/crc/mjs/create_buffer.js","../node_modules/crc/mjs/define_crc.js","../node_modules/crc/mjs/crc1.js","../node_modules/crc/mjs/calculators/crc8.js","../node_modules/crc/mjs/crc8.js","../node_modules/crc/mjs/calculators/crc81wire.js","../node_modules/crc/mjs/crc81wire.js","../node_modules/crc/mjs/calculators/crc8dvbs2.js","../node_modules/crc/mjs/crc8dvbs2.js","../node_modules/crc/mjs/calculators/crc16.js","../node_modules/crc/mjs/crc16.js","../node_modules/crc/mjs/calculators/crc16ccitt.js","../node_modules/crc/mjs/crc16ccitt.js","../node_modules/crc/mjs/calculators/crc16modbus.js","../node_modules/crc/mjs/crc16modbus.js","../node_modules/crc/mjs/crc16xmodem.js","../node_modules/crc/mjs/calculators/crc16xmodem.js","../node_modules/crc/mjs/calculators/crc16kermit.js","../node_modules/crc/mjs/crc16kermit.js","../node_modules/crc/mjs/calculators/crc24.js","../node_modules/crc/mjs/crc24.js","../node_modules/crc/mjs/calculators/crc32.js","../node_modules/crc/mjs/crc32.js","../node_modules/crc/mjs/calculators/crc32mpeg2.js","../node_modules/crc/mjs/crc32mpeg2.js","../node_modules/crc/mjs/calculators/crcjam.js","../node_modules/crc/mjs/crcjam.js","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/chains.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/eips.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/hardforks.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/common.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip1559.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/legacy.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip2718.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/capabilities/eip2930.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/constants.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip4844Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@toruslabs/http-helpers/src/index.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectV2Utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectV2Provider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/add-abort-signal.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/compose.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/duplex.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/duplexify.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/from.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/legacy.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/operators.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/passthrough.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/readable.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/transform.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/utils.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/streams/writable.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/internal/validators.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/ours/browser.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/ours/errors.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/ours/primordials.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/ours/util.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/stream.js","../node_modules/@web3auth/ethereum-provider/node_modules/readable-stream/lib/stream/promises.js","../node_modules/decode-uri-component/index.js","../node_modules/ethereum-cryptography/keccak.js","../node_modules/ethereum-cryptography/secp256k1.js","../node_modules/ethereum-cryptography/utils.js","../node_modules/filter-obj/index.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/micro-ftch/index.js","../node_modules/query-string/index.js","../node_modules/querystring/decode.js","../node_modules/querystring/encode.js","../node_modules/querystring/index.js","../node_modules/split-on-first/index.js","../node_modules/strict-uri-encode/index.js","../node_modules/tslib/tslib.es6.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/url/node_modules/punycode/punycode.js","../node_modules/url/url.js","../node_modules/url/util.js","../../src/error.ts","../../src/utils.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../../src/structs/coercions.ts","../../src/structs/refinements.ts","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/concat.js","../node_modules/uint8arrays/esm/src/from-string.js","../node_modules/uint8arrays/esm/src/to-string.js","../node_modules/uint8arrays/esm/src/util/as-uint8array.js","../node_modules/multiformats/esm/vendor/base-x.js","../node_modules/multiformats/esm/src/bytes.js","../node_modules/multiformats/esm/src/bases/base.js","../node_modules/multiformats/esm/src/bases/identity.js","../node_modules/multiformats/esm/src/bases/base2.js","../node_modules/multiformats/esm/src/bases/base8.js","../node_modules/multiformats/esm/src/bases/base10.js","../node_modules/multiformats/esm/src/bases/base16.js","../node_modules/multiformats/esm/src/bases/base32.js","../node_modules/multiformats/esm/src/bases/base36.js","../node_modules/multiformats/esm/src/bases/base58.js","../node_modules/multiformats/esm/src/bases/base64.js","../node_modules/multiformats/esm/src/bases/base256emoji.js","../node_modules/multiformats/esm/vendor/varint.js","../node_modules/multiformats/esm/src/varint.js","../node_modules/multiformats/esm/src/hashes/digest.js","../node_modules/multiformats/esm/src/hashes/hasher.js","../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../node_modules/multiformats/esm/src/hashes/identity.js","../node_modules/multiformats/esm/src/codecs/raw.js","../node_modules/multiformats/esm/src/codecs/json.js","../node_modules/multiformats/esm/src/cid.js","../node_modules/multiformats/esm/src/basics.js","../node_modules/uint8arrays/esm/src/util/bases.js"],"sourcesContent":["export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(\n    secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n  )\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nasync function runInSeries(\n  context: any,\n  tasks: Array<(data: unknown, callback?: (error?: Error) => void) => void>,\n  data: unknown\n): Promise<void> {\n  let error: Error | undefined\n  for await (const task of tasks) {\n    try {\n      if (task.length < 2) {\n        //sync\n        task.call(context, data)\n      } else {\n        await new Promise<void>((resolve, reject) => {\n          task.call(context, data, (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }\n    } catch (e: unknown) {\n      error = e as Error\n    }\n  }\n  if (error) {\n    throw error\n  }\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n    runInSeries(self, listeners.slice(), data).then(callback).catch(callback)\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n","import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n","import { Buffer } from 'buffer'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n","// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nexport const hasTerminator = (nibbles: Uint8Array) => {\n  return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16\n}\n\nexport const nibblesToBytes = (nibbles: Uint8Array, bytes: Uint8Array) => {\n  for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n    bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1]\n  }\n}\n\nexport const nibblesToCompactBytes = (nibbles: Uint8Array) => {\n  let terminator = 0\n  if (hasTerminator(nibbles)) {\n    terminator = 1\n    // Remove the terminator from the sequence\n    nibbles = nibbles.subarray(0, nibbles.length - 1)\n  }\n  const buf = new Uint8Array(nibbles.length / 2 + 1)\n  // Shift the terminator info into the first nibble of buf[0]\n  buf[0] = terminator << 5\n  // If odd length, then add that flag into the first nibble and put the odd nibble to\n  // second part of buf[0] which otherwise will be left padded with a 0\n  if ((nibbles.length & 1) === 1) {\n    buf[0] |= 1 << 4\n    buf[0] |= nibbles[0]\n    nibbles = nibbles.subarray(1)\n  }\n  // create bytes out of the rest even nibbles\n  nibblesToBytes(nibbles, buf.subarray(1))\n  return buf\n}\n\nexport const bytesToNibbles = (str: Uint8Array) => {\n  const l = str.length * 2 + 1\n  const nibbles = new Uint8Array(l)\n  for (let i = 0; i < str.length; i++) {\n    const b = str[i]\n    nibbles[i * 2] = b / 16\n    nibbles[i * 2 + 1] = b % 16\n  }\n  // This will get removed from calling function if the first nibble\n  // indicates that terminator is not present\n  nibbles[l - 1] = 16\n  return nibbles\n}\n\nexport const compactBytesToNibbles = (compact: Uint8Array) => {\n  if (compact.length === 0) {\n    return compact\n  }\n  let base = bytesToNibbles(compact)\n  // delete terminator flag if terminator flag was not in first nibble\n  if (base[0] < 2) {\n    base = base.subarray(0, base.length - 1)\n  }\n  // chop the terminator nibble and the even padding (if there is one)\n  // i.e.  chop 2 left nibbles when even else 1 when odd\n  const chop = 2 - (base[0] & 1)\n  return base.subarray(chop)\n}\n\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Units helpers\n */\nexport * from './units'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Helper function for working with compact encoding\n */\nexport * from './encoding'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\nexport * from './provider'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n","import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = Buffer.from(buf.slice(0, 32))\n  const s = Buffer.from(buf.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return Buffer.from(senderPubKey.toRawBytes(false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n","import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n","import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in Gwei 8 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toValue() {\n    return {\n      index: this.index,\n      validatorIndex: this.validatorIndex,\n      address: this.address.buf,\n      amount: this.amount,\n    }\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n","// ESLint gets confused by the nested list and tables in the docs, so we disable\n// the rule for this file.\n/* eslint-disable jsdoc/check-indentation, jsdoc/match-description */\n\nimport { assert, BytesLike, createBytes } from '@metamask/utils';\n\nimport { getErrorMessage, ParserError } from './errors';\nimport { pack, unpack } from './packer';\nimport { TypeMap } from './types';\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types.\n *\n * This will attempt to parse the values into the correct types. For example,\n * if you pass in a hex string for a `uint256`, it will be parsed into a\n * `bigint`. Regular strings are interpreted as UTF-8 strings. If you want to\n * pass in a hex string, you must pass it in as a `Uint8Array`, or use the\n * \"0x\"-prefix.\n *\n * It will also attempt to infer the types of the values. For example, if you\n * pass in a string for a `uint256`, it will result in a TypeScript compile-time\n * error. This does not work for all types, however. For example, if you use\n * nested arrays or tuples, the type will be inferred as `unknown`.\n *\n * The following types are supported:\n *\n * - `address`: A 20-byte Ethereum address.\n *   - As a 40-character-long hexadecimal string, starting with \"0x\".\n *   - As a 20-byte-long byte array, i.e., `Uint8Array`.\n * - `bool`: A boolean value.\n *   - As a boolean literal, i.e., `true` or `false`.\n *   - As the strings \"true\" or \"false\".\n * - `bytes(n)`: A dynamic byte array.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n *   - As a regular string, which will be interpreted as UTF-8.\n * - `function`: A Solidity function.\n *   - As a 48-character-long hexadecimal string, starting with \"0x\".\n *   - As a 24-byte-long byte array, i.e., `Uint8Array`.\n *   - As a {@link SolidityFunction} object.\n * - `int(n)`: A signed integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n * - `string`: A dynamic UTF-8 string.\n *   - As a regular string.\n *   - As a hexadecimal string, starting with \"0x\".\n *   - As a byte array, i.e., `Uint8Array`.\n * - `tuple`: A tuple of values.\n *   - As an array of values.\n * - `uint(n)`: An unsigned integer.\n *   - As a number.\n *   - As a `bigint`.\n *   - As a hexadecimal string, starting with \"0x\".\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html\n * @param types - The types to encode.\n * @param values - The values to encode. This array must have the same length as\n * the types array.\n * @param packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param tight - Whether to pack the values tightly. When enabled, the values\n * will be packed without any padding. This matches the behaviour of\n * `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encode = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  packed?: boolean,\n  tight?: boolean,\n): Uint8Array => {\n  try {\n    return pack({ types, values, packed, tight });\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to encode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Encode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to encode.\n * @param value - The value to encode.\n * @returns The ABI encoded bytes.\n */\nexport const encodeSingle = <Type extends string>(\n  type: Type,\n  value: TypeMap<[Type], 'input'>[0],\n): Uint8Array => {\n  return encode([type], [value]);\n};\n\n/**\n * Encode the data with the provided types. The types must be valid Solidity\n * ABI types. This is similar to {@link encode}, but the values are encoded in\n * the non-standard packed mode. This differs from the standard encoding in the\n * following ways:\n *\n * - Most values are packed tightly, without alignment padding.\n *   - The exception is array values, which are padded to 32 bytes.\n * - Values are still padded to their full size, i.e., `uint16` values are still\n *  padded to 2 bytes, regardless of the length of the value.\n * - The encoding of dynamic types (`bytes`, `string`) is different. The length\n * of the dynamic type is not included in the encoding, and the dynamic type is\n * not padded to a multiple of 32 bytes.\n * - All values are encoded in-place, without any offsets.\n *\n * The encoding of this is ambiguous as soon as there is more than one dynamic\n * type. That means that these values cannot be decoded with {@link decode} or\n * Solidity's `abi.decode` function.\n *\n * See {@link encode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodePacked } from '@metamask/abi-utils';\n *\n * const encoded = encodePacked(['uint8'], [42]);\n *\n * console.log(encoded); // `Uint8Array [ 42 ]`\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#non-standard-packed-mode\n * @param types - The types to encode.\n * @param values - The values to encode.\n * @param tight - Whether to pack the values tightly. When enabled, `bytesN`\n * values in arrays will be packed without any padding. This matches the\n * behaviour of `ethereumjs-abi`. Defaults to `false`.\n * @returns The ABI encoded bytes.\n */\nexport const encodePacked = <Type extends readonly string[]>(\n  types: Type,\n  values: TypeMap<Type, 'input'>,\n  tight?: boolean,\n): Uint8Array => {\n  return encode(types, values, true, tight);\n};\n\n/**\n * Decode an ABI encoded buffer with the specified types. The types must be\n * valid Solidity ABI types.\n *\n * This will attempt to infer the output types from the input types. For\n * example, if you use `uint256` as an input type, the output type will be\n * `bigint`. This does not work for all types, however. For example, if you use\n * nested array types or tuple types, the output type will be `unknown`.\n *\n * The resulting types of the values will be as follows:\n *\n * | Contract ABI Type | Resulting JavaScript Type |\n * | ----------------- | ------------------------- |\n * | `address`         | `string`                  |\n * | `bool`            | `boolean`                 |\n * | `bytes(n)`        | `Uint8Array`              |\n * | `function`        | {@link SolidityFunction}  |\n * | `int(n)`          | `bigint`                  |\n * | `string`          | `string`                  |\n * | `tuple`           | `Array`                   |\n * | `array`           | `Array`                   |\n * | `uint(n)`         | `bigint`                  |\n *\n * @example\n * ```typescript\n * import { encode, decode } from '@metamask/abi-utils';\n *\n * const types = ['uint256', 'string'];\n * const encoded = encode(types, [42, 'Hello, world!']);\n * const decoded = decode(types, encoded);\n *\n * console.log(decoded); // [42n, 'Hello, world!']\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param types - The types to decode the bytes with.\n * @param value - The bytes-like value to decode.\n * @returns The decoded values as array.\n */\nexport const decode = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  value: BytesLike,\n): Output => {\n  const bytes = createBytes(value);\n\n  try {\n    return unpack(types, bytes);\n  } catch (error) {\n    if (error instanceof ParserError) {\n      throw new ParserError(`Unable to decode value: ${error.message}`, error);\n    }\n\n    throw new ParserError(\n      `An unexpected error occurred: ${getErrorMessage(error)}`,\n      error,\n    );\n  }\n};\n\n/**\n * Decode the data with the provided type. The type must be a valid Solidity\n * ABI type.\n *\n * See {@link decode} for more information on how values are parsed.\n *\n * @example\n * ```typescript\n * import { encodeSingle, decodeSingle } from '@metamask/abi-utils';\n *\n * const encoded = encodeSingle('uint256', 42);\n * const decoded = decodeSingle('uint256', encoded);\n *\n * console.log(decoded); // 42n\n * ```\n * @see https://docs.soliditylang.org/en/v0.8.17/abi-spec.html#types\n * @param type - The type to decode.\n * @param value - The bytes-like value to decode.\n * @returns The decoded value.\n */\nexport const decodeSingle = <Type extends string>(\n  type: Type,\n  value: BytesLike,\n): TypeMap<[Type], 'output'>[0] => {\n  const result = decode([type] as const, value);\n  assert(\n    result.length === 1,\n    new ParserError('Decoded value array has unexpected length.'),\n  );\n\n  return result[0];\n};\n","import { hasProperty, isObject } from '@metamask/utils';\n\n/**\n * Attempt to get an error message from a value.\n *\n * - If the value is an error, the error's message is returned.\n * - If the value is an object with a `message` property, the value of that\n * property is returned.\n * - If the value is a string, the value is returned.\n * - Otherwise, \"Unknown error.\" is returned.\n *\n * @param error - The value to get an error message from.\n * @returns The error message.\n * @internal\n */\nexport const getErrorMessage = (error?: unknown): string => {\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  if (\n    isObject(error) &&\n    hasProperty(error, 'message') &&\n    typeof error.message === 'string'\n  ) {\n    return error.message;\n  }\n\n  return 'Unknown error.';\n};\n\n/**\n * Get the error stack from a value. If the value is an error, the error's stack\n * is returned. Otherwise, it returns `undefined`.\n *\n * @param error - The value to get an error stack from.\n * @returns The error stack, or `undefined` if the value is not an error.\n * @internal\n */\nexport const getErrorStack = (error?: unknown): string | undefined => {\n  if (error instanceof Error) {\n    return error.stack;\n  }\n\n  return undefined;\n};\n\n/**\n * An error that is thrown when the ABI encoder or decoder encounters an\n * issue.\n */\nexport class ParserError extends Error {\n  readonly name = 'ParserError';\n\n  constructor(message: string, originalError?: unknown) {\n    super(message);\n\n    const originalStack = getErrorStack(originalError);\n    if (originalStack) {\n      this.stack = originalStack;\n    }\n  }\n}\n","export * from './abi';\nexport * from './errors';\nexport * from './types';\n\nexport type { BytesLike, NumberLike } from '@metamask/utils';\nexport type { BooleanLike, FunctionLike, SolidityFunction } from './parsers';\n","import { assert } from '@metamask/utils';\n\ntype IteratorValue = {\n  skip(length: number): void;\n  value: Uint8Array;\n};\n\n/**\n * Iterate over a buffer with the specified size. This will yield a part of the\n * buffer starting at an increment of the specified size, until the end of the\n * buffer is reached.\n *\n * Calling the `skip` function will make it skip the specified number of bytes.\n *\n * @param buffer - The buffer to iterate over.\n * @param size - The number of bytes to iterate with.\n * @returns An iterator that yields the parts of the byte array.\n * @yields The parts of the byte array.\n */\nexport const iterate = function* (\n  buffer: Uint8Array,\n  size = 32,\n): Generator<IteratorValue, IteratorValue, IteratorValue> {\n  for (let pointer = 0; pointer < buffer.length; pointer += size) {\n    const skip = (length: number) => {\n      assert(length >= 0, 'Cannot skip a negative number of bytes.');\n      assert(length % size === 0, 'Length must be a multiple of the size.');\n\n      pointer += length;\n    };\n\n    const value = buffer.subarray(pointer);\n\n    yield { skip, value };\n  }\n\n  return {\n    skip: () => undefined,\n    value: new Uint8Array(),\n  };\n};\n","import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from './errors';\nimport { iterate } from './iterator';\nimport {\n  address,\n  array,\n  bool,\n  bytes,\n  fixedBytes,\n  fn,\n  number,\n  Parser,\n  string,\n  tuple,\n} from './parsers';\nimport { TypeMap } from './types';\nimport { padStart, set } from './utils';\n\n/**\n * Get the parser for the specified type.\n *\n * @param type - The type to get a parser for.\n * @returns The parser.\n * @throws If there is no parser for the specified type.\n */\nexport const getParser = (type: string): Parser => {\n  const parsers: { [key: string]: Parser } = {\n    address,\n    array,\n    bool,\n    bytes,\n    fixedBytes,\n    function: fn,\n    number,\n    string,\n    tuple,\n  };\n\n  const staticParser = parsers[type];\n  if (staticParser) {\n    return staticParser;\n  }\n\n  const parser = Object.values(parsers).find((value) => value.isType(type));\n  if (parser) {\n    return parser;\n  }\n\n  throw new ParserError(`The type \"${type}\" is not supported.`);\n};\n\n/**\n * Check if the specified parser is dynamic, for the provided types. This is\n * primarily used for parsing tuples, where a tuple can be dynamic based on the\n * types. For other parsers, it will simply use the set `isDynamic` value.\n *\n * @param parser - The parser to check.\n * @param type - The type to check the parser with.\n * @returns Whether the parser is dynamic.\n */\nexport const isDynamicParser = (parser: Parser, type: string): boolean => {\n  const { isDynamic } = parser;\n  if (typeof isDynamic === 'function') {\n    return isDynamic(type);\n  }\n\n  return isDynamic;\n};\n\ntype Pointer = {\n  position: number;\n  pointer: number;\n};\n\ntype PackState = {\n  staticBuffer: Uint8Array;\n  dynamicBuffer: Uint8Array;\n  pointers: Pointer[];\n};\n\nexport type PackArgs<Type extends readonly string[]> = {\n  /**\n   * The types of the values to pack.\n   */\n  types: Type;\n\n  /**\n   * The values to pack.\n   */\n  values: TypeMap<Type, 'input'>;\n\n  /**\n   * Whether to use the non-standard packed mode.\n   */\n  packed?: boolean | undefined;\n\n  /**\n   * Whether to use tight packing mode. Only applicable when `packed` is true.\n   * When true, the packed mode will not add any padding bytes. This matches\n   * the packing behaviour of `ethereumjs-abi`, but is not standard.\n   */\n  tight?: boolean | undefined;\n\n  /**\n   * Whether to use the non-standard packed mode in \"array\" mode. This is\n   * normally only used by the {@link array} parser.\n   */\n  arrayPacked?: boolean | undefined;\n\n  /**\n   * The byte array to encode the values into.\n   */\n  byteArray?: Uint8Array;\n};\n\n/**\n * Pack the provided values in a buffer, encoded with the specified types. If a\n * buffer is specified, the resulting value will be concatenated with the\n * buffer.\n *\n * @param args - The arguments object.\n * @param args.types - The types of the values to pack.\n * @param args.values - The values to pack.\n * @param args.packed - Whether to use the non-standard packed mode. Defaults to\n * `false`.\n * @param args.arrayPacked - Whether to use the non-standard packed mode for\n * arrays. Defaults to `false`.\n * @param args.byteArray - The byte array to encode the values into. Defaults to\n * an empty array.\n * @param args.tight - Whether to use tight packing mode. Only applicable when\n * `packed` is true. When true, the packed mode will not add any padding bytes.\n * This matches the packing behaviour of `ethereumjs-abi`, but is not standard.\n * @returns The resulting encoded buffer.\n */\nexport const pack = <Type extends readonly string[]>({\n  types,\n  values,\n  packed = false,\n  tight = false,\n  arrayPacked = false,\n  byteArray = new Uint8Array(),\n}: PackArgs<Type>): Uint8Array => {\n  assert(\n    types.length === values.length,\n    new ParserError(\n      `The number of types (${types.length}) does not match the number of values (${values.length}).`,\n    ),\n  );\n\n  const { staticBuffer, dynamicBuffer, pointers } = types.reduce<PackState>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ staticBuffer, dynamicBuffer, pointers }, type, index) => {\n      const parser = getParser(type);\n      const value = values[index];\n\n      // If packed mode is enabled, we can skip the dynamic check, as all\n      // values are encoded in the static buffer.\n      if (packed || arrayPacked || !isDynamicParser(parser, type)) {\n        return {\n          staticBuffer: parser.encode({\n            buffer: staticBuffer,\n            value,\n            type,\n            packed,\n            tight,\n          }),\n          dynamicBuffer,\n          pointers,\n        };\n      }\n\n      const newStaticBuffer = concatBytes([staticBuffer, new Uint8Array(32)]);\n      const newDynamicBuffer = parser.encode({\n        buffer: dynamicBuffer,\n        value,\n        type,\n        packed,\n        tight,\n      });\n\n      return {\n        staticBuffer: newStaticBuffer,\n        dynamicBuffer: newDynamicBuffer,\n        pointers: [\n          ...pointers,\n          { position: staticBuffer.length, pointer: dynamicBuffer.length },\n        ],\n      };\n    },\n    {\n      staticBuffer: new Uint8Array(),\n      dynamicBuffer: new Uint8Array(),\n      pointers: [],\n    },\n  );\n\n  // If packed mode is enabled, there shouldn't be any dynamic values.\n  assert(\n    (!packed && !arrayPacked) || dynamicBuffer.length === 0,\n    new ParserError('Invalid pack state.'),\n  );\n\n  const dynamicStart = staticBuffer.length;\n  const updatedBuffer = pointers.reduce((target, { pointer, position }) => {\n    const offset = padStart(numberToBytes(dynamicStart + pointer));\n    return set(target, offset, position);\n  }, staticBuffer);\n\n  return concatBytes([byteArray, updatedBuffer, dynamicBuffer]);\n};\n\nexport const unpack = <\n  Type extends readonly string[],\n  Output = TypeMap<Type, 'output'>,\n>(\n  types: Type,\n  buffer: Uint8Array,\n): Output => {\n  const iterator = iterate(buffer);\n\n  return types.map((type) => {\n    const {\n      value: { value, skip },\n      done,\n    } = iterator.next();\n    assert(\n      !done,\n      new ParserError(\n        `The encoded value is invalid for the provided types. Reached end of buffer while attempting to parse \"${type}\".`,\n      ),\n    );\n\n    const parser = getParser(type);\n    const isDynamic = isDynamicParser(parser, type);\n\n    if (isDynamic) {\n      const pointer = bytesToNumber(value.subarray(0, 32));\n      const target = buffer.subarray(pointer);\n\n      return parser.decode({ type, value: target, skip });\n    }\n\n    return parser.decode({ type, value, skip });\n  }) as unknown as Output;\n};\n","import {\n  add0x,\n  assert,\n  BytesLike,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { Parser } from './parser';\n\n/**\n * Normalize an address value. This accepts the address as:\n *\n * - A hex string starting with the `0x` prefix.\n * - A byte array (`Uint8Array` or `Buffer`).\n *\n * It checks that the address is 20 bytes long.\n *\n * @param value - The value to normalize.\n * @returns The normalized address as `Uint8Array`.\n */\nexport const getAddress = (value: BytesLike): Uint8Array => {\n  const bytesValue = createBytes(value);\n  assert(\n    bytesValue.length <= 20,\n    new ParserError(\n      `Invalid address value. Expected address to be 20 bytes long, but received ${bytesValue.length} bytes.`,\n    ),\n  );\n\n  return padStart(bytesValue, 20);\n};\n\nexport const address: Parser<BytesLike, string> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid address type. Since `address` is a simple\n   * type, this is just a check that the value is \"address\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid address type.\n   */\n  isType: (type) => type === 'address',\n\n  /**\n   * Get the byte length of an encoded address. Since `address` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual addresses are only 20 bytes long, but the encoding of\n   * the `address` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded address.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given address to a 32-byte-long byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The address to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded address added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const addressValue = getAddress(value);\n\n    // If we're using packed encoding, we can just add the address bytes to the\n    // byte array, without adding any padding.\n    if (packed) {\n      return concatBytes([buffer, addressValue]);\n    }\n\n    const addressBuffer = padStart(addressValue);\n    return concatBytes([buffer, addressBuffer]);\n  },\n\n  /**\n   * Decode the given byte array to an address.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded address as a hexadecimal string, starting with the\n   * \"0x\"-prefix.\n   */\n  decode({ value }): string {\n    return add0x(bytesToHex(value.slice(12, 32)));\n  },\n};\n","import {\n  assert,\n  bytesToNumber,\n  concatBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { padStart } from '../utils';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\nimport { tuple } from './tuple';\n\nconst ARRAY_REGEX = /^(?<type>.*)\\[(?<length>\\d*?)\\]$/u;\n\nexport const isArrayType = (type: string): boolean => ARRAY_REGEX.test(type);\n\n/**\n * Get the type of the array.\n *\n * @param type - The type to get the array type for.\n * @returns The array type.\n */\nexport const getArrayType = (\n  type: string,\n): [type: string, length: number | undefined] => {\n  const match = type.match(ARRAY_REGEX);\n  assert(\n    match?.groups?.type,\n    new ParserError(\n      `Invalid array type. Expected an array type, but received \"${type}\".`,\n    ),\n  );\n\n  return [\n    match.groups.type,\n    match.groups.length ? parseInt(match.groups.length, 10) : undefined,\n  ];\n};\n\n/**\n * Get the type of the array as a tuple type. This is used for encoding fixed\n * length arrays, which are encoded as tuples.\n *\n * @param innerType - The type of the array.\n * @param length - The length of the array.\n * @returns The tuple type.\n */\nexport const getTupleType = (innerType: string, length: number): string => {\n  return `(${new Array(length).fill(innerType).join(',')})`;\n};\n\nexport const array: Parser<unknown[]> = {\n  /**\n   * Check if the array is dynamic. Arrays are dynamic if the array does not\n   * have a fixed length, or if the array type is dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the array is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const [innerType, length] = getArrayType(type);\n    return (\n      // `T[]` is dynamic for any `T`. `T[k]` is dynamic for any dynamic `T` and\n      // any `k >= 0`.\n      length === undefined || isDynamicParser(getParser(innerType), innerType)\n    );\n  },\n\n  /**\n   * Check if a type is an array type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is an array type.\n   */\n  isType(type: string): boolean {\n    return isArrayType(type);\n  },\n\n  /**\n   * Get the byte length of an encoded array. If the array is dynamic, this\n   * returns 32, i.e., the length of the pointer to the array. If the array is\n   * static, this returns the byte length of the resulting tuple type.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of an encoded array.\n   */\n  getByteLength(type: string): number {\n    assert(\n      isArrayType(type),\n      new ParserError(`Expected an array type, but received \"${type}\".`),\n    );\n\n    const [innerType, length] = getArrayType(type);\n    if (!isDynamicParser(this, type) && length !== undefined) {\n      return tuple.getByteLength(getTupleType(innerType, length));\n    }\n\n    return 32;\n  },\n\n  /**\n   * Encode the given array to a byte array. If the array is static, this uses\n   * the tuple encoder.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The array to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded array added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    // Packed encoding does not support nested arrays.\n    assert(\n      !packed || !isArrayType(arrayType),\n      new ParserError(`Cannot pack nested arrays.`),\n    );\n\n    // Tightly pack `T[]` where `T` is a dynamic type. This is not supported in\n    // Solidity, but is commonly used in the Ethereum ecosystem.\n    if (packed && isDynamicParser(getParser(arrayType), arrayType)) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        packed,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    if (fixedLength) {\n      assert(\n        fixedLength === value.length,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${value.length}.`,\n        ),\n      );\n\n      // `T[k]` for any `T` and `k` is encoded as `(T[0], ..., T[k - 1])`.\n      return tuple.encode({\n        type: getTupleType(arrayType, fixedLength),\n        buffer,\n        value,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        tight,\n      });\n    }\n\n    // For packed encoding, we don't need to encode the length of the array,\n    // so we can just encode the values.\n    if (packed) {\n      return pack({\n        types: new Array(value.length).fill(arrayType),\n        values: value,\n        byteArray: buffer,\n        // In \"tight\" mode, we don't pad the values to 32 bytes if the value is\n        // of type `bytesN`. This is an edge case in `ethereumjs-abi` that we\n        // support to provide compatibility with it.\n        packed: fixedBytes.isType(arrayType) && tight,\n        arrayPacked: true,\n        tight,\n      });\n    }\n\n    // `T[]` with `k` elements is encoded as `k (T[0], ..., T[k - 1])`. That\n    // means that we just need to encode the length of the array, and then the\n    // array itself. The pointer is encoded by the {@link pack} function.\n    const arrayLength = padStart(numberToBytes(value.length));\n    return pack({\n      types: new Array(value.length).fill(arrayType),\n      values: value,\n      byteArray: concatBytes([buffer, arrayLength]),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode an array from the given byte array.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the array.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded array.\n   */\n  decode({ type, value, ...rest }): unknown[] {\n    const [arrayType, fixedLength] = getArrayType(type);\n\n    if (fixedLength) {\n      const result = tuple.decode({\n        type: getTupleType(arrayType, fixedLength),\n        value,\n        ...rest,\n      });\n\n      assert(\n        result.length === fixedLength,\n        new ParserError(\n          `Array length does not match type length. Expected a length of ${fixedLength}, but received ${result.length}.`,\n        ),\n      );\n\n      return result;\n    }\n\n    const arrayLength = bytesToNumber(value.subarray(0, 32));\n    return unpack(new Array(arrayLength).fill(arrayType), value.subarray(32));\n  },\n};\n","import { bigIntToBytes, concatBytes } from '@metamask/utils';\nimport { coerce, create, literal, union, boolean } from 'superstruct';\n\nimport { ParserError } from '../errors';\nimport { number } from './number';\nimport { Parser } from './parser';\n\n/**\n * A boolean-like value. This can be a boolean literal, or \"true\" or \"false\".\n */\nexport type BooleanLike = 'true' | 'false' | boolean;\n\nconst BooleanCoercer = coerce(\n  boolean(),\n  union([literal('true'), literal('false')]),\n  (value) => value === 'true',\n);\n\n/**\n * Normalize a boolean value. This accepts the boolean as:\n *\n * - A boolean literal.\n * - The string \"true\" or \"false\".\n *\n * @param value - The value to get a boolean for.\n * @returns The parsed boolean value. This is `BigInt(1)` for truthy values, or\n * `BigInt(0)` for falsy values.\n */\nexport const getBooleanValue = (value: BooleanLike): bigint => {\n  try {\n    const booleanValue = create(value, BooleanCoercer);\n    if (booleanValue) {\n      return BigInt(1);\n    }\n\n    return BigInt(0);\n  } catch {\n    throw new ParserError(\n      `Invalid boolean value. Expected a boolean literal, or the string \"true\" or \"false\", but received \"${value}\".`,\n    );\n  }\n};\n\nexport const bool: Parser<BooleanLike, boolean> = {\n  isDynamic: false,\n\n  /**\n   * Get if the given value is a valid boolean type. Since `bool` is a simple\n   * type, this is just a check that the value is \"bool\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a valid boolean type.\n   */\n  isType: (type) => type === 'bool',\n\n  /**\n   * Get the byte length of an encoded boolean. Since `bool` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual booleans are only 1 byte long, but the encoding of\n   * the `bool` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded boolean.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given boolean to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The boolean to encode.\n   * @param args.packed - Whether the value is packed.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded boolean added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const booleanValue = getBooleanValue(value);\n\n    // For packed encoding, we add a single byte (`0x00` or `0x01`) to the byte\n    // array.\n    if (packed) {\n      return concatBytes([buffer, bigIntToBytes(booleanValue)]);\n    }\n\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to encode the boolean value.\n    return number.encode({\n      type: 'uint256',\n      buffer,\n      value: booleanValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a boolean.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded boolean.\n   */\n  decode(args): boolean {\n    // Booleans are encoded as 32-byte integers, so we use the number parser\n    // to decode the boolean value.\n    return number.decode({ ...args, type: 'uint256' }) === BigInt(1);\n  },\n};\n","import {\n  BytesLike,\n  bytesToNumber,\n  concatBytes,\n  createBytes,\n  numberToBytes,\n} from '@metamask/utils';\n\nimport { padEnd, padStart } from '../utils';\nimport { Parser } from './parser';\n\nexport const bytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a bytes type. Since `bytes` is a simple type, this is\n   * just a check that the type is \"bytes\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a bytes type.\n   */\n  isType: (type) => type === 'bytes',\n\n  /**\n   * Get the byte length of an encoded bytes value. Since `bytes` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual length of a bytes value is variable, but the encoded\n   * static value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded bytes value.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given bytes value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The bytes value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded bytes value added to it.\n   */\n  encode({ buffer, value, packed }): Uint8Array {\n    const bufferValue = createBytes(value);\n\n    // For packed encoding, we can just add the bytes value to the byte array,\n    // without adding any padding or alignment. There is also no need to\n    // encode the length of the bytes.\n    if (packed) {\n      return concatBytes([buffer, bufferValue]);\n    }\n\n    const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n    // Bytes of length `k` are encoded as `k pad_right(bytes)`.\n    return concatBytes([\n      buffer,\n      padStart(numberToBytes(bufferValue.byteLength)),\n      padEnd(bufferValue, paddedSize),\n    ]);\n  },\n\n  /**\n   * Decode the given byte array to a bytes value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded bytes value as a `Uint8Array`.\n   */\n  decode({ value }): Uint8Array {\n    const bytesValue = value.subarray(0, 32);\n    const length = bytesToNumber(bytesValue);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(32, 32 + length);\n  },\n};\n","import { assert, BytesLike, concatBytes, createBytes } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padEnd } from '../utils';\nimport { Parser } from './parser';\n\nconst BYTES_REGEX = /^bytes([0-9]{1,2})$/u;\n\n/**\n * Get the length of the specified type. If a length is not specified, or if the\n * length is out of range (0 < n <= 32), this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The byte length of the type.\n */\nexport const getByteLength = (type: string): number => {\n  const bytes = type.match(BYTES_REGEX)?.[1];\n  assert(\n    bytes,\n    `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n  );\n\n  const length = Number(bytes);\n  assert(\n    length > 0 && length <= 32,\n    new ParserError(\n      `Invalid byte length. Expected a number between 1 and 32, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\nexport const fixedBytes: Parser<BytesLike, Uint8Array> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a fixed bytes type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a fixed bytes type.\n   */\n  isType(type: string): boolean {\n    return BYTES_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded fixed bytes type.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a fixed bytes value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const length = getByteLength(type);\n    const bufferValue = createBytes(value);\n\n    assert(\n      bufferValue.length <= length,\n      new ParserError(\n        `Expected a value of length ${length}, but received a value of length ${bufferValue.length}.`,\n      ),\n    );\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      return concatBytes([buffer, padEnd(bufferValue, length)]);\n    }\n\n    return concatBytes([buffer, padEnd(bufferValue)]);\n  },\n\n  /**\n   * Decode a fixed bytes value.\n   *\n   * @param args - The arguments to decode.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value as a `Uint8Array`.\n   */\n  decode({ type, value }): Uint8Array {\n    const length = getByteLength(type);\n\n    // Since we're returning a `Uint8Array`, we use `slice` to copy the bytes\n    // into a new array.\n    return value.slice(0, length);\n  },\n};\n","import {\n  assert,\n  bytesToHex,\n  concatBytes,\n  createBytes,\n  hexToBytes,\n  StrictHexStruct,\n} from '@metamask/utils';\nimport { coerce, create, instance, object, union } from 'superstruct';\n\nimport { ParserError } from '../errors';\nimport { fixedBytes } from './fixed-bytes';\nimport { Parser } from './parser';\n\n/**\n * A Solidity function-like value. This can be a hex string, a byte array, or a\n * {@link SolidityFunction} object.\n */\nexport type FunctionLike = string | Uint8Array | SolidityFunction;\n\n/**\n * A Solidity function, i.e., the address of a contract and the selector of a\n * function within that contract.\n */\nexport type SolidityFunction = {\n  /**\n   * The address of the contract. Must be a 40-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  address: string;\n\n  /**\n   * The selector of the function. Must be an 8-character long hex string\n   * (excluding the \"0x\"-prefix).\n   */\n  selector: string;\n};\n\n/**\n * A struct that represents a Solidity function. The value must be a hex string\n * or a byte array. The created value will always be an object with an `address`\n * and `selector` property.\n */\nconst FunctionStruct = coerce(\n  object({\n    address: StrictHexStruct,\n    selector: StrictHexStruct,\n  }),\n  union([StrictHexStruct, instance(Uint8Array)]),\n  (value) => {\n    const bytes = createBytes(value);\n    assert(\n      bytes.length === 24,\n      new ParserError(\n        `Invalid Solidity function. Expected function to be 24 bytes long, but received ${bytes.length} bytes.`,\n      ),\n    );\n\n    return {\n      address: bytesToHex(bytes.subarray(0, 20)),\n      selector: bytesToHex(bytes.subarray(20, 24)),\n    };\n  },\n);\n\n/**\n * Normalize a function. This accepts the function as:\n *\n * - A {@link SolidityFunction} object.\n * - A hexadecimal string.\n * - A byte array.\n *\n * @param input - The function-like input.\n * @returns The function as buffer.\n */\nexport const getFunction = (input: FunctionLike): Uint8Array => {\n  const value = create(input, FunctionStruct);\n  return concatBytes([hexToBytes(value.address), hexToBytes(value.selector)]);\n};\n\nexport const fn: Parser<FunctionLike, SolidityFunction> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a function type. Since `function` is a simple type, this\n   * is just a check that the type is \"function\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a function type.\n   */\n  isType: (type) => type === 'function',\n\n  /**\n   * Get the byte length of an encoded function. Since `function` is a simple\n   * type, this always returns 32.\n   *\n   * Note that actual functions are only 24 bytes long, but the encoding of\n   * the `function` type is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded function.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given function to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The function to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded function added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    const fnValue = getFunction(value);\n\n    // Functions are encoded as `bytes24`, so we use the fixedBytes parser to\n    // encode the function.\n    return fixedBytes.encode({\n      type: 'bytes24',\n      buffer,\n      value: fnValue,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a function.\n   *\n   * @param args - The decoding arguments.\n   * @param args.value - The byte array to decode.\n   * @returns The decoded function as a {@link SolidityFunction} object.\n   */\n  decode({ value }): SolidityFunction {\n    return {\n      address: bytesToHex(value.slice(0, 20)),\n      selector: bytesToHex(value.slice(20, 24)),\n    };\n  },\n};\n","export * from './address';\nexport * from './array';\nexport * from './bool';\nexport * from './bytes';\nexport * from './fixed-bytes';\nexport * from './function';\nexport * from './number';\nexport * from './parser';\nexport * from './string';\nexport * from './tuple';\n","import {\n  assert,\n  bigIntToBytes,\n  bytesToBigInt,\n  bytesToSignedBigInt,\n  concatBytes,\n  createBigInt,\n  NumberLike,\n  signedBigIntToBytes,\n} from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { padStart } from '../utils';\nimport { DecodeArgs, Parser } from './parser';\n\nconst NUMBER_REGEX = /^u?int(?<length>[0-9]*)?$/u;\n\n/**\n * Check if a number type is signed.\n *\n * @param type - The type to check.\n * @returns Whether the type is signed.\n */\nexport const isSigned = (type: string): boolean => {\n  return !type.startsWith('u');\n};\n\n/**\n * Get the length of the specified type. If a length is not specified, if the\n * length is out of range (8 <= n <= 256), or if the length is not a multiple of\n * 8, this will throw an error.\n *\n * @param type - The type to get the length for.\n * @returns The bit length of the type.\n */\nexport const getLength = (type: string): number => {\n  if (type === 'int' || type === 'uint') {\n    return 256;\n  }\n\n  const match = type.match(NUMBER_REGEX);\n  assert(\n    match?.groups?.length,\n    new ParserError(\n      `Invalid number type. Expected a number type, but received \"${type}\".`,\n    ),\n  );\n\n  const length = parseInt(match.groups.length, 10);\n  assert(\n    length >= 8 && length <= 256,\n    new ParserError(\n      `Invalid number length. Expected a number between 8 and 256, but received \"${type}\".`,\n    ),\n  );\n\n  assert(\n    length % 8 === 0,\n    new ParserError(\n      `Invalid number length. Expected a multiple of 8, but received \"${type}\".`,\n    ),\n  );\n\n  return length;\n};\n\n/**\n * Assert that the byte length of the given value is in range for the given\n * number type.\n *\n * @param value - The value to check.\n * @param type - The type of the value.\n * @throws If the value is out of range for the type.\n */\nexport const assertNumberLength = (value: bigint, type: string) => {\n  const length = getLength(type);\n  const maxValue =\n    BigInt(2) ** BigInt(length - (isSigned(type) ? 1 : 0)) - BigInt(1);\n\n  if (isSigned(type)) {\n    // Signed types must be in the range of `-(2^(length - 1))` to\n    // `2^(length - 1) - 1`.\n    assert(\n      value >= -(maxValue + BigInt(1)) && value <= maxValue,\n      new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n    );\n\n    return;\n  }\n\n  // Unsigned types must be in the range of `0` to `2^length - 1`.\n  assert(\n    value <= maxValue,\n    new ParserError(`Number \"${value}\" is out of range for type \"${type}\".`),\n  );\n};\n\n/**\n * Normalize a `bigint` value. This accepts the value as:\n *\n * - A `bigint`.\n * - A `number`.\n * - A decimal string, i.e., a string that does not start with \"0x\".\n * - A hexadecimal string, i.e., a string that starts with \"0x\".\n *\n * @param value - The number-like value to parse.\n * @returns The value parsed as bigint.\n */\nexport const getBigInt = (value: NumberLike): bigint => {\n  try {\n    return createBigInt(value);\n  } catch {\n    throw new ParserError(\n      `Invalid number. Expected a valid number value, but received \"${value}\".`,\n    );\n  }\n};\n\nexport const number: Parser<NumberLike, bigint> = {\n  isDynamic: false,\n\n  /**\n   * Check if a type is a number type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a number type.\n   */\n  isType(type: string): boolean {\n    return NUMBER_REGEX.test(type);\n  },\n\n  /**\n   * Get the byte length of an encoded number type. Since `int` and `uint` are\n   * simple types, this will always return 32.\n   *\n   * @returns The byte length of the type.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode a number value.\n   *\n   * @param args - The arguments to encode.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed }): Uint8Array {\n    const bigIntValue = getBigInt(value);\n\n    assertNumberLength(bigIntValue, type);\n\n    if (isSigned(type)) {\n      // For packed encoding, the value is padded to the length of the type, and\n      // then added to the byte array.\n      if (packed) {\n        const length = getLength(type) / 8;\n        return concatBytes([buffer, signedBigIntToBytes(bigIntValue, length)]);\n      }\n\n      return concatBytes([\n        buffer,\n        padStart(signedBigIntToBytes(bigIntValue, 32)),\n      ]);\n    }\n\n    // For packed encoding, the value is padded to the length of the type, and\n    // then added to the byte array.\n    if (packed) {\n      const length = getLength(type) / 8;\n      return concatBytes([\n        buffer,\n        padStart(bigIntToBytes(bigIntValue), length),\n      ]);\n    }\n\n    return concatBytes([buffer, padStart(bigIntToBytes(bigIntValue))]);\n  },\n\n  /**\n   * Decode a number value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @returns The decoded value.\n   */\n  decode({ type, value }: DecodeArgs): bigint {\n    const buffer = value.subarray(0, 32);\n    if (isSigned(type)) {\n      const numberValue = bytesToSignedBigInt(buffer);\n      assertNumberLength(numberValue, type);\n      return numberValue;\n    }\n\n    const numberValue = bytesToBigInt(buffer);\n    assertNumberLength(numberValue, type);\n    return numberValue;\n  },\n};\n","import { bytesToString, stringToBytes } from '@metamask/utils';\n\nimport { bytes } from './bytes';\nimport { Parser } from './parser';\n\nexport const string: Parser<string> = {\n  isDynamic: true,\n\n  /**\n   * Check if a type is a string type. Since `string` is a simple type, this\n   * is just a check if the type is \"string\".\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a string type.\n   */\n  isType: (type) => type === 'string',\n\n  /**\n   * Get the byte length of an encoded string type. Since `string` is a simple\n   * type, this will always return 32.\n   *\n   * Note that actual strings are variable in length, but the encoded static\n   * value (pointer) is always 32 bytes long.\n   *\n   * @returns The byte length of an encoded string.\n   */\n  getByteLength(): number {\n    return 32;\n  },\n\n  /**\n   * Encode the given string value to a byte array.\n   *\n   * @param args - The encoding arguments.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The string value to encode.\n   * @param args.packed - Whether to use packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded string value added to it.\n   */\n  encode({ buffer, value, packed, tight }): Uint8Array {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to encode\n    // the string as bytes.\n    return bytes.encode({\n      type: 'bytes',\n      buffer,\n      value: stringToBytes(value),\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode the given byte array to a string value.\n   *\n   * @param args - The decoding arguments.\n   * @returns The decoded string value.\n   */\n  decode(args): string {\n    // Strings are encoded as UTF-8 bytes, so we use the bytes parser to decode\n    // the bytes, and convert them to a string.\n    return bytesToString(bytes.decode(args));\n  },\n};\n","import { assert } from '@metamask/utils';\n\nimport { ParserError } from '../errors';\nimport { getParser, isDynamicParser, pack, unpack } from '../packer';\nimport { Parser } from './parser';\n\nconst TUPLE_REGEX = /^\\((.+)\\)$/u;\n\nconst isTupleType = (type: string): boolean => TUPLE_REGEX.test(type);\n\n/**\n * Get elements from a tuple type.\n *\n * @param type - The tuple type to get the types for.\n * @returns The elements of the tuple as string array.\n */\nexport const getTupleElements = (type: string): string[] => {\n  assert(\n    type.startsWith('(') && type.endsWith(')'),\n    new ParserError(\n      `Invalid tuple type. Expected tuple type, but received \"${type}\".`,\n    ),\n  );\n\n  const elements: string[] = [];\n  let current = '';\n  let depth = 0;\n\n  for (let i = 1; i < type.length - 1; i++) {\n    const char = type[i];\n\n    if (char === ',' && depth === 0) {\n      elements.push(current.trim());\n      current = '';\n    } else {\n      current += char;\n\n      if (char === '(') {\n        depth += 1;\n      } else if (char === ')') {\n        depth -= 1;\n      }\n    }\n  }\n\n  if (current.trim()) {\n    elements.push(current.trim());\n  }\n\n  return elements;\n};\n\nexport const tuple: Parser<unknown[]> = {\n  /**\n   * Check if the tuple is dynamic. Tuples are dynamic if one or more elements\n   * of the tuple are dynamic.\n   *\n   * @param type - The type to check.\n   * @returns Whether the tuple is dynamic.\n   */\n  isDynamic(type: string): boolean {\n    const elements = getTupleElements(type);\n    return elements.some((element) => {\n      const parser = getParser(element);\n      return isDynamicParser(parser, element);\n    });\n  },\n\n  /**\n   * Check if a type is a tuple type.\n   *\n   * @param type - The type to check.\n   * @returns Whether the type is a tuple type.\n   */\n  isType(type: string): boolean {\n    return isTupleType(type);\n  },\n\n  /**\n   * Get the byte length of a tuple type. If the tuple is dynamic, this will\n   * always return 32. If the tuple is static, this will return the sum of the\n   * byte lengths of the tuple elements.\n   *\n   * @param type - The type to get the byte length for.\n   * @returns The byte length of the tuple type.\n   */\n  getByteLength(type: string): number {\n    if (isDynamicParser(this, type)) {\n      return 32;\n    }\n\n    const elements = getTupleElements(type);\n\n    return elements.reduce((total, element) => {\n      return total + getParser(element).getByteLength(element);\n    }, 0);\n  },\n\n  /**\n   * Encode a tuple value.\n   *\n   * @param args - The encoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.buffer - The byte array to add to.\n   * @param args.value - The value to encode.\n   * @param args.packed - Whether to use non-standard packed encoding.\n   * @param args.tight - Whether to use non-standard tight encoding.\n   * @returns The bytes with the encoded value added to it.\n   */\n  encode({ type, buffer, value, packed, tight }): Uint8Array {\n    const elements = getTupleElements(type);\n    return pack({\n      types: elements,\n      values: value,\n      byteArray: buffer,\n      packed,\n      tight,\n    });\n  },\n\n  /**\n   * Decode a tuple value.\n   *\n   * @param args - The decoding arguments.\n   * @param args.type - The type of the value.\n   * @param args.value - The value to decode.\n   * @param args.skip - A function to skip a number of bytes.\n   * @returns The decoded value.\n   */\n  decode({ type, value, skip }): unknown[] {\n    const elements = getTupleElements(type);\n\n    const length = this.getByteLength(type) - 32;\n    skip(length);\n\n    return unpack(elements, value);\n  },\n};\n","export * from './abi';\n","import { concatBytes } from '@metamask/utils';\n\nconst BUFFER_WIDTH = 32;\n\n/**\n * Set `buffer` in `target` at the specified position.\n *\n * @param target - The buffer to set to.\n * @param buffer - The buffer to set in the target.\n * @param position - The position at which to set the target.\n * @returns The combined buffer.\n */\nexport const set = (\n  target: Uint8Array,\n  buffer: Uint8Array,\n  position: number,\n): Uint8Array => {\n  return concatBytes([\n    target.subarray(0, position),\n    buffer,\n    target.subarray(position + buffer.length),\n  ]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the start.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padStart = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([padding, buffer]);\n};\n\n/**\n * Add padding to a buffer. If the buffer is larger than `length`, this function won't do anything. If it's smaller, the\n * buffer will be padded to the specified length, with extra zeroes at the end.\n *\n * @param buffer - The buffer to add padding to.\n * @param length - The number of bytes to pad the buffer to.\n * @returns The padded buffer.\n */\nexport const padEnd = (\n  buffer: Uint8Array,\n  length = BUFFER_WIDTH,\n): Uint8Array => {\n  const padding = new Uint8Array(Math.max(length - buffer.length, 0)).fill(\n    0x00,\n  );\n\n  return concatBytes([buffer, padding]);\n};\n","export * from './buffer';\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport type EthEncryptedData = {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n};\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array: Uint8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && data && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const receiverPrivateKeyUint8Array = naclDecodeHex(privateKey);\n      const receiverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        receiverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        receiverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      try {\n        if (!decryptedMessage) {\n          throw new Error();\n        }\n        const output = naclUtil.encodeUTF8(decryptedMessage);\n        // TODO: This is probably extraneous but was kept to minimize changes during refactor\n        if (!output) {\n          throw new Error();\n        }\n        return output;\n      } catch (err) {\n        if (err && typeof err.message === 'string' && err.message.length) {\n          throw new Error(`Decryption failed: ${err.message as string}`);\n        }\n        throw new Error(`Decryption failed.`);\n      }\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = naclDecodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction naclDecodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import { arrToBufArr, ecsign, publicToAddress } from '@ethereumjs/util';\nimport { encode, encodePacked } from '@metamask/abi-utils';\nimport {\n  getArrayType,\n  getByteLength,\n  getLength,\n  isArrayType,\n} from '@metamask/abi-utils/dist/parsers';\nimport { padStart } from '@metamask/abi-utils/dist/utils';\nimport {\n  add0x,\n  assert,\n  bigIntToBytes,\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  isStrictHexString,\n  numberToBytes,\n  signedBigIntToBytes,\n  stringToBytes,\n} from '@metamask/utils';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport type TypedDataV1Field = {\n  name: string;\n  type: string;\n  value: any;\n};\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport type MessageTypeProperty = {\n  name: string;\n  type: string;\n};\n\nexport type MessageTypes = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n};\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport type TypedMessage<T extends MessageTypes> = {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n};\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Parse a string, number, or bigint value into a `Uint8Array`.\n *\n * @param type - The type of the value.\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseNumber(type: string, value: string | number | bigint) {\n  assert(\n    value !== null,\n    `Unable to encode value: Invalid number. Expected a valid number value, but received \"${value}\".`,\n  );\n\n  const bigIntValue = BigInt(value);\n\n  const length = getLength(type);\n  const maxValue = BigInt(2) ** BigInt(length) - BigInt(1);\n\n  // Note that this is not accurate, since the actual maximum value for unsigned\n  // integers is `2 ^ (length - 1) - 1`, but this is required for backwards\n  // compatibility with the old implementation.\n  assert(\n    bigIntValue >= -maxValue && bigIntValue <= maxValue,\n    `Unable to encode value: Number \"${value}\" is out of range for type \"${type}\".`,\n  );\n\n  return bigIntValue;\n}\n\n/**\n * Parse an address string to a `Uint8Array`. The behaviour of this is quite\n * strange, in that it does not parse the address as hexadecimal string, nor as\n * UTF-8. It does some weird stuff with the string and char codes, and then\n * returns the result as a `Uint8Array`.\n *\n * This is based on the old `ethereumjs-abi` implementation, which essentially\n * calls `new BN(address, 10)` on the address string, the equivalent of calling\n * `parseInt(address, 10)` in JavaScript. This is not a valid way to parse an\n * address and would result in `NaN` in plain JavaScript, but it is the\n * behaviour of the old implementation, and so we must preserve it for backwards\n * compatibility.\n *\n * @param address - The address to parse.\n * @returns The parsed address.\n */\nfunction reallyStrangeAddressToBytes(address: string): Uint8Array {\n  let addressValue = BigInt(0);\n\n  for (let i = 0; i < address.length; i++) {\n    const character = BigInt(address.charCodeAt(i) - 48);\n    addressValue *= BigInt(10);\n\n    // 'a'\n    if (character >= 49) {\n      addressValue += character - BigInt(49) + BigInt(0xa);\n\n      // 'A'\n    } else if (character >= 17) {\n      addressValue += character - BigInt(17) + BigInt(0xa);\n\n      // '0' - '9'\n    } else {\n      addressValue += character;\n    }\n  }\n\n  return padStart(bigIntToBytes(addressValue), 20);\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  // TODO: constrain type on `value`\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: bigint | Buffer | boolean | string | Uint8Array] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      // TODO: return Buffer, remove string from return type\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  // `function` is supported in `@metamask/abi-utils`, but not allowed by\n  // EIP-712, so we throw an error here.\n  if (type === 'function') {\n    throw new Error('Unsupported or invalid type: \"function\"');\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'address') {\n    if (typeof value === 'number') {\n      return ['address', padStart(numberToBytes(value), 20)];\n    } else if (isStrictHexString(value)) {\n      return ['address', add0x(value)];\n    } else if (typeof value === 'string') {\n      return ['address', reallyStrangeAddressToBytes(value).subarray(0, 20)];\n    }\n  }\n\n  if (type === 'bool') {\n    return ['bool', Boolean(value)];\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBytes(value);\n    } else if (isStrictHexString(value) || value === '0x') {\n      value = hexToBytes(value);\n    } else if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.startsWith('bytes') && type !== 'bytes' && !type.includes('[')) {\n    if (typeof value === 'number') {\n      if (value < 0) {\n        return ['bytes32', new Uint8Array(32)];\n      }\n\n      return ['bytes32', bigIntToBytes(BigInt(value))];\n    } else if (isStrictHexString(value)) {\n      return ['bytes32', hexToBytes(value)];\n    }\n\n    return ['bytes32', value];\n  }\n\n  if (type.startsWith('int') && !type.includes('[')) {\n    const bigIntValue = parseNumber(type, value);\n    if (bigIntValue >= BigInt(0)) {\n      return ['uint256', bigIntValue];\n    }\n\n    return ['int256', bigIntValue];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBytes(value);\n    } else {\n      value = stringToBytes(value ?? '');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.endsWith(']')) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item: any) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          encode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: (string | bigint | boolean | Uint8Array | Buffer)[] = [\n    hashType(primaryType, types),\n  ];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return arrToBufArr(encode(encodedTypes, encodedValues));\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  if (typeof primaryType !== 'string') {\n    throw new Error(\n      `Invalid findTypeDependencies input ${JSON.stringify(primaryType)}`,\n    );\n  }\n  const match = primaryType.match(/^\\w*/u) as RegExpMatchArray;\n  [primaryType] = match;\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = stringToBytes(encodeType(primaryType, types));\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    // TODO: Fix types\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types } as any;\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [hexToBytes('1901')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(concatBytes(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bytesToHex(hashBuffer);\n}\n\n/**\n * Normalize a value, so that `@metamask/abi-utils` can handle it. This\n * matches the behaviour of the `ethereumjs-abi` library.\n *\n * @param type - The type of the value to normalize.\n * @param value - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalizeValue(type: string, value: unknown): any {\n  if (isArrayType(type) && Array.isArray(value)) {\n    const [innerType] = getArrayType(type);\n    return value.map((item) => normalizeValue(innerType, item));\n  }\n\n  if (type === 'address') {\n    if (typeof value === 'number') {\n      return padStart(numberToBytes(value), 20);\n    }\n\n    if (isStrictHexString(value)) {\n      return padStart(hexToBytes(value).subarray(0, 20), 20);\n    }\n\n    if (value instanceof Uint8Array) {\n      return padStart(value.subarray(0, 20), 20);\n    }\n  }\n\n  if (type === 'bool') {\n    return Boolean(value);\n  }\n\n  if (type.startsWith('bytes') && type !== 'bytes') {\n    const length = getByteLength(type);\n    if (typeof value === 'number') {\n      if (value < 0) {\n        // `solidityPack(['bytesN'], [-1])` returns `0x00..00`.\n        return new Uint8Array();\n      }\n\n      return numberToBytes(value).subarray(0, length);\n    }\n\n    if (isStrictHexString(value)) {\n      return hexToBytes(value).subarray(0, length);\n    }\n\n    if (value instanceof Uint8Array) {\n      return value.subarray(0, length);\n    }\n  }\n\n  if (type.startsWith('uint')) {\n    if (typeof value === 'number') {\n      return Math.abs(value);\n    }\n  }\n\n  if (type.startsWith('int')) {\n    if (typeof value === 'number') {\n      const length = getLength(type);\n      return BigInt.asIntN(length, BigInt(value));\n    }\n  }\n\n  return value;\n}\n\n/**\n * For some reason `ethereumjs-abi` treats `address` and `address[]` differently\n * so we need to normalize `address[]` differently.\n *\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeAddresses(values: unknown[]) {\n  return values.map((value) => {\n    if (typeof value === 'number') {\n      return padStart(numberToBytes(value), 32);\n    }\n\n    if (isStrictHexString(value)) {\n      return padStart(hexToBytes(value).subarray(0, 32), 32);\n    }\n\n    if (value instanceof Uint8Array) {\n      return padStart(value.subarray(0, 32), 32);\n    }\n\n    return value;\n  });\n}\n\n/**\n * For some reason `ethereumjs-abi` treats `intN` and `intN[]` differently\n * so we need to normalize `intN[]` differently.\n *\n * @param type - The type of the value to normalize.\n * @param values - The values to normalize.\n * @returns The normalized values.\n */\nfunction normalizeIntegers(type: string, values: unknown[]) {\n  return values.map((value) => {\n    if (\n      typeof value === 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'bigint'\n    ) {\n      const bigIntValue = parseNumber(type, value);\n      if (bigIntValue >= BigInt(0)) {\n        return padStart(bigIntToBytes(bigIntValue), 32);\n      }\n\n      const length = getLength(type);\n      const asIntN = BigInt.asIntN(length, bigIntValue);\n      return signedBigIntToBytes(asIntN, 32);\n    }\n\n    return value;\n  });\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const normalizedData = typedData.map(({ name, type, value }) => {\n    // Handle an edge case with `address[]` types.\n    if (type === 'address[]') {\n      return {\n        name,\n        type: 'bytes32[]',\n        value: normalizeAddresses(value),\n      };\n    }\n\n    // Handle an edge case with `intN[]` types.\n    if (type.startsWith('int') && isArrayType(type)) {\n      const [innerType, length] = getArrayType(type);\n      return {\n        name,\n        type: `bytes32[${length ?? ''}]`,\n        value: normalizeIntegers(innerType, value),\n      };\n    }\n\n    return {\n      name,\n      type,\n      value: normalizeValue(type, value),\n    };\n  });\n\n  const data = normalizedData.map((e) => {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = normalizedData.map((e) => {\n    if (e.type === 'function') {\n      throw new Error('Unsupported or invalid type: \"function\"');\n    }\n\n    return e.type;\n  });\n  const schema = typedData.map((e) => {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      encodePacked(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(encodePacked(['string[]'], [schema], true)),\n          keccak256(encodePacked(types, data, true)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of\n * EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(arrToBufArr(bigIntToBytes(sig.v)), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(data as TypedMessage<T>, version);\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bytesToHex(sender);\n}\n","import {\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  isHexString,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport {\n  numberToHex,\n  remove0x,\n  add0x,\n  bytesToHex,\n  numberToBytes,\n} from '@metamask/utils';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = remove0x(numberToHex(vSig));\n  return add0x(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string | undefined {\n  if (isNullish(input)) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = numberToBytes(input);\n    input = bytesToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input as any as string}`;\n    throw new Error(msg);\n  }\n\n  return add0x(input.toLowerCase());\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. curveFn.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * From draft-irtf-cfrg-hash-to-curve-16\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package binary provides functions for encoding and decoding numbers in byte arrays.\n */\n\nimport { isSafeInteger } from \"@stablelib/int\";\n\n// TODO(dchest): add asserts for correct value ranges and array offsets.\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16BE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 0] << 8) | array[offset + 1]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as big-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 0] << 8) | array[offset + 1]) >>> 0;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * signed 16-bit integer and returns it.\n */\nexport function readInt16LE(array: Uint8Array, offset = 0): number {\n    return (((array[offset + 1] << 8) | array[offset]) << 16) >> 16;\n}\n\n/**\n * Reads 2 bytes from array starting at offset as little-endian\n * unsigned 16-bit integer and returns it.\n */\nexport function readUint16LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 1] << 8) | array[offset]) >>> 0;\n}\n\n/**\n * Writes 2-byte big-endian representation of 16-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16BE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 8;\n    out[offset + 1] = value >>> 0;\n    return out;\n}\n\nexport const writeInt16BE = writeUint16BE;\n\n/**\n * Writes 2-byte little-endian representation of 16-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 2-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint16LE(value: number, out = new Uint8Array(2), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    return out;\n}\n\nexport const writeInt16LE = writeUint16LE;\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32BE(array: Uint8Array, offset = 0): number {\n    return (array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32BE(array: Uint8Array, offset = 0): number {\n    return ((array[offset] << 24) |\n        (array[offset + 1] << 16) |\n        (array[offset + 2] << 8) |\n        array[offset + 3]) >>> 0;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * signed 32-bit integer and returns it.\n */\nexport function readInt32LE(array: Uint8Array, offset = 0): number {\n    return (array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset];\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * unsigned 32-bit integer and returns it.\n */\nexport function readUint32LE(array: Uint8Array, offset = 0): number {\n    return ((array[offset + 3] << 24) |\n        (array[offset + 2] << 16) |\n        (array[offset + 1] << 8) |\n        array[offset]) >>> 0;\n}\n\n/**\n * Writes 4-byte big-endian representation of 32-bit unsigned\n * value to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 24;\n    out[offset + 1] = value >>> 16;\n    out[offset + 2] = value >>> 8;\n    out[offset + 3] = value >>> 0;\n    return out;\n}\n\nexport const writeInt32BE = writeUint32BE;\n\n/**\n * Writes 4-byte little-endian representation of 32-bit unsigned\n * value to array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    out[offset + 0] = value >>> 0;\n    out[offset + 1] = value >>> 8;\n    out[offset + 2] = value >>> 16;\n    out[offset + 3] = value >>> 24;\n    return out;\n}\n\n\nexport const writeInt32LE = writeUint32LE;\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64BE(array: Uint8Array, offset = 0): number {\n    const hi = readInt32BE(array, offset);\n    const lo = readInt32BE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64BE(array: Uint8Array, offset = 0): number {\n    const hi = readUint32BE(array, offset);\n    const lo = readUint32BE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * signed 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports exact\n * numbers in range -9007199254740991 to 9007199254740991.\n * If the number stored in the byte array is outside this range,\n * the result is not exact.\n */\nexport function readInt64LE(array: Uint8Array, offset = 0): number {\n    const lo = readInt32LE(array, offset);\n    const hi = readInt32LE(array, offset + 4);\n    return hi * 0x100000000 + lo - ((lo>>31) * 0x100000000);\n}\n\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * unsigned 64-bit integer and returns it.\n *\n * IMPORTANT: due to JavaScript limitation, supports values up to 2^53-1.\n */\nexport function readUint64LE(array: Uint8Array, offset = 0): number {\n    const lo = readUint32LE(array, offset);\n    const hi = readUint32LE(array, offset + 4);\n    return hi * 0x100000000 + lo;\n}\n\n/**\n * Writes 8-byte big-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32BE(value / 0x100000000 >>> 0, out, offset);\n    writeUint32BE(value >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64BE = writeUint64BE;\n\n/**\n * Writes 8-byte little-endian representation of 64-bit unsigned\n * value to byte array starting at offset.\n *\n * Due to JavaScript limitation, supports values up to 2^53-1.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeUint64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    writeUint32LE(value >>> 0, out, offset);\n    writeUint32LE(value / 0x100000000 >>> 0, out, offset + 4);\n    return out;\n}\n\nexport const writeInt64LE = writeUint64LE;\n\n/**\n * Reads bytes from array starting at offset as big-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintBE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintBE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintBE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Reads bytes from array starting at offset as little-endian\n * unsigned bitLen-bit integer and returns it.\n *\n * Supports bit lengths divisible by 8, up to 48.\n */\nexport function readUintLE(bitLength: number, array: Uint8Array, offset = 0): number {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"readUintLE supports only bitLengths divisible by 8\");\n    }\n    if (bitLength / 8 > array.length - offset) {\n        throw new Error(\"readUintLE: array is too short for the given bitLength\");\n    }\n    let result = 0;\n    let mul = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        result += array[i] * mul;\n        mul *= 256;\n    }\n    return result;\n}\n\n/**\n * Writes a big-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintBE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintBE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = bitLength / 8 + offset - 1; i >= offset; i--) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Writes a little-endian representation of bitLen-bit unsigned\n * value to array starting at offset.\n *\n * Supports bit lengths divisible by 8, up to 48.\n *\n * If byte array is not given, creates a new one.\n *\n * Returns the output byte array.\n */\nexport function writeUintLE(bitLength: number, value: number,\n    out = new Uint8Array(bitLength / 8), offset = 0): Uint8Array {\n    // TODO(dchest): implement support for bitLengths non-divisible by 8\n    if (bitLength % 8 !== 0) {\n        throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");\n    }\n    if (!isSafeInteger(value)) {\n        throw new Error(\"writeUintLE value must be an integer\");\n    }\n    let div = 1;\n    for (let i = offset; i < offset + bitLength / 8; i++) {\n        out[i] = (value / div) & 0xff;\n        div *= 256;\n    }\n    return out;\n}\n\n/**\n * Reads 4 bytes from array starting at offset as big-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset);\n}\n\n/**\n * Reads 4 bytes from array starting at offset as little-endian\n * 32-bit floating-point number and returns it.\n */\nexport function readFloat32LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, true);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as big-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64BE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset);\n}\n\n/**\n * Reads 8 bytes from array starting at offset as little-endian\n * 64-bit floating-point number (\"double\") and returns it.\n */\nexport function readFloat64LE(array: Uint8Array, offset = 0): number {\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, true);\n}\n\n/**\n * Writes 4-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32BE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value);\n    return out;\n}\n\n/**\n * Writes 4-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 4-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat32LE(value: number, out = new Uint8Array(4), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat32(offset, value, true);\n    return out;\n}\n\n/**\n * Writes 8-byte big-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64BE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value);\n    return out;\n}\n\n/**\n * Writes 8-byte little-endian floating-point representation of value\n * to byte array starting at offset.\n *\n * If byte array is not given, creates a new 8-byte one.\n *\n * Returns the output byte array.\n */\nexport function writeFloat64LE(value: number, out = new Uint8Array(8), offset = 0): Uint8Array {\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    view.setFloat64(offset, value, true);\n    return out;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha implements ChaCha stream cipher.\n */\n\nimport { writeUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\n// Number of ChaCha rounds (ChaCha20).\nconst ROUNDS = 20;\n\n// Applies the ChaCha core function to 16-byte input,\n// 32-byte key key, and puts the result into 64-byte array out.\nfunction core(out: Uint8Array, input: Uint8Array, key: Uint8Array): void {\n    let j0 = 0x61707865; // \"expa\"  -- ChaCha's \"sigma\" constant\n    let j1 = 0x3320646E; // \"nd 3\"     for 32-byte keys\n    let j2 = 0x79622D32; // \"2-by\"\n    let j3 = 0x6B206574; // \"te k\"\n    let j4 = (key[3] << 24) | (key[2] << 16) | (key[1] << 8) | key[0];\n    let j5 = (key[7] << 24) | (key[6] << 16) | (key[5] << 8) | key[4];\n    let j6 = (key[11] << 24) | (key[10] << 16) | (key[9] << 8) | key[8];\n    let j7 = (key[15] << 24) | (key[14] << 16) | (key[13] << 8) | key[12];\n    let j8 = (key[19] << 24) | (key[18] << 16) | (key[17] << 8) | key[16];\n    let j9 = (key[23] << 24) | (key[22] << 16) | (key[21] << 8) | key[20];\n    let j10 = (key[27] << 24) | (key[26] << 16) | (key[25] << 8) | key[24];\n    let j11 = (key[31] << 24) | (key[30] << 16) | (key[29] << 8) | key[28];\n    let j12 = (input[3] << 24) | (input[2] << 16) | (input[1] << 8) | input[0];\n    let j13 = (input[7] << 24) | (input[6] << 16) | (input[5] << 8) | input[4];\n    let j14 = (input[11] << 24) | (input[10] << 16) | (input[9] << 8) | input[8];\n    let j15 = (input[15] << 24) | (input[14] << 16) | (input[13] << 8) | input[12];\n\n    let x0 = j0;\n    let x1 = j1;\n    let x2 = j2;\n    let x3 = j3;\n    let x4 = j4;\n    let x5 = j5;\n    let x6 = j6;\n    let x7 = j7;\n    let x8 = j8;\n    let x9 = j9;\n    let x10 = j10;\n    let x11 = j11;\n    let x12 = j12;\n    let x13 = j13;\n    let x14 = j14;\n    let x15 = j15;\n\n    for (let i = 0; i < ROUNDS; i += 2) {\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 12) | x4 << 12;\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 12) | x5 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 12) | x6 << 12;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 12) | x7 << 12;\n\n        x2 = x2 + x6 | 0; x14 ^= x2; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x10 = x10 + x14 | 0; x6 ^= x10; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x3 = x3 + x7 | 0; x15 ^= x3; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x11 = x11 + x15 | 0; x7 ^= x11; x7 = x7 >>> (32 - 7) | x7 << 7;\n\n        x1 = x1 + x5 | 0; x13 ^= x1; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x9 = x9 + x13 | 0; x5 ^= x9; x5 = x5 >>> (32 - 7) | x5 << 7;\n        x0 = x0 + x4 | 0; x12 ^= x0; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x8 = x8 + x12 | 0; x4 ^= x8; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 16) | x15 << 16;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 12) | x5 << 12;\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 16) | x12 << 16;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 12) | x6 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 16) | x13 << 16;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 12) | x7 << 12;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 16) | x14 << 16;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 12) | x4 << 12;\n\n        x2 = x2 + x7 | 0; x13 ^= x2; x13 = x13 >>> (32 - 8) | x13 << 8;\n        x8 = x8 + x13 | 0; x7 ^= x8; x7 = x7 >>> (32 - 7) | x7 << 7;\n        x3 = x3 + x4 | 0; x14 ^= x3; x14 = x14 >>> (32 - 8) | x14 << 8;\n        x9 = x9 + x14 | 0; x4 ^= x9; x4 = x4 >>> (32 - 7) | x4 << 7;\n\n        x1 = x1 + x6 | 0; x12 ^= x1; x12 = x12 >>> (32 - 8) | x12 << 8;\n        x11 = x11 + x12 | 0; x6 ^= x11; x6 = x6 >>> (32 - 7) | x6 << 7;\n        x0 = x0 + x5 | 0; x15 ^= x0; x15 = x15 >>> (32 - 8) | x15 << 8;\n        x10 = x10 + x15 | 0; x5 ^= x10; x5 = x5 >>> (32 - 7) | x5 << 7;\n    }\n    writeUint32LE(x0 + j0 | 0, out, 0);\n    writeUint32LE(x1 + j1 | 0, out, 4);\n    writeUint32LE(x2 + j2 | 0, out, 8);\n    writeUint32LE(x3 + j3 | 0, out, 12);\n    writeUint32LE(x4 + j4 | 0, out, 16);\n    writeUint32LE(x5 + j5 | 0, out, 20);\n    writeUint32LE(x6 + j6 | 0, out, 24);\n    writeUint32LE(x7 + j7 | 0, out, 28);\n    writeUint32LE(x8 + j8 | 0, out, 32);\n    writeUint32LE(x9 + j9 | 0, out, 36);\n    writeUint32LE(x10 + j10 | 0, out, 40);\n    writeUint32LE(x11 + j11 | 0, out, 44);\n    writeUint32LE(x12 + j12 | 0, out, 48);\n    writeUint32LE(x13 + j13 | 0, out, 52);\n    writeUint32LE(x14 + j14 | 0, out, 56);\n    writeUint32LE(x15 + j15 | 0, out, 60);\n}\n\n/**\n * Encrypt src with ChaCha20 stream generated for the given 32-byte key and\n * 8-byte (as in original implementation) or 12-byte (as in RFC7539) nonce and\n * write the result into dst and return it.\n *\n * dst and src may be the same, but otherwise must not overlap.\n *\n * If nonce is 12 bytes, users should not encrypt more than 256 GiB with the\n * same key and nonce, otherwise the stream will repeat. The function will\n * throw error if counter overflows to prevent this.\n *\n * If nonce is 8 bytes, the output is practically unlimited (2^70 bytes, which\n * is more than a million petabytes). However, it is not recommended to\n * generate 8-byte nonces randomly, as the chance of collision is high.\n *\n * Never use the same key and nonce to encrypt more than one message.\n *\n * If nonceInplaceCounterLength is not 0, the nonce is assumed to be a 16-byte\n * array with stream counter in first nonceInplaceCounterLength bytes and nonce\n * in the last remaining bytes. The counter will be incremented inplace for\n * each ChaCha block. This is useful if you need to encrypt one stream of data\n * in chunks.\n */\nexport function streamXOR(key: Uint8Array, nonce: Uint8Array,\n    src: Uint8Array, dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    // We only support 256-bit keys.\n    if (key.length !== 32) {\n        throw new Error(\"ChaCha: key size must be 32 bytes\");\n    }\n\n    if (dst.length < src.length) {\n        throw new Error(\"ChaCha: destination is shorter than source\");\n    }\n\n    let nc: Uint8Array;\n    let counterLength: number;\n\n    if (nonceInplaceCounterLength === 0) {\n        if (nonce.length !== 8 && nonce.length !== 12) {\n            throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");\n        }\n        nc = new Uint8Array(16);\n        // First counterLength bytes of nc are counter, starting with zero.\n        counterLength = nc.length - nonce.length;\n        // Last bytes of nc after counterLength are nonce, set them.\n        nc.set(nonce, counterLength);\n    } else {\n        if (nonce.length !== 16) {\n            throw new Error(\"ChaCha nonce with counter must be 16 bytes\");\n        }\n        // This will update passed nonce with counter inplace.\n        nc = nonce;\n        counterLength = nonceInplaceCounterLength;\n    }\n\n    // Allocate temporary space for ChaCha block.\n    const block = new Uint8Array(64);\n\n    for (let i = 0; i < src.length; i += 64) {\n        // Generate a block.\n        core(block, nc, key);\n\n        // XOR block bytes with src into dst.\n        for (let j = i; j < i + 64 && j < src.length; j++) {\n            dst[j] = src[j] ^ block[j - i];\n        }\n\n        // Increment counter.\n        incrementCounter(nc, 0, counterLength);\n    }\n\n    // Cleanup temporary space.\n    wipe(block);\n\n    if (nonceInplaceCounterLength === 0) {\n        // Cleanup counter.\n        wipe(nc);\n    }\n\n    return dst;\n}\n\n/**\n * Generate ChaCha20 stream for the given 32-byte key and 8-byte or 12-byte\n * nonce and write it into dst and return it.\n *\n * Never use the same key and nonce to generate more than one stream.\n *\n * If nonceInplaceCounterLength is not 0, it behaves the same with respect to\n * the nonce as described in the streamXOR documentation.\n *\n * stream is like streamXOR with all-zero src.\n */\nexport function stream(key: Uint8Array, nonce: Uint8Array,\n    dst: Uint8Array, nonceInplaceCounterLength = 0): Uint8Array {\n    wipe(dst);\n    return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);\n}\n\nfunction incrementCounter(counter: Uint8Array, pos: number, len: number) {\n    let carry = 1;\n    while (len--) {\n        carry = carry + (counter[pos] & 0xff) | 0;\n        counter[pos] = carry & 0xff;\n        carry >>>= 8;\n        pos++;\n    }\n    if (carry > 0) {\n        throw new Error(\"ChaCha: counter overflow\");\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package chacha20poly1305 implements ChaCha20-Poly1305 AEAD.\n */\n\nimport { AEAD } from \"@stablelib/aead\";\nimport { streamXOR, stream } from \"@stablelib/chacha\";\nimport { Poly1305 } from \"@stablelib/poly1305\";\nimport { wipe } from \"@stablelib/wipe\";\nimport { writeUint64LE } from \"@stablelib/binary\";\nimport { equal } from \"@stablelib/constant-time\";\n\nexport const KEY_LENGTH = 32;\nexport const NONCE_LENGTH = 12;\nexport const TAG_LENGTH = 16;\n\nconst ZEROS = new Uint8Array(16);\n\n/**\n * ChaCha20-Poly1305 Authenticated Encryption with Associated Data.\n *\n * Defined in RFC7539.\n */\nexport class ChaCha20Poly1305 implements AEAD {\n    readonly nonceLength = NONCE_LENGTH;\n    readonly tagLength = TAG_LENGTH;\n\n    private _key: Uint8Array;\n\n    /**\n     * Creates a new instance with the given 32-byte key.\n     */\n    constructor(key: Uint8Array) {\n        if (key.length !== KEY_LENGTH) {\n            throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");\n        }\n        // Copy key.\n        this._key = new Uint8Array(key);\n    }\n\n    /**\n     * Encrypts and authenticates plaintext, authenticates associated data,\n     * and returns sealed ciphertext, which includes authentication tag.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If dst is given (it must be the size of plaintext + the size of tag\n     * length) the result will be put into it. Dst and plaintext must not\n     * overlap.\n     */\n    seal(nonce: Uint8Array, plaintext: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        // We pass full counter, which has 12-byte nonce and 4-byte block counter,\n        // and it will get incremented after generating the block, which is\n        // exactly what we need: we only use the first 32 bytes of 64-byte\n        // ChaCha block and discard the next 32 bytes.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Allocate space for sealed ciphertext.\n        const resultLength = plaintext.length + this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Encrypt plaintext.\n        streamXOR(this._key, counter, plaintext, result, 4);\n\n        // Authenticate.\n        // XXX: can \"simplify\" here: pass full result (which is already padded\n        // due to zeroes prepared for tag), and ciphertext length instead of\n        // subarray of result.\n        this._authenticate(result.subarray(result.length - this.tagLength, result.length),\n            authKey, result.subarray(0, result.length - this.tagLength), associatedData);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    /**\n     * Authenticates sealed ciphertext (which includes authentication tag) and\n     * associated data, decrypts ciphertext and returns decrypted plaintext.\n     *\n     * RFC7539 specifies 12 bytes for nonce. It may be this 12-byte nonce\n     * (\"IV\"), or full 16-byte counter (called \"32-bit fixed-common part\")\n     * and nonce.\n     *\n     * If authentication fails, it returns null.\n     *\n     * If dst is given (it must be of ciphertext length minus tag length),\n     * the result will be put into it. Dst and plaintext must not overlap.\n     */\n    open(nonce: Uint8Array, sealed: Uint8Array, associatedData?: Uint8Array,\n        dst?: Uint8Array): Uint8Array | null {\n        if (nonce.length > 16) {\n            throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");\n        }\n\n        // Sealed ciphertext should at least contain tag.\n        if (sealed.length < this.tagLength) {\n            // TODO(dchest): should we throw here instead?\n            return null;\n        }\n\n        // Allocate space for counter, and set nonce as last bytes of it.\n        const counter = new Uint8Array(16);\n        counter.set(nonce, counter.length - nonce.length);\n\n        // Generate authentication key by taking first 32-bytes of stream.\n        const authKey = new Uint8Array(32);\n        stream(this._key, counter, authKey, 4);\n\n        // Authenticate.\n        // XXX: can simplify and avoid allocation: since authenticate()\n        // already allocates tag (from Poly1305.digest(), it can return)\n        // it instead of copying to calculatedTag. But then in seal()\n        // we'll need to copy it.\n        const calculatedTag = new Uint8Array(this.tagLength);\n        this._authenticate(calculatedTag, authKey,\n            sealed.subarray(0, sealed.length - this.tagLength), associatedData);\n\n        // Constant-time compare tags and return null if they differ.\n        if (!equal(calculatedTag,\n            sealed.subarray(sealed.length - this.tagLength, sealed.length))) {\n            return null;\n        }\n\n        // Allocate space for decrypted plaintext.\n        const resultLength = sealed.length - this.tagLength;\n        let result;\n        if (dst) {\n            if (dst.length !== resultLength) {\n                throw new Error(\"ChaCha20Poly1305: incorrect destination length\");\n            }\n            result = dst;\n        } else {\n            result = new Uint8Array(resultLength);\n        }\n\n        // Decrypt.\n        streamXOR(this._key, counter,\n            sealed.subarray(0, sealed.length - this.tagLength), result, 4);\n\n        // Cleanup.\n        wipe(counter);\n\n        return result;\n    }\n\n    clean(): this {\n        wipe(this._key);\n        return this;\n    }\n\n    private _authenticate(tagOut: Uint8Array, authKey: Uint8Array,\n        ciphertext: Uint8Array, associatedData?: Uint8Array) {\n\n        // Initialize Poly1305 with authKey.\n        const h = new Poly1305(authKey);\n\n        // Authenticate padded associated data.\n        if (associatedData) {\n            h.update(associatedData);\n            if (associatedData.length % 16 > 0) {\n                h.update(ZEROS.subarray(associatedData.length % 16));\n            }\n        }\n\n        // Authenticate padded ciphertext.\n        h.update(ciphertext);\n        if (ciphertext.length % 16 > 0) {\n            h.update(ZEROS.subarray(ciphertext.length % 16));\n        }\n\n        // Authenticate length of associated data.\n        // XXX: can avoid allocation here?\n        const length = new Uint8Array(8);\n        if (associatedData) {\n            writeUint64LE(associatedData.length, length);\n        }\n        h.update(length);\n\n        // Authenticate length of ciphertext.\n        writeUint64LE(ciphertext.length, length);\n        h.update(length);\n\n        // Get tag and copy it into tagOut.\n        const tag = h.digest();\n        for (let i = 0; i < tag.length; i++) {\n            tagOut[i] = tag[i];\n        }\n\n        // Cleanup.\n        h.clean();\n        wipe(tag);\n        wipe(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package constant-time provides functions for performing algorithmically constant-time operations.\n */\n\n/**\n * NOTE! Due to the inability to guarantee real constant time evaluation of\n * anything in JavaScript VM, this is module is the best effort.\n */\n\n/**\n * Returns resultIfOne if subject is 1, or resultIfZero if subject is 0.\n *\n * Supports only 32-bit integers, so resultIfOne or resultIfZero are not\n * integers, they'll be converted to them with bitwise operations.\n */\nexport function select(subject: number, resultIfOne: number, resultIfZero: number): number {\n    return (~(subject - 1) & resultIfOne) | ((subject - 1) & resultIfZero);\n}\n\n/**\n * Returns 1 if a <= b, or 0 if not.\n * Arguments must be positive 32-bit integers less than or equal to 2^31 - 1.\n */\nexport function lessOrEqual(a: number, b: number): number {\n    return (((a | 0) - (b | 0) - 1) >>> 31) & 1;\n}\n\n/**\n * Returns 1 if a and b are of equal length and their contents\n * are equal, or 0 otherwise.\n *\n * Note that unlike in equal(), zero-length inputs are considered\n * the same, so this function will return 1.\n */\nexport function compare(a: Uint8Array, b: Uint8Array): number {\n    if (a.length !== b.length) {\n        return 0;\n    }\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        result |= a[i] ^ b[i];\n    }\n    return (1 & ((result - 1) >>> 8));\n}\n\n/**\n * Returns true if a and b are of equal non-zero length,\n * and their contents are equal, or false otherwise.\n *\n * Note that unlike in compare() zero-length inputs are considered\n * _not_ equal, so this function will return false.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length === 0 || b.length === 0) {\n        return false;\n    }\n    return compare(a, b) !== 0;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hash provides interface for hash functions.\n */\n\n/**\n * Hash interface describes properties of\n * cryptographic hash functions.\n */\nexport interface Hash {\n    readonly digestLength: number;\n    readonly blockSize: number;\n    update(data: Uint8Array): this;\n    reset(): this;\n    finish(out: Uint8Array): this;\n    digest(): Uint8Array;\n    clean(): void;\n}\n\nexport interface SerializableHash extends Hash {\n    saveState(): any;\n    restoreState(savedState: any): this;\n    cleanSavedState(savedState: any): void;\n}\n\nexport function isSerializableHash(h: Hash): h is SerializableHash {\n    return (\n        typeof (h as SerializableHash).saveState !== \"undefined\" &&\n        typeof (h as SerializableHash).restoreState !== \"undefined\" &&\n        typeof (h as SerializableHash).cleanSavedState !== \"undefined\"\n    );\n}\n\n// TODO(dchest): figure out the standardized interface for XOF such as\n// SHAKE and BLAKE2X.\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hkdf implements HKDF key derivation function.\n */\n\nimport { Hash } from \"@stablelib/hash\";\nimport { HMAC, hmac } from \"@stablelib/hmac\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function.\n *\n * Implements HKDF from RFC5869.\n *\n * Expands the given master key with salt and info into\n * a limited stream of key material.\n */\nexport class HKDF {\n    private _hmac: HMAC;\n    private _buffer: Uint8Array;\n    private _bufpos: number;\n    private _counter = new Uint8Array(1); // starts with zero\n    private _hash: new () => Hash;\n    private _info?: Uint8Array;\n\n    /**\n     * Create a new HKDF instance for the given hash function\n     * with the master key, optional salt, and info.\n     *\n     * - Master key is a high-entropy secret key (not a password).\n     * - Salt is a non-secret random value.\n     * - Info is application- and/or context-specific information.\n     */\n    constructor(hash: new () => Hash,\n        key: Uint8Array,\n        salt = new Uint8Array(0),\n        info?: Uint8Array) {\n\n        this._hash = hash;\n        this._info = info;\n\n        // HKDF-Extract uses salt as HMAC key, and key as data.\n        const okm = hmac(this._hash, salt, key);\n\n        // Initialize HMAC for expanding with extracted key.\n        this._hmac = new HMAC(hash, okm);\n\n        // Allocate buffer.\n        this._buffer = new Uint8Array(this._hmac.digestLength);\n        this._bufpos = this._buffer.length;\n    }\n\n    // Fill buffer with new block of HKDF-Extract output.\n    private _fillBuffer(): void {\n        // Increment counter.\n        this._counter[0]++;\n\n        const ctr = this._counter[0];\n\n        // Check if counter overflowed.\n        if (ctr === 0) {\n            throw new Error(\"hkdf: cannot expand more\");\n        }\n\n        // Prepare HMAC instance for new data with old key.\n        this._hmac.reset();\n\n        // Hash in previous output if it was generated\n        // (i.e. counter is greater than 1).\n        if (ctr > 1) {\n            this._hmac.update(this._buffer);\n        }\n\n        // Hash in info if it exists.\n        if (this._info) {\n            this._hmac.update(this._info);\n        }\n\n        // Hash in the counter.\n        this._hmac.update(this._counter);\n\n        // Output result to buffer and clean HMAC instance.\n        this._hmac.finish(this._buffer);\n\n        // Reset buffer position.\n        this._bufpos = 0;\n    }\n\n    /**\n     * Expand returns next key material of the given length.\n     *\n     * It throws if expansion limit is reached (which is\n     * 254 digests of the underlying HMAC function).\n     */\n    expand(length: number): Uint8Array {\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i++) {\n            if (this._bufpos === this._buffer.length) {\n                this._fillBuffer();\n            }\n            out[i] = this._buffer[this._bufpos++];\n        }\n        return out;\n    }\n\n    clean(): void {\n        this._hmac.clean();\n        wipe(this._buffer);\n        wipe(this._counter);\n        this._bufpos = 0;\n    }\n}\n\n// TODO(dchest): maybe implement deriveKey?\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package hmac implements HMAC algorithm.\n */\n\nimport { Hash, SerializableHash, isSerializableHash } from \"@stablelib/hash\";\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\n/**\n *  HMAC implements hash-based message authentication algorithm.\n */\nexport class HMAC implements SerializableHash {\n    readonly blockSize: number;\n    readonly digestLength: number;\n\n    private _inner: Hash; // inner hash\n    private _outer: Hash; // outer hash\n\n    private _finished = false; // true if HMAC was finalized\n\n    // Copies of hash states after keying.\n    // Need for quick reset without hashing the key again.\n    private _innerKeyedState: any | undefined;\n    private _outerKeyedState: any | undefined;\n\n    /**\n     * Constructs a new HMAC with the given Hash and secret key.\n     */\n    constructor(hash: new () => Hash | SerializableHash, key: Uint8Array) {\n        // Initialize inner and outer hashes.\n        this._inner = new hash();\n        this._outer = new hash();\n\n        // Set block and digest sizes for this HMAC\n        // instance to values from the hash.\n        this.blockSize = this._outer.blockSize;\n        this.digestLength = this._outer.digestLength;\n\n        // Pad temporary stores a key (or its hash) padded with zeroes.\n        const pad = new Uint8Array(this.blockSize);\n\n        if (key.length > this.blockSize) {\n            // If key is bigger than hash block size, it must be\n            // hashed and this hash is used as a key instead.\n            this._inner.update(key).finish(pad).clean();\n        } else {\n            // Otherwise, copy the key into pad.\n            pad.set(key);\n        }\n\n        // Now two different keys are derived from padded key\n        // by xoring a different byte value to each.\n\n        // To make inner hash key, xor byte 0x36 into pad.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        // Update inner hash with the result.\n        this._inner.update(pad);\n\n        // To make outer hash key, xor byte 0x5c into pad.\n        // But since we already xored 0x36 there, we must\n        // first undo this by xoring it again.\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        // Update outer hash with the result.\n        this._outer.update(pad);\n\n        // Save states of both hashes, so that we can quickly restore\n        // them later in reset() without the need to remember the actual\n        // key and perform this initialization again.\n        if (isSerializableHash(this._inner) && isSerializableHash(this._outer)) {\n            this._innerKeyedState = this._inner.saveState();\n            this._outerKeyedState = this._outer.saveState();\n        }\n\n        // Clean pad.\n        wipe(pad);\n    }\n\n    /**\n     * Returns HMAC state to the state initialized with key\n     * to make it possible to run HMAC over the other data with the same\n     * key without creating a new instance.\n     */\n    reset(): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");\n        }\n        // Restore keyed states of inner and outer hashes.\n        this._inner.restoreState(this._innerKeyedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans HMAC state.\n     */\n    clean() {\n        if (isSerializableHash(this._inner)) {\n            this._inner.cleanSavedState(this._innerKeyedState);\n        }\n        if (isSerializableHash(this._outer)) {\n            this._outer.cleanSavedState(this._outerKeyedState);\n        }\n        this._inner.clean();\n        this._outer.clean();\n    }\n\n    /**\n     * Updates state with provided data.\n     */\n    update(data: Uint8Array): this {\n        this._inner.update(data);\n        return this;\n    }\n\n    /**\n     * Finalizes HMAC and puts the result in out.\n     */\n    finish(out: Uint8Array): this {\n        if (this._finished) {\n            // If HMAC was finalized, outer hash is also finalized,\n            // so it produces the same digest it produced when it\n            // was finalized.\n            this._outer.finish(out);\n            return this;\n        }\n\n        // Finalize inner hash and store the result temporarily.\n        this._inner.finish(out);\n\n        // Update outer hash with digest of inner hash and and finalize it.\n        this._outer.update(out.subarray(0, this.digestLength)).finish(out);\n        this._finished = true;\n\n        return this;\n    }\n\n    /**\n     * Returns the computed message authentication code.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Saves HMAC state.\n     * This function is needed for PBKDF2 optimization.\n     */\n    saveState(): any {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");\n        }\n        return this._inner.saveState();\n    }\n\n    restoreState(savedState: any): this {\n        if (!isSerializableHash(this._inner) || !isSerializableHash(this._outer)) {\n            throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");\n        }\n        this._inner.restoreState(savedState);\n        this._outer.restoreState(this._outerKeyedState);\n        this._finished = false;\n        return this;\n    }\n\n    cleanSavedState(savedState: any) {\n        if (!isSerializableHash(this._inner)) {\n            throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");\n        }\n        this._inner.cleanSavedState(savedState);\n    }\n}\n\n/**\n * Returns HMAC using the given hash constructor for the key over data.\n */\nexport function hmac(hash: new () => Hash, key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new HMAC(hash, key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two HMAC digests are equal.\n * Uses constant-time comparison to avoid leaking timing information.\n *\n * Example:\n *\n *    const receivedDigest = ...\n *    const realDigest = hmac(SHA256, key, data);\n *    if (!equal(receivedDigest, realDigest)) {\n *        throw new Error(\"Authentication error\");\n *    }\n */\nexport const equal = constantTimeEqual;\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package int provides helper functions for integerss.\n */\n\n// Shim using 16-bit pieces.\nfunction imulShim(a: number, b: number): number {\n    const ah = (a >>> 16) & 0xffff, al = a & 0xffff;\n    const bh = (b >>> 16) & 0xffff, bl = b & 0xffff;\n    return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);\n}\n\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexport const mul = (Math as { imul?(a: number, b: number): number }).imul || imulShim;\n\n/** 32-bit integer addition.  */\nexport function add(a: number, b: number): number {\n    return (a + b) | 0;\n}\n\n/**  32-bit integer subtraction.  */\nexport function sub(a: number, b: number): number {\n    return (a - b) | 0;\n}\n\n/** 32-bit integer left rotation */\nexport function rotl(x: number, n: number): number {\n    return x << n | x >>> (32 - n);\n}\n\n/** 32-bit integer left rotation */\nexport function rotr(x: number, n: number): number {\n    return x << (32 - n) | x >>> n;\n}\n\nfunction isIntegerShim(n: number): boolean {\n    return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexport const isInteger = (Number as { isInteger?(n: number): boolean }).isInteger || isIntegerShim;\n\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexport const MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexport const isSafeInteger = (n: number): boolean =>\n    isInteger(n) && (n >= -MAX_SAFE_INTEGER && n <= MAX_SAFE_INTEGER);\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 16;\n\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    readonly digestLength = DIGEST_LENGTH;\n\n    private _buffer = new Uint8Array(16);\n    private _r = new Uint16Array(10);\n    private _h = new Uint16Array(10);\n    private _pad = new Uint16Array(8);\n    private _leftover = 0;\n    private _fin = 0;\n    private _finished = false;\n\n    constructor(key: Uint8Array) {\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\n        let hibit = this._fin ? 0 : 1 << 11;\n\n        let h0 = this._h[0],\n            h1 = this._h[1],\n            h2 = this._h[2],\n            h3 = this._h[3],\n            h4 = this._h[4],\n            h5 = this._h[5],\n            h6 = this._h[6],\n            h7 = this._h[7],\n            h8 = this._h[8],\n            h9 = this._h[9];\n\n        let r0 = this._r[0],\n            r1 = this._r[1],\n            r2 = this._r[2],\n            r3 = this._r[3],\n            r4 = this._r[4],\n            r5 = this._r[5],\n            r6 = this._r[6],\n            r7 = this._r[7],\n            r8 = this._r[8],\n            r9 = this._r[9];\n\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n\n            let c = 0;\n\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13); d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13); d0 &= 0x1fff;\n\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13); d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13); d1 &= 0x1fff;\n\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13); d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13); d2 &= 0x1fff;\n\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13); d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13); d3 &= 0x1fff;\n\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13); d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13); d4 &= 0x1fff;\n\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13); d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13); d5 &= 0x1fff;\n\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13); d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13); d6 &= 0x1fff;\n\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13); d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13); d7 &= 0x1fff;\n\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13); d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13); d8 &= 0x1fff;\n\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13); d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13); d9 &= 0x1fff;\n\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n\n    finish(mac: Uint8Array, macpos = 0): this {\n        const g = new Uint16Array(10);\n        let c: number;\n        let mask: number;\n        let f: number;\n        let i: number;\n\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n\n        this._finished = true;\n        return this;\n    }\n\n    update(m: Uint8Array): this {\n        let mpos = 0;\n        let bytes = m.length;\n        let want: number;\n\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n\n        return this;\n    }\n\n    digest(): Uint8Array {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n\n    clean(): this {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package random provides functions to access system's\n * cryptographically secure random byte generator.\n */\n\nimport { RandomSource } from \"./source\";\nimport { SystemRandomSource } from \"./source/system\";\nimport { readUint32LE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport { RandomSource } from \"./source\";\n\nexport const defaultRandomSource = new SystemRandomSource();\n\nexport function randomBytes(length: number, prng: RandomSource = defaultRandomSource): Uint8Array {\n    return prng.randomBytes(length);\n}\n\n/**\n * Returns a uniformly random unsigned 32-bit integer.\n */\nexport function randomUint32(prng: RandomSource = defaultRandomSource): number {\n    // Generate 4-byte random buffer.\n    const buf = randomBytes(4, prng);\n\n    // Convert bytes from buffer into a 32-bit integer.\n    // It's not important which byte order to use, since\n    // the result is random.\n    const result = readUint32LE(buf);\n\n    // Clean the buffer.\n    wipe(buf);\n\n    return result;\n}\n\n/** 62 alphanumeric characters for default charset of randomString() */\nconst ALPHANUMERIC = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n/**\n * Returns a uniform random string of the given length\n * with characters from the given charset.\n *\n * Charset must not have more than 256 characters.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomString(\n    length: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    if (charset.length < 2) {\n        throw new Error(\"randomString charset is too short\");\n    }\n    if (charset.length > 256) {\n        throw new Error(\"randomString charset is too long\");\n    }\n    let out = '';\n    const charsLen = charset.length;\n    const maxByte = 256 - (256 % charsLen);\n    while (length > 0) {\n        const buf = randomBytes(Math.ceil(length * 256 / maxByte), prng);\n        for (let i = 0; i < buf.length && length > 0; i++) {\n            const randomByte = buf[i];\n            if (randomByte < maxByte) {\n                out += charset.charAt(randomByte % charsLen);\n                length--;\n            }\n        }\n        wipe(buf);\n    }\n    return out;\n}\n\n/**\n * Returns uniform random string containing at least the given\n * number of bits of entropy.\n *\n * For example, randomStringForEntropy(128) will return a 22-character\n * alphanumeric string, while randomStringForEntropy(128, \"0123456789\")\n * will return a 39-character numeric string, both will contain at\n * least 128 bits of entropy.\n *\n * Default charset generates case-sensitive alphanumeric\n * strings (0-9, A-Z, a-z).\n */\nexport function randomStringForEntropy(\n    bits: number,\n    charset = ALPHANUMERIC,\n    prng: RandomSource = defaultRandomSource\n): string {\n    const length = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));\n    return randomString(length, charset, prng);\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\n\nconst QUOTA = 65536;\n\nexport class BrowserRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto?: { getRandomValues: typeof window.crypto.getRandomValues };\n\n    constructor() {\n        const browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || (self as { msCrypto?: any }).msCrypto) // IE11 has msCrypto\n            : null;\n\n        if (browserCrypto && browserCrypto.getRandomValues !== undefined) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        const out = new Uint8Array(length);\n        for (let i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { wipe } from \"@stablelib/wipe\";\n\ndeclare function require(name: string): any;\n\nexport class NodeRandomSource implements RandomSource {\n    isAvailable = false;\n    isInstantiated = false;\n\n    private _crypto: { randomBytes(n: number): Uint8Array } | undefined;\n\n    constructor() {\n        if (typeof require !== \"undefined\") {\n            const nodeCrypto = require(\"crypto\");\n            if (nodeCrypto && nodeCrypto.randomBytes) {\n                this._crypto = nodeCrypto;\n                this.isAvailable = true;\n                this.isInstantiated = true;\n            }\n        }\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Node.js random byte generator is not available.\");\n        }\n\n        // Get random bytes (result is Buffer).\n        let buffer = this._crypto.randomBytes(length);\n\n        // Make sure we got the length that we requested.\n        if (buffer.length !== length) {\n            throw new Error(\"NodeRandomSource: got fewer bytes than requested\");\n        }\n\n        // Allocate output array.\n        const out = new Uint8Array(length);\n\n        // Copy bytes from buffer to output.\n        for (let i = 0; i < out.length; i++) {\n            out[i] = buffer[i];\n        }\n\n        // Cleanup.\n        wipe(buffer);\n\n        return out;\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package sha256 implements SHA-2-256 cryptographic hash function.\n */\n\nimport { SerializableHash } from \"@stablelib/hash\";\nimport { readUint32BE, writeUint32BE } from \"@stablelib/binary\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 32;\nexport const BLOCK_SIZE = 64;\n\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nexport class SHA256 implements SerializableHash {\n    /** Length of hash output */\n    readonly digestLength: number = DIGEST_LENGTH;\n\n    /** Block size */\n    readonly blockSize: number = BLOCK_SIZE;\n\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    protected _state = new Int32Array(8); // hash state\n    private _temp = new Int32Array(64); // temporary state\n    private _buffer = new Uint8Array(128); // buffer for data to hash\n    private _bufferLength = 0; // number of bytes in buffer\n    private _bytesHashed = 0; // number of total bytes hashed\n    private _finished = false; // indicates whether the hash was finalized\n\n    constructor() {\n        this.reset();\n    }\n\n    protected _initState() {\n        this._state[0] = 0x6a09e667;\n        this._state[1] = 0xbb67ae85;\n        this._state[2] = 0x3c6ef372;\n        this._state[3] = 0xa54ff53a;\n        this._state[4] = 0x510e527f;\n        this._state[5] = 0x9b05688c;\n        this._state[6] = 0x1f83d9ab;\n        this._state[7] = 0x5be0cd19;\n    }\n\n    /**\n     * Resets hash state making it possible\n     * to re-use this instance to hash other data.\n     */\n    reset(): this {\n        this._initState();\n        this._bufferLength = 0;\n        this._bytesHashed = 0;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans internal buffers and resets hash state.\n     */\n    clean() {\n        wipe(this._buffer);\n        wipe(this._temp);\n        this.reset();\n    }\n\n    /**\n     * Updates hash state with the given data.\n     *\n     * Throws error when trying to update already finalized hash:\n     * instance must be reset to update it again.\n     */\n    update(data: Uint8Array, dataLength: number = data.length): this {\n        if (this._finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this._bytesHashed += dataLength;\n        if (this._bufferLength > 0) {\n            while (this._bufferLength < this.blockSize && dataLength > 0) {\n                this._buffer[this._bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this._bufferLength === this.blockSize) {\n                hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n                this._bufferLength = 0;\n            }\n        }\n        if (dataLength >= this.blockSize) {\n            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n            dataLength %= this.blockSize;\n        }\n        while (dataLength > 0) {\n            this._buffer[this._bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n\n    /**\n     * Finalizes hash state and puts hash into out.\n     * If hash was already finalized, puts the same value.\n     */\n    finish(out: Uint8Array): this {\n        if (!this._finished) {\n            const bytesHashed = this._bytesHashed;\n            const left = this._bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = (bytesHashed % 64 < 56) ? 64 : 128;\n\n            this._buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this._buffer[i] = 0;\n            }\n            writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n            writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n\n            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n\n            this._finished = true;\n        }\n\n        for (let i = 0; i < this.digestLength / 4; i++) {\n            writeUint32BE(this._state[i], out, i * 4);\n        }\n\n        return this;\n    }\n\n    /**\n     * Returns the final hash digest.\n     */\n    digest(): Uint8Array {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Returns hash state to be used with restoreState().\n     * Only chain value is saved, not buffers or other\n     * state variables.\n     */\n    saveState(): SavedState {\n        if (this._finished) {\n            throw new Error(\"SHA256: cannot save finished state\");\n        }\n        return {\n            state: new Int32Array(this._state),\n            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n            bufferLength: this._bufferLength,\n            bytesHashed: this._bytesHashed\n        };\n    }\n\n    /**\n     * Function useful for HMAC/PBKDF2 optimization.\n     * Restores state saved by saveState() and sets bytesHashed\n     * to the given value.\n     */\n    restoreState(savedState: SavedState): this {\n        this._state.set(savedState.state);\n        this._bufferLength = savedState.bufferLength;\n        if (savedState.buffer) {\n            this._buffer.set(savedState.buffer);\n        }\n        this._bytesHashed = savedState.bytesHashed;\n        this._finished = false;\n        return this;\n    }\n\n    /**\n     * Cleans state returned by saveState().\n     */\n    cleanSavedState(savedState: SavedState) {\n        wipe(savedState.state);\n        if (savedState.buffer) {\n            wipe(savedState.buffer);\n        }\n        savedState.bufferLength = 0;\n        savedState.bytesHashed = 0;\n    }\n}\n\nexport type SavedState = {\n    state: Int32Array;\n    buffer: Uint8Array | undefined;\n    bufferLength: number;\n    bytesHashed: number;\n};\n\n// Constants\nconst K = new Int32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n    0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n    0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n    0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n    0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n    0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n    0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n    0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n    0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\nfunction hashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number): number {\n    while (len >= 64) {\n        let a = v[0];\n        let b = v[1];\n        let c = v[2];\n        let d = v[3];\n        let e = v[4];\n        let f = v[5];\n        let g = v[6];\n        let h = v[7];\n\n        for (let i = 0; i < 16; i++) {\n            let j = pos + i * 4;\n            w[i] = readUint32BE(p, j);\n        }\n\n        for (let i = 16; i < 64; i++) {\n            let u = w[i - 2];\n            let t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10);\n\n            u = w[i - 15];\n            let t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3);\n\n            w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            let t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n            let t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n\nexport function hash(data: Uint8Array): Uint8Array {\n    const h = new SHA256();\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package wipe implements functions for zeroing arrays.\n */\n\nexport type NumericArray = number[] | Uint8Array | Int8Array | Uint16Array\n    | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array;\n\n/**\n * Sets all values in the given array to zero and returns it.\n *\n * The fact that it sets bytes to zero can be relied on.\n *\n * There is no guarantee that this function makes data disappear from memory,\n * as runtime implementation can, for example, have copying garbage collector\n * that will make copies of sensitive data before we wipe it. Or that an\n * operating system will write our data to swap or sleep image. Another thing\n * is that an optimizing compiler can remove calls to this function or make it\n * no-op. There's nothing we can do with it, so we just do our best and hope\n * that everything will be okay and good will triumph over evil.\n */\nexport function wipe(array: NumericArray): NumericArray {\n    // Right now it's similar to array.fill(0). If it turns\n    // out that runtimes optimize this call away, maybe\n    // we can try something else.\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 0;\n    }\n    return array;\n}\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package x25519 implements X25519 key agreement.\n */\n\nimport { randomBytes, RandomSource } from \"@stablelib/random\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const PUBLIC_KEY_LENGTH = 32;\nexport const SECRET_KEY_LENGTH = 32;\nexport const SHARED_KEY_LENGTH = 32;\n\n// TODO(dchest): some functions are copies of ../sign/ed25519.\n// Find a way to combine them without opening up to public.\n\n// Ported from TweetNaCl.js, which is ported from TweetNaCl\n// by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n// https://tweetnacl.js.org\n\n// TweetNaCl contributors:\n// Daniel J. Bernstein, Bernard van Gastel, Wesley Janssen,\n// Tanja Lange, Peter Schwabe, Sjaak Smetsers.\n// Public domain.\n// https://tweetnacl.cr.yp.to/\n\ntype GF = Float64Array;\n\n// Returns new zero-filled 16-element GF (Float64Array).\n// If passed an array of numbers, prefills the returned\n// array with them.\n//\n// We use Float64Array, because we need 48-bit numbers\n// for this implementation.\nfunction gf(init?: number[]): GF {\n    const r = new Float64Array(16);\n    if (init) {\n        for (let i = 0; i < init.length; i++) {\n            r[i] = init[i];\n        }\n    }\n    return r;\n}\n\n// Base point.\nconst _9 = new Uint8Array(32); _9[0] = 9;\n\nconst _121665 = gf([0xdb41, 1]);\n\nfunction car25519(o: GF) {\n    let c = 1;\n    for (let i = 0; i < 16; i++) {\n        let v = o[i] + c + 65535;\n        c = Math.floor(v / 65536);\n        o[i] = v - c * 65536;\n    }\n    o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p: GF, q: GF, b: number) {\n    const c = ~(b - 1);\n    for (let i = 0; i < 16; i++) {\n        const t = c & (p[i] ^ q[i]);\n        p[i] ^= t;\n        q[i] ^= t;\n    }\n}\n\nfunction pack25519(o: Uint8Array, n: GF) {\n    const m = gf();\n    const t = gf();\n    for (let i = 0; i < 16; i++) {\n        t[i] = n[i];\n    }\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (let j = 0; j < 2; j++) {\n        m[0] = t[0] - 0xffed;\n        for (let i = 1; i < 15; i++) {\n            m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n            m[i - 1] &= 0xffff;\n        }\n        m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n        const b = (m[15] >> 16) & 1;\n        m[14] &= 0xffff;\n        sel25519(t, m, 1 - b);\n    }\n    for (let i = 0; i < 16; i++) {\n        o[2 * i] = t[i] & 0xff;\n        o[2 * i + 1] = t[i] >> 8;\n    }\n}\n\nfunction unpack25519(o: GF, n: Uint8Array) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n    o[15] &= 0x7fff;\n}\n\nfunction add(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] + b[i];\n    }\n}\n\nfunction sub(o: GF, a: GF, b: GF) {\n    for (let i = 0; i < 16; i++) {\n        o[i] = a[i] - b[i];\n    }\n}\n\nfunction mul(o: GF, a: GF, b: GF) {\n    let v: number, c: number,\n        t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n        t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n        t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n        t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30;\n    // t15 left as is\n\n    // first car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    // second car\n    c = 1;\n    v = t0 + c + 65535; c = Math.floor(v / 65536); t0 = v - c * 65536;\n    v = t1 + c + 65535; c = Math.floor(v / 65536); t1 = v - c * 65536;\n    v = t2 + c + 65535; c = Math.floor(v / 65536); t2 = v - c * 65536;\n    v = t3 + c + 65535; c = Math.floor(v / 65536); t3 = v - c * 65536;\n    v = t4 + c + 65535; c = Math.floor(v / 65536); t4 = v - c * 65536;\n    v = t5 + c + 65535; c = Math.floor(v / 65536); t5 = v - c * 65536;\n    v = t6 + c + 65535; c = Math.floor(v / 65536); t6 = v - c * 65536;\n    v = t7 + c + 65535; c = Math.floor(v / 65536); t7 = v - c * 65536;\n    v = t8 + c + 65535; c = Math.floor(v / 65536); t8 = v - c * 65536;\n    v = t9 + c + 65535; c = Math.floor(v / 65536); t9 = v - c * 65536;\n    v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n    v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n    v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n    v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n    v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n    v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n}\n\nfunction square(o: GF, a: GF) {\n    mul(o, a, a);\n}\n\nfunction inv25519(o: GF, inp: GF) {\n    const c = gf();\n    for (let i = 0; i < 16; i++) {\n        c[i] = inp[i];\n    }\n    for (let i = 253; i >= 0; i--) {\n        square(c, c);\n        if (i !== 2 && i !== 4) {\n            mul(c, c, inp);\n        }\n    }\n    for (let i = 0; i < 16; i++) {\n        o[i] = c[i];\n    }\n}\n\nexport function scalarMult(n: Uint8Array, p: Uint8Array): Uint8Array {\n    const z = new Uint8Array(32);\n    const x = new Float64Array(80);\n    const a = gf(), b = gf(), c = gf(),\n        d = gf(), e = gf(), f = gf();\n\n    for (let i = 0; i < 31; i++) {\n        z[i] = n[i];\n    }\n    z[31] = (n[31] & 127) | 64;\n    z[0] &= 248;\n\n    unpack25519(x, p);\n\n    for (let i = 0; i < 16; i++) {\n        b[i] = x[i];\n    }\n\n    a[0] = d[0] = 1;\n\n    for (let i = 254; i >= 0; --i) {\n        const r = (z[i >>> 3] >>> (i & 7)) & 1;\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n        add(e, a, c);\n        sub(a, a, c);\n        add(c, b, d);\n        sub(b, b, d);\n        square(d, e);\n        square(f, a);\n        mul(a, c, a);\n        mul(c, b, e);\n        add(e, a, c);\n        sub(a, a, c);\n        square(b, a);\n        sub(c, d, f);\n        mul(a, c, _121665);\n        add(a, a, d);\n        mul(c, c, a);\n        mul(a, d, f);\n        mul(d, b, x);\n        square(b, e);\n        sel25519(a, b, r);\n        sel25519(c, d, r);\n    }\n    for (let i = 0; i < 16; i++) {\n        x[i + 16] = a[i];\n        x[i + 32] = c[i];\n        x[i + 48] = b[i];\n        x[i + 64] = d[i];\n    }\n    const x32 = x.subarray(32);\n    const x16 = x.subarray(16);\n    inv25519(x32, x32);\n    mul(x16, x16, x32);\n    const q = new Uint8Array(32);\n    pack25519(q, x16);\n    return q;\n}\n\nexport function scalarMultBase(n: Uint8Array): Uint8Array {\n    return scalarMult(n, _9);\n}\n\nexport interface KeyPair {\n    publicKey: Uint8Array;\n    secretKey: Uint8Array;\n}\n\nexport function generateKeyPairFromSeed(seed: Uint8Array): KeyPair {\n    if (seed.length !== SECRET_KEY_LENGTH) {\n        throw new Error(`x25519: seed must be ${SECRET_KEY_LENGTH} bytes`);\n    }\n    const secretKey = new Uint8Array(seed);\n    const publicKey = scalarMultBase(secretKey);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n\nexport function generateKeyPair(prng?: RandomSource): KeyPair {\n    const seed = randomBytes(32, prng);\n    const result = generateKeyPairFromSeed(seed);\n    wipe(seed);\n    return result;\n}\n\n/**\n * Returns a shared key between our secret key and a peer's public key.\n *\n * Throws an error if the given keys are of wrong length.\n *\n * If rejectZero is true throws if the calculated shared key is all-zero.\n * From RFC 7748:\n *\n * > Protocol designers using Diffie-Hellman over the curves defined in\n * > this document must not assume \"contributory behavior\".  Specially,\n * > contributory behavior means that both parties' private keys\n * > contribute to the resulting shared key.  Since curve25519 and\n * > curve448 have cofactors of 8 and 4 (respectively), an input point of\n * > small order will eliminate any contribution from the other party's\n * > private key.  This situation can be detected by checking for the all-\n * > zero output, which implementations MAY do, as specified in Section 6.\n * > However, a large number of existing implementations do not do this.\n *\n * IMPORTANT: the returned key is a raw result of scalar multiplication.\n * To use it as a key material, hash it with a cryptographic hash function.\n */\nexport function sharedKey(mySecretKey: Uint8Array, theirPublicKey: Uint8Array, rejectZero = false): Uint8Array {\n    if (mySecretKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect secret key length\");\n    }\n    if (theirPublicKey.length !== PUBLIC_KEY_LENGTH) {\n        throw new Error(\"X25519: incorrect public key length\");\n    }\n\n    const result = scalarMult(mySecretKey, theirPublicKey);\n\n    if (rejectZero) {\n        let zeros = 0;\n        for (let i = 0; i < result.length; i++) {\n            zeros |= result[i];\n        }\n        if (zeros === 0) {\n            throw new Error(\"X25519: invalid shared key\");\n        }\n    }\n\n    return result;\n}\n",null,null,null,null,null,null,null,null,null,null,"var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n",null,"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { Duplex } from \"readable-stream\";\n\nimport { AsyncJRPCMiddleware, ConsoleLike, IdMap, JRPCMiddleware, JRPCRequest, JRPCResponse, Json, ReturnHandlerCallback } from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: unknown) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error: unknown) {\n      log.error(`OpenLogin - RPC Error thrown: ${(error as Error).message}`, error);\n      res.error = new SerializableError({ code: -32603, message: (error as Error).message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err: Error;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err: unknown) {\n      err = _err as Error;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\nexport type ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = Math.random().toString(36).slice(2);\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (err: unknown) {\n      const error = err as Error;\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { rpcErrors, serializeError } from \"@metamask/rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport {\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCEngineReturnHandler,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  Maybe,\n  RequestArguments,\n  SendCallBack,\n} from \"./interfaces\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[],\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error: unknown) {\n        end(error as Error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(_req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error: unknown) {\n            return handlerCallback(error as Error);\n          }\n          return handlerCallback();\n        });\n      } catch (error: unknown) {\n        return end(error as Error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error: unknown) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error as Error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read(): undefined {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n\nexport interface SafeEventEmitterProvider extends SafeEventEmitter {\n  sendAsync: <T, U>(req: JRPCRequest<T>) => Promise<U>;\n  send: <T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>) => void;\n  request: <T, U>(args: RequestArguments<T>) => Promise<Maybe<U>>;\n}\n\nexport function providerFromEngine(engine: JRPCEngine): SafeEventEmitterProvider {\n  const provider: SafeEventEmitterProvider = new SafeEventEmitter() as SafeEventEmitterProvider;\n  // handle both rpc send methods\n  provider.sendAsync = async <T, U>(req: JRPCRequest<T>) => {\n    const res = await engine.handle(req);\n    if (res.error) {\n      const err = serializeError(res.error, {\n        fallbackError: {\n          message: res.error?.message || res.error.toString(),\n          code: res.error?.code || -32603,\n        },\n      });\n\n      throw rpcErrors.internal(err);\n    }\n    return res.result as U;\n  };\n\n  provider.send = <T, U>(req: JRPCRequest<T>, callback: (error: unknown, providerRes: JRPCResponse<U>) => void) => {\n    if (typeof callback !== \"function\") {\n      throw new Error('Must provide callback to \"send\" method.');\n    }\n    engine.handle(req, callback);\n  };\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message: string) => {\n      provider.emit(\"data\", null, message);\n    });\n  }\n\n  provider.request = async <T, U>(args: RequestArguments<T>) => {\n    const req: JRPCRequest<T> = {\n      ...args,\n      id: Math.random().toString(36).slice(2),\n      jsonrpc: \"2.0\",\n    };\n    const res = await provider.sendAsync(req);\n    return res as U;\n  };\n  return provider;\n}\n\nexport function providerFromMiddleware(middleware: JRPCMiddleware<string[], unknown>): SafeEventEmitterProvider {\n  const engine = new JRPCEngine();\n  engine.push(middleware);\n  const provider: SafeEventEmitterProvider = providerFromEngine(engine);\n  return provider;\n}\n\nexport function providerAsMiddleware(provider: SafeEventEmitterProvider): JRPCMiddleware<unknown, unknown> {\n  return async (req, res, _next, end) => {\n    // send request to provider\n    try {\n      const providerRes: unknown = await provider.sendAsync<unknown, unknown>(req);\n      res.result = providerRes;\n      return end();\n    } catch (error: unknown) {\n      return end(error as Error);\n    }\n  };\n}\n","import eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport { BufferEncoding } from \"./interfaces\";\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\nimport { bytesToUnprefixedHex, utf8ToBytes } from './bytes.js'\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return utf8ToBytes(str).byteLength\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string.\n * Strips leading and trailing 0's.\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = utf8ToBytes(stringValue)\n\n  return `0x${padToEven(bytesToUnprefixedHex(str)).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import { isHexString } from './internal.js'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBytes = function (input: Uint8Array): void {\n  if (!(input instanceof Uint8Array)) {\n    const msg = `This method only supports Uint8Array but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","import { getRandomBytesSync } from 'ethereum-cryptography/random.js'\n// eslint-disable-next-line no-restricted-imports\nimport {\n  bytesToHex as _bytesToUnprefixedHex,\n  hexToBytes as _unprefixedHexToBytes,\n} from 'ethereum-cryptography/utils.js'\n\nimport { assertIsArray, assertIsBytes, assertIsHexString } from './helpers.js'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal.js'\n\nimport type { PrefixedHexString, TransformabletoBytes } from './types.js'\n\nconst BIGINT_0 = BigInt(0)\n\n/**\n * @deprecated\n */\nexport const bytesToUnprefixedHex = _bytesToUnprefixedHex\n\n/**\n * @deprecated\n */\nexport const unprefixedHexToBytes = (inp: string) => {\n  if (inp.slice(0, 2) === '0x') {\n    throw new Error('hex string is prefixed with 0x, should be unprefixed')\n  } else {\n    return _unprefixedHexToBytes(padToEven(inp))\n  }\n}\n\n/****************  Borrowed from @chainsafe/ssz */\n// Caching this info costs about ~1000 bytes and speeds up toHexString() by x6\nconst hexByByte = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'))\n\nexport const bytesToHex = (bytes: Uint8Array): string => {\n  let hex = '0x'\n  if (bytes === undefined || bytes.length === 0) return hex\n  for (const byte of bytes) {\n    hex += hexByByte[byte]\n  }\n  return hex\n}\n\n// BigInt cache for the numbers 0 - 256*256-1 (two-byte bytes)\nconst BIGINT_CACHE: bigint[] = []\nfor (let i = 0; i <= 256 * 256 - 1; i++) {\n  BIGINT_CACHE[i] = BigInt(i)\n}\n\n/**\n * Converts a {@link Uint8Array} to a {@link bigint}\n * @param {Uint8Array} bytes the bytes to convert\n * @returns {bigint}\n */\nexport const bytesToBigInt = (bytes: Uint8Array): bigint => {\n  const hex = bytesToHex(bytes)\n  if (hex === '0x') {\n    return BIGINT_0\n  }\n  if (hex.length === 4) {\n    // If the byte length is 1 (this is faster than checking `bytes.length === 1`)\n    return BIGINT_CACHE[bytes[0]]\n  }\n  if (hex.length === 6) {\n    return BIGINT_CACHE[bytes[0] * 256 + bytes[1]]\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link Uint8Array} to a {@link number}.\n * @param {Uint8Array} bytes the bytes to convert\n * @return  {number}\n * @throws If the input number exceeds 53 bits.\n */\nexport const bytesToInt = (bytes: Uint8Array): number => {\n  const res = Number(bytesToBigInt(bytes))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\nexport const hexToBytes = (hex: string): Uint8Array => {\n  if (typeof hex !== 'string') {\n    throw new Error(`hex argument type ${typeof hex} must be of type string`)\n  }\n\n  if (!hex.startsWith('0x')) {\n    throw new Error(`prefixed hex input should start with 0x, got ${hex.substring(0, 2)}`)\n  }\n\n  hex = hex.slice(2)\n\n  if (hex.length % 2 !== 0) {\n    hex = padToEven(hex)\n  }\n\n  const byteLen = hex.length / 2\n  const bytes = new Uint8Array(byteLen)\n  for (let i = 0; i < byteLen; i++) {\n    const byte = parseInt(hex.slice(i * 2, (i + 1) * 2), 16)\n    bytes[i] = byte\n  }\n  return bytes\n}\n\n/******************************************/\n\n/**\n * Converts a {@link number} into a {@link PrefixedHexString}\n * @param {number} i\n * @return {PrefixedHexString}\n */\nexport const intToHex = (i: number): PrefixedHexString => {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an {@link number} to a {@link Uint8Array}\n * @param {Number} i\n * @return {Uint8Array}\n */\nexport const intToBytes = (i: number): Uint8Array => {\n  const hex = intToHex(i)\n  return hexToBytes(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Uint8Array}\n *  * @param {bigint} num the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToBytes = (num: bigint): Uint8Array => {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return toBytes('0x' + padToEven(num.toString(16)))\n}\n\n/**\n * Returns a Uint8Array filled with 0s.\n * @param {number} bytes the number of bytes of the Uint8Array\n * @return {Uint8Array}\n */\nexport const zeros = (bytes: number): Uint8Array => {\n  return new Uint8Array(bytes)\n}\n\n/**\n * Pads a `Uint8Array` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @param {boolean} right whether to start padding form the left or right\n * @return {Uint8Array}\n */\nconst setLength = (msg: Uint8Array, length: number, right: boolean): Uint8Array => {\n  if (right) {\n    if (msg.length < length) {\n      return new Uint8Array([...msg, ...zeros(length - msg.length)])\n    }\n    return msg.subarray(0, length)\n  } else {\n    if (msg.length < length) {\n      return new Uint8Array([...zeros(length - msg.length), ...msg])\n    }\n    return msg.subarray(-length)\n  }\n}\n\n/**\n * Left Pads a `Uint8Array` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthLeft = (msg: Uint8Array, length: number): Uint8Array => {\n  assertIsBytes(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Uint8Array` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param {Uint8Array} msg the value to pad\n * @param {number} length the number of bytes the output should be\n * @return {Uint8Array}\n */\nexport const setLengthRight = (msg: Uint8Array, length: number): Uint8Array => {\n  assertIsBytes(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`, `number[]` or PrefixedHexString`.\n * @param {Uint8Array|number[]|PrefixedHexString} a\n * @return {Uint8Array|number[]|PrefixedHexString}\n */\nconst stripZeros = <\n  T extends Uint8Array | number[] | PrefixedHexString = Uint8Array | number[] | PrefixedHexString\n>(\n  a: T\n): T => {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1) as T\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Uint8Array`.\n * @param {Uint8Array} a\n * @return {Uint8Array}\n */\nexport const unpadBytes = (a: Uint8Array): Uint8Array => {\n  assertIsBytes(a)\n  return stripZeros(a)\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param  {number[]} a\n * @return {number[]}\n */\nexport const unpadArray = (a: number[]): number[] => {\n  assertIsArray(a)\n  return stripZeros(a)\n}\n\n/**\n * Trims leading zeros from a `PrefixedHexString`.\n * @param {PrefixedHexString} a\n * @return {PrefixedHexString}\n */\nexport const unpadHex = (a: string): PrefixedHexString => {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return '0x' + stripZeros(a)\n}\n\nexport type ToBytesInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Uint8Array\n  | number[]\n  | TransformabletoBytes\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Uint8Array`.\n * Inputs supported: `Buffer`, `Uint8Array`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBytes()` method.\n * @param {ToBytesInputTypes} v the value\n * @return {Uint8Array}\n */\n\nexport const toBytes = (v: ToBytesInputTypes): Uint8Array => {\n  if (v === null || v === undefined) {\n    return new Uint8Array()\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Uint8Array.from(v)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to Uint8Array. toBytes only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return hexToBytes(v)\n  }\n\n  if (typeof v === 'number') {\n    return intToBytes(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BIGINT_0) {\n      throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return unprefixedHexToBytes(n)\n  }\n\n  if (v.toBytes !== undefined) {\n    // converts a `TransformableToBytes` object to a Uint8Array\n    return v.toBytes()\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Interprets a `Uint8Array` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param {Uint8Array} num Signed integer value\n * @returns {bigint}\n */\nexport const fromSigned = (num: Uint8Array): bigint => {\n  return BigInt.asIntN(256, bytesToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Uint8Array`. Assumes 256-bit numbers.\n * @param {bigint} num\n * @returns {Uint8Array}\n */\nexport const toUnsigned = (num: bigint): Uint8Array => {\n  return bigIntToBytes(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `string` if it does not already start with \"0x\".\n * @param {string} str\n * @return {PrefixedHexString}\n */\nexport const addHexPrefix = (str: string): PrefixedHexString => {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or Uint8Array's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n * @param {Uint8Array | string} bytes\n * @param {number} maxLength\n * @return {string}\n */\nexport const short = (bytes: Uint8Array | string, maxLength: number = 50): string => {\n  const byteStr = bytes instanceof Uint8Array ? bytesToHex(bytes) : bytes\n  const len = byteStr.slice(0, 2) === '0x' ? maxLength + 2 : maxLength\n  if (byteStr.length <= len) {\n    return byteStr\n  }\n  return byteStr.slice(0, len) + '…'\n}\n\n/**\n * Checks provided Uint8Array for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Uint8Array values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = (values: { [key: string]: Uint8Array | undefined }) => {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${bytesToHex(v)}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n * @param {bigint} num the bigint to convert\n * @returns {PrefixedHexString}\n */\nexport const bigIntToHex = (num: bigint): PrefixedHexString => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {bigint} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const bigIntToUnpaddedBytes = (value: bigint): Uint8Array => {\n  return unpadBytes(bigIntToBytes(value))\n}\n\n/**\n * Convert value from number to an unpadded Uint8Array\n * (useful for RLP transport)\n * @param {number} value the bigint to convert\n * @returns {Uint8Array}\n */\nexport const intToUnpaddedBytes = (value: number): Uint8Array => {\n  return unpadBytes(intToBytes(value))\n}\n\n/**\n * Compares two Uint8Arrays and returns a number indicating their order in a sorted array.\n *\n * @param {Uint8Array} value1 - The first Uint8Array to compare.\n * @param {Uint8Array} value2 - The second Uint8Array to compare.\n * @returns {number} A positive number if value1 is larger than value2,\n *                   A negative number if value1 is smaller than value2,\n *                   or 0 if value1 and value2 are equal.\n */\nexport const compareBytes = (value1: Uint8Array, value2: Uint8Array): number => {\n  const bigIntValue1 = bytesToBigInt(value1)\n  const bigIntValue2 = bytesToBigInt(value2)\n  return bigIntValue1 > bigIntValue2 ? 1 : bigIntValue1 < bigIntValue2 ? -1 : 0\n}\n\n/**\n * Generates a Uint8Array of random bytes of specified length.\n *\n * @param {number} length - The length of the Uint8Array.\n * @returns {Uint8Array} A Uint8Array of random bytes of specified length.\n */\nexport const randomBytes = (length: number): Uint8Array => {\n  return getRandomBytesSync(length)\n}\n\n/**\n * This mirrors the functionality of the `ethereum-cryptography` export except\n * it skips the check to validate that every element of `arrays` is indead a `uint8Array`\n * Can give small performance gains on large arrays\n * @param {Uint8Array[]} arrays an array of Uint8Arrays\n * @returns {Uint8Array} one Uint8Array with all the elements of the original set\n * works like `Buffer.concat`\n */\nexport const concatBytes = (...arrays: Uint8Array[]): Uint8Array => {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n/**\n * @notice Convert a Uint8Array to a 32-bit integer\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 32-bit integer.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @throws {Error} If the input Uint8Array has a length less than 4.\n * @return {number} The 32-bit integer read from the input Uint8Array.\n */\nexport function bytesToInt32(bytes: Uint8Array, littleEndian: boolean = false): number {\n  if (bytes.length < 4) {\n    throw new Error('The input Uint8Array must have at least 4 bytes.')\n  }\n  const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  return dataView.getInt32(0, littleEndian)\n}\n\n/**\n * @notice Convert a Uint8Array to a 64-bit bigint\n * @param {Uint8Array} bytes The input Uint8Array from which to read the 64-bit bigint.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @throws {Error} If the input Uint8Array has a length less than 8.\n * @return {bigint} The 64-bit bigint read from the input Uint8Array.\n */\nexport function bytesToBigInt64(bytes: Uint8Array, littleEndian: boolean = false): bigint {\n  if (bytes.length < 8) {\n    throw new Error('The input Uint8Array must have at least 8 bytes.')\n  }\n  const dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  return dataView.getBigInt64(0, littleEndian)\n}\n\n/**\n * @notice Convert a 32-bit integer to a Uint8Array.\n * @param {number} value The 32-bit integer to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 4 containing the integer.\n */\nexport function int32ToBytes(value: number, littleEndian: boolean = false): Uint8Array {\n  const buffer = new ArrayBuffer(4)\n  const dataView = new DataView(buffer)\n  dataView.setInt32(0, value, littleEndian)\n  return new Uint8Array(buffer)\n}\n\n/**\n * @notice Convert a 64-bit bigint to a Uint8Array.\n * @param {bigint} value The 64-bit bigint to convert.\n * @param {boolean} littleEndian True for little-endian, undefined or false for big-endian.\n * @return {Uint8Array} A Uint8Array of length 8 containing the bigint.\n */\nexport function bigInt64ToBytes(value: bigint, littleEndian: boolean = false): Uint8Array {\n  const buffer = new ArrayBuffer(8)\n  const dataView = new DataView(buffer)\n  dataView.setBigInt64(0, value, littleEndian)\n  return new Uint8Array(buffer)\n}\n\n// eslint-disable-next-line no-restricted-imports\nexport { bytesToUtf8, equalsBytes, utf8ToBytes } from 'ethereum-cryptography/utils.js'\n","import { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport { hexToBytes } from './bytes.js'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = hexToBytes(KECCAK256_NULL_S)\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = hexToBytes(KECCAK256_RLP_ARRAY_S)\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = hexToBytes(KECCAK256_RLP_S)\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Uint8Array.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n\nexport const RIPEMD160_ADDRESS_STRING = '0000000000000000000000000000000000000003'\n\n/**\n * BigInt constants\n */\n\nexport const BIGINT_NEG1 = BigInt(-1)\n\nexport const BIGINT_0 = BigInt(0)\nexport const BIGINT_1 = BigInt(1)\nexport const BIGINT_2 = BigInt(2)\nexport const BIGINT_3 = BigInt(3)\nexport const BIGINT_7 = BigInt(7)\nexport const BIGINT_8 = BigInt(8)\n\nexport const BIGINT_27 = BigInt(27)\nexport const BIGINT_28 = BigInt(28)\nexport const BIGINT_31 = BigInt(31)\nexport const BIGINT_32 = BigInt(32)\nexport const BIGINT_64 = BigInt(64)\n\nexport const BIGINT_128 = BigInt(128)\nexport const BIGINT_255 = BigInt(255)\nexport const BIGINT_256 = BigInt(256)\n\nexport const BIGINT_96 = BigInt(96)\nexport const BIGINT_100 = BigInt(100)\nexport const BIGINT_160 = BigInt(160)\nexport const BIGINT_224 = BigInt(224)\nexport const BIGINT_2EXP96 = BigInt(79228162514264337593543950336)\nexport const BIGINT_2EXP160 = BigInt(1461501637330902918203684832716283019655932542976)\nexport const BIGINT_2EXP224 =\n  BigInt(26959946667150639794667015087019630673637144422540572481103610249216)\nexport const BIGINT_2EXP256 = BIGINT_2 ** BIGINT_256\n","import { BIGINT_0, BIGINT_1 } from './constants.js'\n/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n\nexport function formatBigDecimal(\n  numerator: bigint,\n  denominator: bigint,\n  maxDecimalFactor: bigint\n): string {\n  if (denominator === BIGINT_0) {\n    denominator = BIGINT_1\n  }\n\n  const full = numerator / denominator\n  const fraction = ((numerator - full * denominator) * maxDecimalFactor) / denominator\n\n  // zeros to be added post decimal are number of zeros in maxDecimalFactor - number of digits in fraction\n  const zerosPostDecimal = String(maxDecimalFactor).length - 1 - String(fraction).length\n  return `${full}.${'0'.repeat(zerosPostDecimal)}${fraction}`\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport {\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  concatBytes,\n  equalsBytes,\n  hexToBytes,\n  toBytes,\n  utf8ToBytes,\n  zeros,\n} from './bytes.js'\nimport { BIGINT_0, KECCAK256_NULL, KECCAK256_RLP } from './constants.js'\nimport { assertIsBytes, assertIsHexString, assertIsString } from './helpers.js'\nimport { stripHexPrefix } from './internal.js'\n\nimport type { BigIntLike, BytesLike } from './types.js'\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BytesLike\n  codeHash?: BytesLike\n}\n\nexport type AccountBodyBytes = [Uint8Array, Uint8Array, Uint8Array, Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Uint8Array\n  codeHash: Uint8Array\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bytesToBigInt(toBytes(nonce)) : undefined,\n      balance !== undefined ? bytesToBigInt(toBytes(balance)) : undefined,\n      storageRoot !== undefined ? toBytes(storageRoot) : undefined,\n      codeHash !== undefined ? toBytes(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Uint8Array) {\n    const values = RLP.decode(serialized) as Uint8Array[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Uint8Array[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bytesToBigInt(nonce), bytesToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = BIGINT_0,\n    balance = BIGINT_0,\n    storageRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < BIGINT_0) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < BIGINT_0) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns an array of Uint8Arrays of the raw bytes for the account, in order.\n   */\n  raw(): Uint8Array[] {\n    return [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Uint8Array`.\n   */\n  serialize(): Uint8Array {\n    return RLP.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !equalsBytes(this.codeHash, KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return (\n      this.balance === BIGINT_0 &&\n      this.nonce === BIGINT_0 &&\n      equalsBytes(this.codeHash, KECCAK256_NULL)\n    )\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bytesToBigInt(toBytes(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const bytes = utf8ToBytes(prefix + address)\n  const hash = bytesToHex(keccak256(bytes)).slice(2)\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Uint8Array, nonce: Uint8Array): Uint8Array {\n  assertIsBytes(from)\n  assertIsBytes(nonce)\n\n  if (bytesToBigInt(nonce) === BIGINT_0) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return keccak256(RLP.encode([from, Uint8Array.from([])])).subarray(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return keccak256(RLP.encode([from, nonce])).subarray(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (\n  from: Uint8Array,\n  salt: Uint8Array,\n  initCode: Uint8Array\n): Uint8Array {\n  assertIsBytes(from)\n  assertIsBytes(salt)\n  assertIsBytes(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(concatBytes(hexToBytes('0xff'), from, salt, keccak256(initCode)))\n\n  return address.subarray(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Uint8Array): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Uint8Array, sanitize: boolean = false): boolean {\n  assertIsBytes(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(concatBytes(Uint8Array.from([4]), publicKey))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Uint8Array, sanitize: boolean = false): Uint8Array {\n  assertIsBytes(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1)\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return keccak256(pubKey).subarray(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Uint8Array): Uint8Array {\n  assertIsBytes(privateKey)\n  // skip the type flag and use the X, Y points\n  return secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Uint8Array): Uint8Array {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Uint8Array): Uint8Array {\n  assertIsBytes(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1)\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bytesToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBytes) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    storageRoot.length === 0 ? KECCAK256_RLP : storageRoot,\n    codeHash.length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBytes) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    equalsBytes(storageRoot, KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    equalsBytes(codeHash, KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Uint8Array-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBytes, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return RLP.encode(accountBody)\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account.js'\nimport { bigIntToBytes, bytesToBigInt, bytesToHex, equalsBytes, toBytes, zeros } from './bytes.js'\nimport { BIGINT_0 } from './constants.js'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly bytes: Uint8Array\n\n  constructor(bytes: Uint8Array) {\n    if (bytes.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.bytes = bytes\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBytes(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Uint8Array): Address {\n    if (!(pubKey instanceof Uint8Array)) {\n      throw new Error('Public key should be Uint8Array')\n    }\n    const bytes = pubToAddress(pubKey)\n    return new Address(bytes)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Uint8Array): Address {\n    if (!(privateKey instanceof Uint8Array)) {\n      throw new Error('Private key should be Uint8Array')\n    }\n    const bytes = privateToAddress(privateKey)\n    return new Address(bytes)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.bytes, bigIntToBytes(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Uint8Array, initCode: Uint8Array): Address {\n    if (!(salt instanceof Uint8Array)) {\n      throw new Error('Expected salt to be a Uint8Array')\n    }\n    if (!(initCode instanceof Uint8Array)) {\n      throw new Error('Expected initCode to be a Uint8Array')\n    }\n    return new Address(generateAddress2(from.bytes, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return equalsBytes(this.bytes, address.bytes)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bytesToBigInt(this.bytes)\n    const rangeMin = BIGINT_0\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return bytesToHex(this.bytes)\n  }\n\n  /**\n   * Returns a new Uint8Array representation of address.\n   */\n  toBytes(): Uint8Array {\n    return new Uint8Array(this.bytes)\n  }\n}\n","export type DBObject = {\n  [key: string]: string | string[] | number\n}\nexport type BatchDBOp<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> = PutBatch<TKey, TValue> | DelBatch<TKey>\n\nexport enum KeyEncoding {\n  String = 'string',\n  Bytes = 'view',\n  Number = 'number',\n}\n\nexport enum ValueEncoding {\n  String = 'string',\n  Bytes = 'view',\n  JSON = 'json',\n}\n\nexport type EncodingOpts = {\n  keyEncoding?: KeyEncoding\n  valueEncoding?: ValueEncoding\n}\nexport interface PutBatch<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> {\n  type: 'put'\n  key: TKey\n  value: TValue\n  opts?: EncodingOpts\n}\n\nexport interface DelBatch<TKey extends Uint8Array | string | number = Uint8Array> {\n  type: 'del'\n  key: TKey\n  opts?: EncodingOpts\n}\n\nexport interface DB<\n  TKey extends Uint8Array | string | number = Uint8Array,\n  TValue extends Uint8Array | string | DBObject = Uint8Array\n> {\n  /**\n   * Retrieves a raw value from db.\n   * @param key\n   * @returns A Promise that resolves to `Uint8Array` if a value is found or `undefined` if no value is found.\n   */\n  get(key: TKey, opts?: EncodingOpts): Promise<TValue | undefined>\n\n  /**\n   * Writes a value directly to db.\n   * @param key The key as a `TValue`\n   * @param value The value to be stored\n   */\n  put(key: TKey, val: TValue, opts?: EncodingOpts): Promise<void>\n\n  /**\n   * Removes a raw value in the underlying db.\n   * @param keys\n   */\n  del(key: TKey, opts?: EncodingOpts): Promise<void>\n\n  /**\n   * Performs a batch operation on db.\n   * @param opStack A stack of levelup operations\n   */\n  batch(opStack: BatchDBOp<TKey, TValue>[]): Promise<void>\n\n  /**\n   * Returns a copy of the DB instance, with a reference\n   * to the **same** underlying db instance.\n   */\n  shallowCopy(): DB<TKey, TValue>\n\n  /**\n   * Opens the database -- if applicable\n   */\n  open(): Promise<void>\n  // TODO - decide if we actually need open/close - it's not required for maps and Level automatically opens the DB when you instantiate it\n}\n","import { bytesToBigInt, bytesToHex, toBytes } from './bytes.js'\nimport { isHexString } from './internal.js'\n\nimport type { Address } from './address.js'\nimport type { ToBytesInputTypes } from './bytes.js'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Uint8Array\n\n/*\n * A type that represents an input that can be converted to a Uint8Array.\n */\nexport type BytesLike =\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformabletoBytes\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Uint8Array | PrefixedHexString\n\nexport interface TransformabletoBytes {\n  toBytes?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Uint8Array,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Uint8Array]: Uint8Array\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBytesInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBytesInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBytes(input)\n\n  switch (outputType) {\n    case TypeOutput.Uint8Array:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bytesToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bytesToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bytesToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak.js'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1.js'\n\nimport {\n  bytesToBigInt,\n  bytesToHex,\n  bytesToInt,\n  concatBytes,\n  setLengthLeft,\n  toBytes,\n  utf8ToBytes,\n} from './bytes.js'\nimport {\n  BIGINT_0,\n  BIGINT_1,\n  BIGINT_2,\n  BIGINT_27,\n  SECP256K1_ORDER,\n  SECP256K1_ORDER_DIV_2,\n} from './constants.js'\nimport { assertIsBytes } from './helpers.js'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Uint8Array\n  s: Uint8Array\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(\n  msgHash: Uint8Array,\n  privateKey: Uint8Array,\n  chainId?: bigint\n): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = buf.slice(0, 32)\n  const s = buf.slice(32, 64)\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BIGINT_2\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BIGINT_0 || v === BIGINT_1) return v\n\n  if (chainId === undefined) {\n    return v - BIGINT_27\n  }\n  return v - (chainId * BIGINT_2 + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BIGINT_0 || recovery === BIGINT_1\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Uint8Array,\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): Uint8Array {\n  const signature = concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32))\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return senderPubKey.toRawBytes(false).slice(1)\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n  return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(s, 32), toBytes(v)))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  chainId?: bigint\n): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const ss = Uint8Array.from([...s])\n  if ((v > BigInt(28) && v % BIGINT_2 === BIGINT_1) || v === BIGINT_1 || v === BigInt(28)) {\n    ss[0] |= 0x80\n  }\n\n  return bytesToHex(concatBytes(setLengthLeft(r, 32), setLengthLeft(ss, 32)))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const bytes: Uint8Array = toBytes(sig)\n\n  let r: Uint8Array\n  let s: Uint8Array\n  let v: bigint\n  if (bytes.length >= 65) {\n    r = bytes.subarray(0, 32)\n    s = bytes.subarray(32, 64)\n    v = bytesToBigInt(bytes.subarray(64))\n  } else if (bytes.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = bytes.subarray(0, 32)\n    s = bytes.subarray(32, 64)\n    v = BigInt(bytesToInt(bytes.subarray(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BIGINT_27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Uint8Array,\n  s: Uint8Array,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bytesToBigInt(r)\n  const sBigInt = bytesToBigInt(s)\n\n  if (\n    rBigInt === BIGINT_0 ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BIGINT_0 ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Uint8Array): Uint8Array {\n  assertIsBytes(message)\n  const prefix = utf8ToBytes(`\\u0019Ethereum Signed Message:\\n${message.length}`)\n  return keccak256(concatBytes(prefix, message))\n}\n","/**\n * Interface for an externally provided kzg library used when creating blob transactions\n */\nexport interface Kzg {\n  loadTrustedSetup(filePath: string): void\n  blobToKzgCommitment(blob: Uint8Array): Uint8Array\n  computeBlobKzgProof(blob: Uint8Array, commitment: Uint8Array): Uint8Array\n  verifyKzgProof(\n    polynomialKzg: Uint8Array,\n    z: Uint8Array,\n    y: Uint8Array,\n    kzgProof: Uint8Array\n  ): boolean\n  verifyBlobKzgProofBatch(\n    blobs: Uint8Array[],\n    expectedKzgCommitments: Uint8Array[],\n    kzgProofs: Uint8Array[]\n  ): boolean\n}\n\nfunction kzgNotLoaded(): never {\n  throw Error('kzg library not loaded')\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let kzg: Kzg = {\n  loadTrustedSetup: kzgNotLoaded,\n  blobToKzgCommitment: kzgNotLoaded,\n  computeBlobKzgProof: kzgNotLoaded,\n  verifyKzgProof: kzgNotLoaded,\n  verifyBlobKzgProofBatch: kzgNotLoaded,\n}\n\n/**\n * @param kzgLib a KZG implementation (defaults to c-kzg)\n * @param trustedSetupPath the full path (e.g. \"/home/linux/devnet4.txt\") to a kzg trusted setup text file\n */\nexport function initKZG(kzgLib: Kzg, trustedSetupPath: string) {\n  kzg = kzgLib\n  kzg.loadTrustedSetup(trustedSetupPath)\n}\n","import { sha256 } from 'ethereum-cryptography/sha256.js'\n\nimport { utf8ToBytes } from './bytes.js'\nimport { kzg } from './kzg.js'\n\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32\nconst FIELD_ELEMENTS_PER_BLOB = 4096\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB\nconst MAX_BLOBS_PER_TX = 2\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB\n\nfunction get_padded(data: Uint8Array, blobs_len: number): Uint8Array {\n  const pdata = new Uint8Array(blobs_len * USEFUL_BYTES_PER_BLOB).fill(0)\n  pdata.set(data)\n  pdata[data.byteLength] = 0x80\n  return pdata\n}\n\nfunction get_blob(data: Uint8Array): Uint8Array {\n  const blob = new Uint8Array(BLOB_SIZE)\n  for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n    const chunk = new Uint8Array(32)\n    chunk.set(data.subarray(i * 31, (i + 1) * 31), 0)\n    blob.set(chunk, i * 32)\n  }\n\n  return blob\n}\n\nexport const getBlobs = (input: string) => {\n  const data = utf8ToBytes(input)\n  const len = data.byteLength\n  if (len === 0) {\n    throw Error('invalid blob data')\n  }\n  if (len > MAX_USEFUL_BYTES_PER_TX) {\n    throw Error('blob data is too large')\n  }\n\n  const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB)\n\n  const pdata = get_padded(data, blobs_len)\n\n  const blobs: Uint8Array[] = []\n  for (let i = 0; i < blobs_len; i++) {\n    const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB)\n    const blob = get_blob(chunk)\n    blobs.push(blob)\n  }\n\n  return blobs\n}\n\nexport const blobsToCommitments = (blobs: Uint8Array[]) => {\n  const commitments: Uint8Array[] = []\n  for (const blob of blobs) {\n    commitments.push(kzg.blobToKzgCommitment(blob))\n  }\n  return commitments\n}\n\nexport const blobsToProofs = (blobs: Uint8Array[], commitments: Uint8Array[]) => {\n  const proofs = blobs.map((blob, ctx) => kzg.computeBlobKzgProof(blob, commitments[ctx]))\n\n  return proofs\n}\n\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment: Uint8Array, blobCommitmentVersion: number) => {\n  const computedVersionedHash = new Uint8Array(32)\n  computedVersionedHash.set([blobCommitmentVersion], 0)\n  computedVersionedHash.set(sha256(commitment).subarray(1), 1)\n  return computedVersionedHash\n}\n\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments: Uint8Array[]) => {\n  const hashes: Uint8Array[] = []\n  for (const commitment of commitments) {\n    hashes.push(computeVersionedHash(commitment, 0x01))\n  }\n  return hashes\n}\n","type rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\n\n/**\n * Makes a simple RPC call to a remote Ethereum JSON-RPC provider and passes through the response.\n * No parameter or response validation is done.\n *\n * @param url the URL for the JSON RPC provider\n * @param params the parameters for the JSON-RPC method - refer to\n * https://ethereum.org/en/developers/docs/apis/json-rpc/ for details on RPC methods\n * @returns the `result` field from the JSON-RPC response\n */\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const data = JSON.stringify({\n    method: params.method,\n    params: params.params,\n    jsonrpc: '2.0',\n    id: 1,\n  })\n\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    method: 'POST',\n    body: data,\n  })\n  const json = await res.json()\n  return json.result\n}\n\n/**\n *\n * @param provider a URL string or {@link EthersProvider}\n * @returns the extracted URL string for the JSON-RPC Provider\n */\nexport const getProvider = (provider: string | EthersProvider) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (typeof provider === 'object' && provider._getConnection !== undefined) {\n    return provider._getConnection().url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n\n/**\n * A partial interface for an `ethers` `JsonRpcProvider`\n * We only use the url string since we do raw `fetch` calls to\n * retrieve the necessary data\n */\nexport interface EthersProvider {\n  _getConnection: () => {\n    url: string\n  }\n}\n","const crc1 = (current, previous = 0) => {\n    let crc = ~~previous;\n    let accum = 0;\n    for (let index = 0; index < current.length; index++) {\n        accum += current[index];\n    }\n    crc += accum % 256;\n    return crc % 256;\n};\nexport default crc1;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-prototype-builtins */\nimport { Buffer } from 'buffer';\nconst createBuffer = (value, encoding) => Buffer.from(value, encoding);\nexport default createBuffer;\n","import createBuffer from './create_buffer.js';\nexport default function defineCrc(model, calculator) {\n    const result = (value, previous) => calculator(createBuffer(value), previous) >>> 0;\n    result.signed = (value, previous) => calculator(createBuffer(value), previous);\n    result.unsigned = result;\n    result.model = model;\n    return result;\n}\n","import crc1 from './calculators/crc1.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc1', crc1);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\nlet TABLE = [\n    0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,\n    0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,\n    0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,\n    0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,\n    0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,\n    0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,\n    0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,\n    0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,\n    0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,\n    0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,\n    0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,\n    0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,\n    0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,\n    0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,\n    0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,\n    0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8;\n","import crc8 from './calculators/crc8.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8', crc8);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nlet TABLE = [\n    0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,\n    0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,\n    0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,\n    0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,\n    0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,\n    0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,\n    0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,\n    0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,\n    0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,\n    0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,\n    0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,\n    0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,\n    0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,\n    0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,\n    0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,\n    0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc81wire = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc81wire;\n","import crc81wire from './calculators/crc81wire.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('dallas-1-wire', crc81wire);\n","// Generated by `./pycrc.py --algorithm=table-driven --generate=c --width=8 --poly=0xd5 --reflect-in=false --reflect-out=false --xor-in=0xff --xor-out=0x00`\nlet TABLE = [\n    0x00, 0xd5, 0x7f, 0xaa, 0xfe, 0x2b, 0x81, 0x54, 0x29, 0xfc, 0x56, 0x83, 0xd7, 0x02, 0xa8, 0x7d,\n    0x52, 0x87, 0x2d, 0xf8, 0xac, 0x79, 0xd3, 0x06, 0x7b, 0xae, 0x04, 0xd1, 0x85, 0x50, 0xfa, 0x2f,\n    0xa4, 0x71, 0xdb, 0x0e, 0x5a, 0x8f, 0x25, 0xf0, 0x8d, 0x58, 0xf2, 0x27, 0x73, 0xa6, 0x0c, 0xd9,\n    0xf6, 0x23, 0x89, 0x5c, 0x08, 0xdd, 0x77, 0xa2, 0xdf, 0x0a, 0xa0, 0x75, 0x21, 0xf4, 0x5e, 0x8b,\n    0x9d, 0x48, 0xe2, 0x37, 0x63, 0xb6, 0x1c, 0xc9, 0xb4, 0x61, 0xcb, 0x1e, 0x4a, 0x9f, 0x35, 0xe0,\n    0xcf, 0x1a, 0xb0, 0x65, 0x31, 0xe4, 0x4e, 0x9b, 0xe6, 0x33, 0x99, 0x4c, 0x18, 0xcd, 0x67, 0xb2,\n    0x39, 0xec, 0x46, 0x93, 0xc7, 0x12, 0xb8, 0x6d, 0x10, 0xc5, 0x6f, 0xba, 0xee, 0x3b, 0x91, 0x44,\n    0x6b, 0xbe, 0x14, 0xc1, 0x95, 0x40, 0xea, 0x3f, 0x42, 0x97, 0x3d, 0xe8, 0xbc, 0x69, 0xc3, 0x16,\n    0xef, 0x3a, 0x90, 0x45, 0x11, 0xc4, 0x6e, 0xbb, 0xc6, 0x13, 0xb9, 0x6c, 0x38, 0xed, 0x47, 0x92,\n    0xbd, 0x68, 0xc2, 0x17, 0x43, 0x96, 0x3c, 0xe9, 0x94, 0x41, 0xeb, 0x3e, 0x6a, 0xbf, 0x15, 0xc0,\n    0x4b, 0x9e, 0x34, 0xe1, 0xb5, 0x60, 0xca, 0x1f, 0x62, 0xb7, 0x1d, 0xc8, 0x9c, 0x49, 0xe3, 0x36,\n    0x19, 0xcc, 0x66, 0xb3, 0xe7, 0x32, 0x98, 0x4d, 0x30, 0xe5, 0x4f, 0x9a, 0xce, 0x1b, 0xb1, 0x64,\n    0x72, 0xa7, 0x0d, 0xd8, 0x8c, 0x59, 0xf3, 0x26, 0x5b, 0x8e, 0x24, 0xf1, 0xa5, 0x70, 0xda, 0x0f,\n    0x20, 0xf5, 0x5f, 0x8a, 0xde, 0x0b, 0xa1, 0x74, 0x09, 0xdc, 0x76, 0xa3, 0xf7, 0x22, 0x88, 0x5d,\n    0xd6, 0x03, 0xa9, 0x7c, 0x28, 0xfd, 0x57, 0x82, 0xff, 0x2a, 0x80, 0x55, 0x01, 0xd4, 0x7e, 0xab,\n    0x84, 0x51, 0xfb, 0x2e, 0x7a, 0xaf, 0x05, 0xd0, 0xad, 0x78, 0xd2, 0x07, 0x53, 0x86, 0x2c, 0xf9,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc8dvbs2 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] & 0xff;\n    }\n    return crc;\n};\nexport default crc8dvbs2;\n","import crc8dvbs2 from './calculators/crc8dvbs2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-8-dvbs2', crc8dvbs2);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16 = (current, previous = 0) => {\n    let crc = ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16;\n","import crc16 from './calculators/crc16.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16', crc16);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\nlet TABLE = [\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b,\n    0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n    0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n    0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738,\n    0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96,\n    0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n    0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n    0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb,\n    0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2,\n    0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n    0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n    0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827,\n    0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d,\n    0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n    0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16ccitt = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 8) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16ccitt;\n","import crc16ccitt from './calculators/crc16ccitt.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('ccitt', crc16ccitt);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\nlet TABLE = [\n    0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741,\n    0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40,\n    0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941,\n    0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41,\n    0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341,\n    0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240,\n    0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40,\n    0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840,\n    0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41,\n    0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640,\n    0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141,\n    0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441,\n    0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41,\n    0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41,\n    0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541,\n    0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041,\n    0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741,\n    0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40,\n    0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941,\n    0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41,\n    0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341,\n    0x4100, 0x81c1, 0x8081, 0x4040,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16modbus = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16modbus;\n","import crc16modbus from './calculators/crc16modbus.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-16-modbus', crc16modbus);\n","import crc16xmodem from './calculators/crc16xmodem.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('xmodem', crc16xmodem);\n","const crc16xmodem = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n    for (let index = 0; index < current.length; index++) {\n        let code = (crc >>> 8) & 0xff;\n        code ^= current[index] & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n    return crc;\n};\nexport default crc16xmodem;\n","// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\nlet TABLE = [\n    0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3,\n    0xca6c, 0xdbe5, 0xe97e, 0xf8f7, 0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e,\n    0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876, 0x2102, 0x308b, 0x0210, 0x1399,\n    0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5,\n    0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50,\n    0xfbef, 0xea66, 0xd8fd, 0xc974, 0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb,\n    0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3, 0x5285, 0x430c, 0x7197, 0x601e,\n    0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72,\n    0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5,\n    0xa96a, 0xb8e3, 0x8a78, 0x9bf1, 0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738,\n    0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70, 0x8408, 0x9581, 0xa71a, 0xb693,\n    0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff,\n    0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a,\n    0x5ee5, 0x4f6c, 0x7df7, 0x6c7e, 0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5,\n    0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd, 0xb58b, 0xa402, 0x9699, 0x8710,\n    0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c,\n    0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df,\n    0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232,\n    0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595,\n    0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,\n    0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c,\n    0x3de3, 0x2c6a, 0x1ef1, 0x0f78,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc16kermit = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[(crc ^ current[index]) & 0xff] ^ (crc >> 8)) & 0xffff;\n    }\n    return crc;\n};\nexport default crc16kermit;\n","import crc16kermit from './calculators/crc16kermit.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('kermit', crc16kermit);\n","// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\nlet TABLE = [\n    0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17, 0xa18139,\n    0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e, 0xc54e89, 0x430272,\n    0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e, 0x64cfb0, 0xe2834b, 0xee1abd,\n    0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7, 0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f,\n    0x9f3708, 0x197bf3, 0x15e205, 0x93aefe, 0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631,\n    0xb8faca, 0xb4633c, 0x322fc7, 0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a,\n    0xd0ac8c, 0x56e077, 0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5,\n    0xf7614e, 0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5,\n    0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc, 0xdced5b,\n    0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c, 0x7d6c62, 0xfb2099,\n    0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375, 0x15723b, 0x933ec0, 0x9fa736,\n    0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c, 0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4,\n    0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15, 0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53,\n    0xc596a8, 0xc90f5e, 0x4f43a5, 0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791,\n    0x688e67, 0xeec29c, 0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448,\n    0xac38b3, 0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a,\n    0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a, 0x578814,\n    0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703, 0x3f964d, 0xb9dab6,\n    0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a, 0x9e1774, 0x185b8f, 0x14c279,\n    0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863, 0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132,\n    0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3, 0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c,\n    0x4ef3e7, 0x426a11, 0xc426ea, 0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c,\n    0x33d79a, 0xb59b61, 0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3,\n    0x141a58, 0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8,\n    0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1, 0x26359f,\n    0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88, 0x87b4a6, 0x01f85d,\n    0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1, 0xe37b16, 0x6537ed, 0x69ae1b,\n    0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401, 0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9,\n    0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc24 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n    for (let index = 0; index < current.length; index++) {\n        crc = (TABLE[((crc >> 16) ^ current[index]) & 0xff] ^ (crc << 8)) & 0xffffff;\n    }\n    return crc;\n};\nexport default crc24;\n","import crc24 from './calculators/crc24.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-24', crc24);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32 = (current, previous) => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let crc = previous === 0 ? 0 : ~~previous ^ -1;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n};\nexport default crc32;\n","import crc32 from './calculators/crc32.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32', crc32);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32-mpeg --generate=c`\nlet TABLE = [\n    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,\n    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,\n    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,\n    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,\n    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,\n    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,\n    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,\n    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,\n    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,\n    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,\n    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,\n    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,\n    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,\n    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,\n    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,\n    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,\n    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,\n    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,\n    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,\n    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,\n    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,\n    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,\n    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,\n    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,\n    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,\n    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,\n    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,\n    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,\n    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,\n    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,\n    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,\n    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crc32mpeg2 = (current, previous) => {\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0xffffffff;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[((crc >> 24) ^ current[index]) & 0xff] ^ (crc << 8);\n    }\n    return crc;\n};\nexport default crc32mpeg2;\n","import crc32mpeg2 from './calculators/crc32mpeg2.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('crc-32-mpeg', crc32mpeg2);\n","// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\nlet TABLE = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n];\nif (typeof Int32Array !== 'undefined') {\n    TABLE = new Int32Array(TABLE);\n}\nconst crcjam = (current, previous = -1) => {\n    let crc = previous === 0 ? 0 : ~~previous;\n    for (let index = 0; index < current.length; index++) {\n        crc = TABLE[(crc ^ current[index]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc;\n};\nexport default crcjam;\n","import crcjam from './calculators/crcjam.js';\nimport defineCrc from './define_crc.js';\nexport default defineCrc('jam', crcjam);\n","import type { ChainConfig } from './types'\n\ntype ChainsDict = {\n  [key: string]: ChainConfig\n}\n\nexport const chains: ChainsDict = {\n  mainnet: {\n    name: 'mainnet',\n    chainId: 1,\n    networkId: 1,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'pow',\n      algorithm: 'ethash',\n      ethash: {},\n    },\n    comment: 'The Ethereum main chain',\n    url: 'https://ethstats.net/',\n    genesis: {\n      gasLimit: 5000,\n      difficulty: 17179869184,\n      nonce: '0x0000000000000042',\n      extraData: '0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xfc64ec04',\n      },\n      {\n        name: 'homestead',\n        block: 1150000,\n        forkHash: '0x97c2c34c',\n      },\n      {\n        name: 'dao',\n        block: 1920000,\n        forkHash: '0x91d1f948',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 2463000,\n        forkHash: '0x7a64da13',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 2675000,\n        forkHash: '0x3edd5b10',\n      },\n      {\n        name: 'byzantium',\n        block: 4370000,\n        forkHash: '0xa00bc324',\n      },\n      {\n        name: 'constantinople',\n        block: 7280000,\n        forkHash: '0x668db0af',\n      },\n      {\n        name: 'petersburg',\n        block: 7280000,\n        forkHash: '0x668db0af',\n      },\n      {\n        name: 'istanbul',\n        block: 9069000,\n        forkHash: '0x879d6e30',\n      },\n      {\n        name: 'muirGlacier',\n        block: 9200000,\n        forkHash: '0xe029e991',\n      },\n      {\n        name: 'berlin',\n        block: 12244000,\n        forkHash: '0x0eb440f6',\n      },\n      {\n        name: 'london',\n        block: 12965000,\n        forkHash: '0xb715077d',\n      },\n      {\n        name: 'arrowGlacier',\n        block: 13773000,\n        forkHash: '0x20c327fc',\n      },\n      {\n        name: 'grayGlacier',\n        block: 15050000,\n        forkHash: '0xf0afd0e3',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge\n        // terminal block: https://etherscan.io/block/15537393\n        name: 'paris',\n        ttd: '58750000000000000000000',\n        block: 15537394,\n        forkHash: '0xf0afd0e3',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: null,\n        forkHash: null,\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1681338455',\n        forkHash: '0xdce96c2d',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '18.138.108.67',\n        port: 30303,\n        id: 'd860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666',\n        location: 'ap-southeast-1-001',\n        comment: 'bootnode-aws-ap-southeast-1-001',\n      },\n      {\n        ip: '3.209.45.79',\n        port: 30303,\n        id: '22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de',\n        location: 'us-east-1-001',\n        comment: 'bootnode-aws-us-east-1-001',\n      },\n      {\n        ip: '65.108.70.101',\n        port: 30303,\n        id: '2b252ab6a1d0f971d9722cb839a42cb81db019ba44c08754628ab4a823487071b5695317c8ccd085219c3a03af063495b2f1da8d18218da2d6a82981b45e6ffc',\n        location: 'eu-west-1-001',\n        comment: 'bootnode-hetzner-hel',\n      },\n      {\n        ip: '157.90.35.166',\n        port: 30303,\n        id: '4aeb4ab6c14b23e2c4cfdce879c04b0748a20d8e9b59e25ded2a08143e265c6c25936e74cbc8e641e3312ca288673d91f2f93f8e277de3cfa444ecdaaf982052',\n        location: 'eu-central-1-001',\n        comment: 'bootnode-hetzner-fsn',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net',\n    ],\n  },\n  goerli: {\n    name: 'goerli',\n    chainId: 5,\n    networkId: 5,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'poa',\n      algorithm: 'clique',\n      clique: {\n        period: 15,\n        epoch: 30000,\n      },\n    },\n    comment: 'Cross-client PoA test network',\n    url: 'https://github.com/goerli/testnet',\n    genesis: {\n      timestamp: '0x5c51a607',\n      gasLimit: 10485760,\n      difficulty: 1,\n      nonce: '0x0000000000000000',\n      extraData:\n        '0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xa3f5ab08',\n      },\n      {\n        name: 'istanbul',\n        block: 1561651,\n        forkHash: '0xc25efa5c',\n      },\n      {\n        name: 'berlin',\n        block: 4460644,\n        forkHash: '0x757a1c47',\n      },\n      {\n        name: 'london',\n        block: 5062605,\n        forkHash: '0xb8c6299d',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge,\n        // terminal block: https://goerli.etherscan.io/block/7382818\n        name: 'paris',\n        ttd: '10790000',\n        block: 7382819,\n        forkHash: '0xb8c6299d',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: null,\n        forkHash: null,\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1678832736',\n        forkHash: '0xf9843abf',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '51.141.78.53',\n        port: 30303,\n        id: '011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a',\n        location: '',\n        comment: 'Upstream bootnode 1',\n      },\n      {\n        ip: '13.93.54.137',\n        port: 30303,\n        id: '176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b',\n        location: '',\n        comment: 'Upstream bootnode 2',\n      },\n      {\n        ip: '94.237.54.114',\n        port: 30313,\n        id: '46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291',\n        location: '',\n        comment: 'Upstream bootnode 3',\n      },\n      {\n        ip: '18.218.250.66',\n        port: 30313,\n        id: 'b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949',\n        location: '',\n        comment: 'Upstream bootnode 4',\n      },\n      {\n        ip: '3.11.147.67',\n        port: 30303,\n        id: 'a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91',\n        location: '',\n        comment: 'Ethereum Foundation bootnode',\n      },\n      {\n        ip: '51.15.116.226',\n        port: 30303,\n        id: 'a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n      {\n        ip: '51.15.119.157',\n        port: 30303,\n        id: '807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n      {\n        ip: '51.15.119.157',\n        port: 40303,\n        id: 'a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd',\n        location: '',\n        comment: 'Goerli Initiative bootnode',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net',\n    ],\n  },\n  sepolia: {\n    name: 'sepolia',\n    chainId: 11155111,\n    networkId: 11155111,\n    defaultHardfork: 'shanghai',\n    consensus: {\n      type: 'pow',\n      algorithm: 'ethash',\n      ethash: {},\n    },\n    comment: 'PoW test network to replace Ropsten',\n    url: 'https://github.com/ethereum/go-ethereum/pull/23730',\n    genesis: {\n      timestamp: '0x6159af19',\n      gasLimit: 30000000,\n      difficulty: 131072,\n      nonce: '0x0000000000000000',\n      extraData: '0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'istanbul',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'muirGlacier',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'berlin',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'london',\n        block: 0,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        // The forkHash will remain same as mergeForkIdTransition is post merge,\n        // terminal block: https://sepolia.etherscan.io/block/1450408\n        name: 'paris',\n        ttd: '17000000000000000',\n        block: 1450409,\n        forkHash: '0xfe3366e7',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: 1735371,\n        forkHash: '0xb96cbd13',\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1677557088',\n        forkHash: '0xf7f9bc08',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '18.168.182.86',\n        port: 30303,\n        id: '9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066',\n        location: '',\n        comment: 'geth',\n      },\n      {\n        ip: '52.14.151.177',\n        port: 30303,\n        id: 'ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7',\n        location: '',\n        comment: 'besu',\n      },\n      {\n        ip: '165.22.196.173',\n        port: 30303,\n        id: 'ce970ad2e9daa9e14593de84a8b49da3d54ccfdf83cbc4fe519cb8b36b5918ed4eab087dedd4a62479b8d50756b492d5f762367c8d20329a7854ec01547568a6',\n        location: '',\n        comment: 'EF',\n      },\n      {\n        ip: '65.108.95.67',\n        port: 30303,\n        id: '075503b13ed736244896efcde2a992ec0b451357d46cb7a8132c0384721742597fc8f0d91bbb40bb52e7d6e66728d36a1fda09176294e4a30cfac55dcce26bc6',\n        location: '',\n        comment: 'lodestar',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net',\n    ],\n  },\n  holesky: {\n    name: 'holesky',\n    chainId: 17000,\n    networkId: 17000,\n    defaultHardfork: 'paris',\n    consensus: {\n      type: 'pos',\n      algorithm: 'casper',\n    },\n    comment: 'PoS test network to replace Goerli',\n    url: 'https://github.com/eth-clients/holesky/',\n    genesis: {\n      baseFeePerGas: '0x3B9ACA00',\n      difficulty: '0x01',\n      extraData: '0x',\n      gasLimit: '0x17D7840',\n      nonce: '0x0000000000001234',\n      timestamp: '0x65156994',\n    },\n    hardforks: [\n      {\n        name: 'chainstart',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'homestead',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'tangerineWhistle',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'spuriousDragon',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'byzantium',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'constantinople',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'petersburg',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'istanbul',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'muirGlacier',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'berlin',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'london',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'paris',\n        ttd: '0',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'mergeForkIdTransition',\n        block: 0,\n        forkHash: '0xc61a6098',\n      },\n      {\n        name: 'shanghai',\n        block: null,\n        timestamp: '1696000704',\n        forkHash: '0xfd4f016b',\n      },\n      {\n        name: 'cancun',\n        block: null,\n        forkHash: null,\n      },\n    ],\n    bootstrapNodes: [\n      {\n        ip: '146.190.13.128',\n        port: 30303,\n        id: 'ac906289e4b7f12df423d654c5a962b6ebe5b3a74cc9e06292a85221f9a64a6f1cfdd6b714ed6dacef51578f92b34c60ee91e9ede9c7f8fadc4d347326d95e2b',\n        location: '',\n        comment: 'bootnode 1',\n      },\n      {\n        ip: '178.128.136.233',\n        port: 30303,\n        id: 'a3435a0155a3e837c02f5e7f5662a2f1fbc25b48e4dc232016e1c51b544cb5b4510ef633ea3278c0e970fa8ad8141e2d4d0f9f95456c537ff05fdf9b31c15072',\n        location: '',\n        comment: 'bootnode 2',\n      },\n    ],\n    dnsNetworks: [\n      'enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.holesky.ethdisco.net',\n    ],\n  },\n}\n","import { BIGINT_0, hexToBytes } from '@ethereumjs/util'\n\nexport enum Chain {\n  Mainnet = 1,\n  Goerli = 5,\n  Sepolia = 11155111,\n  Holesky = 17000,\n}\n\n/**\n * Genesis state meta info which is decoupled from common's genesis params\n */\ntype GenesisState = {\n  name: string\n  /* blockNumber that can be used to update and track the regenesis marker */\n  blockNumber: bigint\n  /* stateRoot of the chain at the blockNumber */\n  stateRoot: Uint8Array\n}\n\n// Having this info as record will force typescript to make sure no chain is missed\n/**\n * GenesisState info about well known ethereum chains\n */\nexport const ChainGenesis: Record<Chain, GenesisState> = {\n  [Chain.Mainnet]: {\n    name: 'mainnet',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544'),\n  },\n  [Chain.Goerli]: {\n    name: 'goerli',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008'),\n  },\n  [Chain.Sepolia]: {\n    name: 'sepolia',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x5eb6e371a698b8d68f665192350ffcecbbbf322916f4b51bd79bb6887da3f494'),\n  },\n  [Chain.Holesky]: {\n    name: 'holesky',\n    blockNumber: BIGINT_0,\n    stateRoot: hexToBytes('0x69d8c9d72f6fa4ad42d4702b433707212f90db395eb54dc20bc85de253788783'),\n  },\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Paris = 'paris',\n  Shanghai = 'shanghai',\n  Cancun = 'cancun',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","import { Hardfork } from './enums.js'\n\nimport type { EIPConfig } from './types.js'\n\ntype EIPsDict = {\n  [key: string]: EIPConfig\n}\n\nenum Status {\n  Draft = 'draft',\n  Review = 'review',\n  Final = 'final',\n}\n\nexport const EIPs: EIPsDict = {\n  1153: {\n    comment: 'Transient storage opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-1153',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      tstore: {\n        v: 100,\n        d: 'Base fee of the TSTORE opcode',\n      },\n      tload: {\n        v: 100,\n        d: 'Base fee of the TLOAD opcode',\n      },\n    },\n  },\n  1559: {\n    comment: 'Fee market change for ETH 1.0 chain',\n    url: 'https://eips.ethereum.org/EIPS/eip-1559',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2930],\n    gasConfig: {\n      baseFeeMaxChangeDenominator: {\n        v: 8,\n        d: 'Maximum base fee change denominator',\n      },\n      elasticityMultiplier: {\n        v: 2,\n        d: 'Maximum block gas target elasticity',\n      },\n      initialBaseFee: {\n        v: 1000000000,\n        d: 'Initial base fee on first EIP1559 block',\n      },\n    },\n  },\n  2315: {\n    comment: 'Simple subroutines for the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-2315',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [],\n    gasPrices: {\n      beginsub: {\n        v: 2,\n        d: 'Base fee of the BEGINSUB opcode',\n      },\n      returnsub: {\n        v: 5,\n        d: 'Base fee of the RETURNSUB opcode',\n      },\n      jumpsub: {\n        v: 10,\n        d: 'Base fee of the JUMPSUB opcode',\n      },\n    },\n  },\n  2565: {\n    comment: 'ModExp gas cost',\n    url: 'https://eips.ethereum.org/EIPS/eip-2565',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Byzantium,\n    requiredEIPs: [],\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 3,\n        d: 'Gquaddivisor from modexp precompile for gas calculation',\n      },\n    },\n  },\n  2718: {\n    comment: 'Typed Transaction Envelope',\n    url: 'https://eips.ethereum.org/EIPS/eip-2718',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  2929: {\n    comment: 'Gas cost increases for state access opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-2929',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      coldsload: {\n        v: 2100,\n        d: 'Gas cost of the first read of storage from a given location (per transaction)',\n      },\n      coldaccountaccess: {\n        v: 2600,\n        d: 'Gas cost of the first read of a given address (per transaction)',\n      },\n      warmstorageread: {\n        v: 100,\n        d: \"Gas cost of reading storage locations which have already loaded 'cold'\",\n      },\n      sstoreCleanGasEIP2200: {\n        v: 2900,\n        d: 'Once per SSTORE operation from clean non-zero to something else',\n      },\n      sstoreNoopGasEIP2200: {\n        v: 100,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 100,\n        d: 'Once per SSTORE operation if a dirty value is changed',\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19900,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4900,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      call: {\n        v: 0,\n        d: 'Base fee of the CALL opcode',\n      },\n      callcode: {\n        v: 0,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      delegatecall: {\n        v: 0,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n      staticcall: {\n        v: 0,\n        d: 'Base fee of the STATICCALL opcode',\n      },\n      balance: {\n        v: 0,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      extcodesize: {\n        v: 0,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 0,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      extcodehash: {\n        v: 0,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      sload: {\n        v: 0,\n        d: 'Base fee of the SLOAD opcode',\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode',\n      },\n    },\n  },\n  2930: {\n    comment: 'Optional access lists',\n    url: 'https://eips.ethereum.org/EIPS/eip-2930',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Istanbul,\n    requiredEIPs: [2718, 2929],\n    gasPrices: {\n      accessListStorageKeyCost: {\n        v: 1900,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n      accessListAddressCost: {\n        v: 2400,\n        d: 'Gas cost per storage key in an Access List transaction',\n      },\n    },\n  },\n  3074: {\n    comment: 'AUTH and AUTHCALL opcodes',\n    url: 'https://eips.ethereum.org/EIPS/eip-3074',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      auth: {\n        v: 3100,\n        d: 'Gas cost of the AUTH opcode',\n      },\n      authcall: {\n        v: 0,\n        d: 'Gas cost of the AUTHCALL opcode',\n      },\n      authcallValueTransfer: {\n        v: 6700,\n        d: 'Paid for CALL when the value transfer is non-zero',\n      },\n    },\n  },\n  3198: {\n    comment: 'BASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3198',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      basefee: {\n        v: 2,\n        d: 'Gas cost of the BASEFEE opcode',\n      },\n    },\n  },\n  3529: {\n    comment: 'Reduction in refunds',\n    url: 'https://eips.ethereum.org/EIPS/eip-3529',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [2929],\n    gasConfig: {\n      maxRefundQuotient: {\n        v: 5,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n      },\n    },\n    gasPrices: {\n      selfdestructRefund: {\n        v: 0,\n        d: 'Refunded following a selfdestruct operation',\n      },\n      sstoreClearRefundEIP2200: {\n        v: 4800,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n    },\n  },\n  3540: {\n    comment: 'EVM Object Format (EOF) v1',\n    url: 'https://eips.ethereum.org/EIPS/eip-3540',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3541],\n  },\n  3541: {\n    comment: 'Reject new contracts starting with the 0xEF byte',\n    url: 'https://eips.ethereum.org/EIPS/eip-3541',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Berlin,\n    requiredEIPs: [],\n  },\n  3554: {\n    comment: 'Difficulty Bomb Delay to December 1st 2021',\n    url: 'https://eips.ethereum.org/EIPS/eip-3554',\n    status: Status.Final,\n    minimumHardfork: Hardfork.MuirGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 9500000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  3607: {\n    comment: 'Reject transactions from senders with deployed code',\n    url: 'https://eips.ethereum.org/EIPS/eip-3607',\n    status: Status.Final,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n  },\n  3651: {\n    comment: 'Warm COINBASE',\n    url: 'https://eips.ethereum.org/EIPS/eip-3651',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [2929],\n  },\n  3670: {\n    comment: 'EOF - Code Validation',\n    url: 'https://eips.ethereum.org/EIPS/eip-3670',\n    status: 'Review',\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [3540],\n    gasConfig: {},\n    gasPrices: {},\n    vm: {},\n    pow: {},\n  },\n  3675: {\n    comment: 'Upgrade consensus to Proof-of-Stake',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  3855: {\n    comment: 'PUSH0 instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-3855',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Chainstart,\n    requiredEIPs: [],\n    gasPrices: {\n      push0: {\n        v: 2,\n        d: 'Base fee of the PUSH0 opcode',\n      },\n    },\n  },\n  3860: {\n    comment: 'Limit and meter initcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-3860',\n    status: Status.Review,\n    minimumHardfork: Hardfork.SpuriousDragon,\n    requiredEIPs: [],\n    gasPrices: {\n      initCodeWordCost: {\n        v: 2,\n        d: 'Gas to pay for each word (32 bytes) of initcode when creating a contract',\n      },\n    },\n    vm: {\n      maxInitCodeSize: {\n        v: 49152,\n        d: 'Maximum length of initialization code when creating a contract',\n      },\n    },\n  },\n  4345: {\n    comment: 'Difficulty Bomb Delay to June 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-4345',\n    status: Status.Final,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 10700000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  4399: {\n    comment: 'Supplant DIFFICULTY opcode with PREVRANDAO',\n    url: 'https://eips.ethereum.org/EIPS/eip-4399',\n    status: Status.Review,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n    gasPrices: {\n      prevrandao: {\n        v: 2,\n        d: 'Base fee of the PREVRANDAO opcode (previously DIFFICULTY)',\n      },\n    },\n  },\n  4788: {\n    comment: 'Beacon block root in the EVM',\n    url: 'https://eips.ethereum.org/EIPS/eip-4788',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Cancun,\n    requiredEIPs: [],\n    gasPrices: {},\n    vm: {\n      historicalRootsLength: {\n        v: 8191,\n        d: 'The modulo parameter of the beaconroot ring buffer in the beaconroot statefull precompile',\n      },\n    },\n  },\n  4844: {\n    comment: 'Shard Blob Transactions',\n    url: 'https://eips.ethereum.org/EIPS/eip-4844',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [1559, 2718, 2930, 4895],\n    gasConfig: {\n      blobGasPerBlob: {\n        v: 131072,\n        d: 'The base fee for blob gas per blob',\n      },\n      targetBlobGasPerBlock: {\n        v: 393216,\n        d: 'The target blob gas consumed per block',\n      },\n      maxblobGasPerBlock: {\n        v: 786432,\n        d: 'The max blob gas allowable per block',\n      },\n      blobGasPriceUpdateFraction: {\n        v: 3338477,\n        d: 'The denominator used in the exponential when calculating a blob gas price',\n      },\n    },\n    gasPrices: {\n      simpleGasPerBlob: {\n        v: 12000,\n        d: 'The basic gas fee for each blob',\n      },\n      minBlobGasPrice: {\n        v: 1,\n        d: 'The minimum fee per blob gas',\n      },\n      kzgPointEvaluationGasPrecompilePrice: {\n        v: 50000,\n        d: 'The fee associated with the point evaluation precompile',\n      },\n      blobhash: {\n        v: 3,\n        d: 'Base fee of the BLOBHASH opcode',\n      },\n    },\n    sharding: {\n      blobCommitmentVersionKzg: {\n        v: 1,\n        d: 'The number indicated a versioned hash is a KZG commitment',\n      },\n      fieldElementsPerBlob: {\n        v: 4096,\n        d: 'The number of field elements allowed per blob',\n      },\n    },\n  },\n  4895: {\n    comment: 'Beacon chain push withdrawals as operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-4895',\n    status: Status.Review,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [],\n  },\n  5133: {\n    comment: 'Delaying Difficulty Bomb to mid-September 2022',\n    url: 'https://eips.ethereum.org/EIPS/eip-5133',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.GrayGlacier,\n    requiredEIPs: [],\n    pow: {\n      difficultyBombDelay: {\n        v: 11400000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  5656: {\n    comment: 'MCOPY - Memory copying instruction',\n    url: 'https://eips.ethereum.org/EIPS/eip-5656',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Shanghai,\n    requiredEIPs: [],\n    gasPrices: {\n      mcopy: {\n        v: 3,\n        d: 'Base fee of the MCOPY opcode',\n      },\n    },\n  },\n  6780: {\n    comment: 'SELFDESTRUCT only in same transaction',\n    url: 'https://eips.ethereum.org/EIPS/eip-6780',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.London,\n    requiredEIPs: [],\n  },\n  7516: {\n    comment: 'BLOBBASEFEE opcode',\n    url: 'https://eips.ethereum.org/EIPS/eip-7516',\n    status: Status.Draft,\n    minimumHardfork: Hardfork.Paris,\n    requiredEIPs: [4844],\n    gasPrices: {\n      blobbasefee: {\n        v: 2,\n        d: 'Gas cost of the BLOBBASEFEE opcode',\n      },\n    },\n  },\n}\n","import type { HardforkConfig } from './types.js'\n\ntype HardforksDict = {\n  [key: string]: HardforkConfig\n}\n\nenum Status {\n  Draft = 'draft',\n  Review = 'review',\n  Final = 'final',\n}\n\nexport const hardforks: HardforksDict = {\n  chainstart: {\n    name: 'chainstart',\n    comment: 'Start of the Ethereum main chain',\n    url: '',\n    status: Status.Final,\n    gasConfig: {\n      minGasLimit: {\n        v: 5000,\n        d: 'Minimum the gas limit may ever be',\n      },\n      gasLimitBoundDivisor: {\n        v: 1024,\n        d: 'The bound divisor of the gas limit, used in update calculations',\n      },\n      maxRefundQuotient: {\n        v: 2,\n        d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n      },\n    },\n    gasPrices: {\n      base: {\n        v: 2,\n        d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n      },\n      exp: {\n        v: 10,\n        d: 'Base fee of the EXP opcode',\n      },\n      expByte: {\n        v: 10,\n        d: 'Times ceil(log256(exponent)) for the EXP instruction',\n      },\n      keccak256: {\n        v: 30,\n        d: 'Base fee of the SHA3 opcode',\n      },\n      keccak256Word: {\n        v: 6,\n        d: \"Once per word of the SHA3 operation's data\",\n      },\n      sload: {\n        v: 50,\n        d: 'Base fee of the SLOAD opcode',\n      },\n      sstoreSet: {\n        v: 20000,\n        d: 'Once per SSTORE operation if the zeroness changes from zero',\n      },\n      sstoreReset: {\n        v: 5000,\n        d: 'Once per SSTORE operation if the zeroness does not change from zero',\n      },\n      sstoreRefund: {\n        v: 15000,\n        d: 'Once per SSTORE operation if the zeroness changes to zero',\n      },\n      jumpdest: {\n        v: 1,\n        d: 'Base fee of the JUMPDEST opcode',\n      },\n      log: {\n        v: 375,\n        d: 'Base fee of the LOG opcode',\n      },\n      logData: {\n        v: 8,\n        d: \"Per byte in a LOG* operation's data\",\n      },\n      logTopic: {\n        v: 375,\n        d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n      },\n      create: {\n        v: 32000,\n        d: 'Base fee of the CREATE opcode',\n      },\n      call: {\n        v: 40,\n        d: 'Base fee of the CALL opcode',\n      },\n      callStipend: {\n        v: 2300,\n        d: 'Free gas given at beginning of call',\n      },\n      callValueTransfer: {\n        v: 9000,\n        d: 'Paid for CALL when the value transfor is non-zero',\n      },\n      callNewAccount: {\n        v: 25000,\n        d: \"Paid for CALL when the destination address didn't exist prior\",\n      },\n      selfdestructRefund: {\n        v: 24000,\n        d: 'Refunded following a selfdestruct operation',\n      },\n      memory: {\n        v: 3,\n        d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n      },\n      quadCoeffDiv: {\n        v: 512,\n        d: 'Divisor for the quadratic particle of the memory cost equation',\n      },\n      createData: {\n        v: 200,\n        d: '',\n      },\n      tx: {\n        v: 21000,\n        d: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n      },\n      txCreation: {\n        v: 32000,\n        d: 'The cost of creating a contract via tx',\n      },\n      txDataZero: {\n        v: 4,\n        d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n      },\n      txDataNonZero: {\n        v: 68,\n        d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n      },\n      copy: {\n        v: 3,\n        d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n      },\n      ecRecover: {\n        v: 3000,\n        d: '',\n      },\n      sha256: {\n        v: 60,\n        d: '',\n      },\n      sha256Word: {\n        v: 12,\n        d: '',\n      },\n      ripemd160: {\n        v: 600,\n        d: '',\n      },\n      ripemd160Word: {\n        v: 120,\n        d: '',\n      },\n      identity: {\n        v: 15,\n        d: '',\n      },\n      identityWord: {\n        v: 3,\n        d: '',\n      },\n      stop: {\n        v: 0,\n        d: 'Base fee of the STOP opcode',\n      },\n      add: {\n        v: 3,\n        d: 'Base fee of the ADD opcode',\n      },\n      mul: {\n        v: 5,\n        d: 'Base fee of the MUL opcode',\n      },\n      sub: {\n        v: 3,\n        d: 'Base fee of the SUB opcode',\n      },\n      div: {\n        v: 5,\n        d: 'Base fee of the DIV opcode',\n      },\n      sdiv: {\n        v: 5,\n        d: 'Base fee of the SDIV opcode',\n      },\n      mod: {\n        v: 5,\n        d: 'Base fee of the MOD opcode',\n      },\n      smod: {\n        v: 5,\n        d: 'Base fee of the SMOD opcode',\n      },\n      addmod: {\n        v: 8,\n        d: 'Base fee of the ADDMOD opcode',\n      },\n      mulmod: {\n        v: 8,\n        d: 'Base fee of the MULMOD opcode',\n      },\n      signextend: {\n        v: 5,\n        d: 'Base fee of the SIGNEXTEND opcode',\n      },\n      lt: {\n        v: 3,\n        d: 'Base fee of the LT opcode',\n      },\n      gt: {\n        v: 3,\n        d: 'Base fee of the GT opcode',\n      },\n      slt: {\n        v: 3,\n        d: 'Base fee of the SLT opcode',\n      },\n      sgt: {\n        v: 3,\n        d: 'Base fee of the SGT opcode',\n      },\n      eq: {\n        v: 3,\n        d: 'Base fee of the EQ opcode',\n      },\n      iszero: {\n        v: 3,\n        d: 'Base fee of the ISZERO opcode',\n      },\n      and: {\n        v: 3,\n        d: 'Base fee of the AND opcode',\n      },\n      or: {\n        v: 3,\n        d: 'Base fee of the OR opcode',\n      },\n      xor: {\n        v: 3,\n        d: 'Base fee of the XOR opcode',\n      },\n      not: {\n        v: 3,\n        d: 'Base fee of the NOT opcode',\n      },\n      byte: {\n        v: 3,\n        d: 'Base fee of the BYTE opcode',\n      },\n      address: {\n        v: 2,\n        d: 'Base fee of the ADDRESS opcode',\n      },\n      balance: {\n        v: 20,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      origin: {\n        v: 2,\n        d: 'Base fee of the ORIGIN opcode',\n      },\n      caller: {\n        v: 2,\n        d: 'Base fee of the CALLER opcode',\n      },\n      callvalue: {\n        v: 2,\n        d: 'Base fee of the CALLVALUE opcode',\n      },\n      calldataload: {\n        v: 3,\n        d: 'Base fee of the CALLDATALOAD opcode',\n      },\n      calldatasize: {\n        v: 2,\n        d: 'Base fee of the CALLDATASIZE opcode',\n      },\n      calldatacopy: {\n        v: 3,\n        d: 'Base fee of the CALLDATACOPY opcode',\n      },\n      codesize: {\n        v: 2,\n        d: 'Base fee of the CODESIZE opcode',\n      },\n      codecopy: {\n        v: 3,\n        d: 'Base fee of the CODECOPY opcode',\n      },\n      gasprice: {\n        v: 2,\n        d: 'Base fee of the GASPRICE opcode',\n      },\n      extcodesize: {\n        v: 20,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 20,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      blockhash: {\n        v: 20,\n        d: 'Base fee of the BLOCKHASH opcode',\n      },\n      coinbase: {\n        v: 2,\n        d: 'Base fee of the COINBASE opcode',\n      },\n      timestamp: {\n        v: 2,\n        d: 'Base fee of the TIMESTAMP opcode',\n      },\n      number: {\n        v: 2,\n        d: 'Base fee of the NUMBER opcode',\n      },\n      difficulty: {\n        v: 2,\n        d: 'Base fee of the DIFFICULTY opcode',\n      },\n      gaslimit: {\n        v: 2,\n        d: 'Base fee of the GASLIMIT opcode',\n      },\n      pop: {\n        v: 2,\n        d: 'Base fee of the POP opcode',\n      },\n      mload: {\n        v: 3,\n        d: 'Base fee of the MLOAD opcode',\n      },\n      mstore: {\n        v: 3,\n        d: 'Base fee of the MSTORE opcode',\n      },\n      mstore8: {\n        v: 3,\n        d: 'Base fee of the MSTORE8 opcode',\n      },\n      sstore: {\n        v: 0,\n        d: 'Base fee of the SSTORE opcode',\n      },\n      jump: {\n        v: 8,\n        d: 'Base fee of the JUMP opcode',\n      },\n      jumpi: {\n        v: 10,\n        d: 'Base fee of the JUMPI opcode',\n      },\n      pc: {\n        v: 2,\n        d: 'Base fee of the PC opcode',\n      },\n      msize: {\n        v: 2,\n        d: 'Base fee of the MSIZE opcode',\n      },\n      gas: {\n        v: 2,\n        d: 'Base fee of the GAS opcode',\n      },\n      push: {\n        v: 3,\n        d: 'Base fee of the PUSH opcode',\n      },\n      dup: {\n        v: 3,\n        d: 'Base fee of the DUP opcode',\n      },\n      swap: {\n        v: 3,\n        d: 'Base fee of the SWAP opcode',\n      },\n      callcode: {\n        v: 40,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      return: {\n        v: 0,\n        d: 'Base fee of the RETURN opcode',\n      },\n      invalid: {\n        v: 0,\n        d: 'Base fee of the INVALID opcode',\n      },\n      selfdestruct: {\n        v: 0,\n        d: 'Base fee of the SELFDESTRUCT opcode',\n      },\n    },\n    vm: {\n      stackLimit: {\n        v: 1024,\n        d: 'Maximum size of VM stack allowed',\n      },\n      callCreateDepth: {\n        v: 1024,\n        d: 'Maximum depth of call/create stack',\n      },\n      maxExtraDataSize: {\n        v: 32,\n        d: 'Maximum size extra data may be after Genesis',\n      },\n    },\n    pow: {\n      minimumDifficulty: {\n        v: 131072,\n        d: 'The minimum that the difficulty may ever be',\n      },\n      difficultyBoundDivisor: {\n        v: 2048,\n        d: 'The bound divisor of the difficulty, used in the update calculations',\n      },\n      durationLimit: {\n        v: 13,\n        d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n      },\n      epochDuration: {\n        v: 30000,\n        d: 'Duration between proof-of-work epochs',\n      },\n      timebombPeriod: {\n        v: 100000,\n        d: 'Exponential difficulty timebomb period',\n      },\n      minerReward: {\n        v: BigInt('5000000000000000000'),\n        d: 'the amount a miner get rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 0,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  homestead: {\n    name: 'homestead',\n    comment: 'Homestead hardfork with protocol and network changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-606',\n    status: Status.Final,\n    gasPrices: {\n      delegatecall: {\n        v: 40,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n    },\n  },\n  dao: {\n    name: 'dao',\n    comment: 'DAO rescue hardfork',\n    url: 'https://eips.ethereum.org/EIPS/eip-779',\n    status: Status.Final,\n  },\n  tangerineWhistle: {\n    name: 'tangerineWhistle',\n    comment: 'Hardfork with gas cost changes for IO-heavy operations',\n    url: 'https://eips.ethereum.org/EIPS/eip-608',\n    status: Status.Final,\n    gasPrices: {\n      sload: {\n        v: 200,\n        d: 'Once per SLOAD operation',\n      },\n      call: {\n        v: 700,\n        d: 'Once per CALL operation & message call transaction',\n      },\n      extcodesize: {\n        v: 700,\n        d: 'Base fee of the EXTCODESIZE opcode',\n      },\n      extcodecopy: {\n        v: 700,\n        d: 'Base fee of the EXTCODECOPY opcode',\n      },\n      balance: {\n        v: 400,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      delegatecall: {\n        v: 700,\n        d: 'Base fee of the DELEGATECALL opcode',\n      },\n      callcode: {\n        v: 700,\n        d: 'Base fee of the CALLCODE opcode',\n      },\n      selfdestruct: {\n        v: 5000,\n        d: 'Base fee of the SELFDESTRUCT opcode',\n      },\n    },\n  },\n  spuriousDragon: {\n    name: 'spuriousDragon',\n    comment:\n      'HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit',\n    url: 'https://eips.ethereum.org/EIPS/eip-607',\n    status: Status.Final,\n    gasPrices: {\n      expByte: {\n        v: 50,\n        d: 'Times ceil(log256(exponent)) for the EXP instruction',\n      },\n    },\n    vm: {\n      maxCodeSize: {\n        v: 24576,\n        d: 'Maximum length of contract code',\n      },\n    },\n  },\n  byzantium: {\n    name: 'byzantium',\n    comment: 'Hardfork with new precompiles, instructions and other protocol changes',\n    url: 'https://eips.ethereum.org/EIPS/eip-609',\n    status: Status.Final,\n    gasPrices: {\n      modexpGquaddivisor: {\n        v: 20,\n        d: 'Gquaddivisor from modexp precompile for gas calculation',\n      },\n      ecAdd: {\n        v: 500,\n        d: 'Gas costs for curve addition precompile',\n      },\n      ecMul: {\n        v: 40000,\n        d: 'Gas costs for curve multiplication precompile',\n      },\n      ecPairing: {\n        v: 100000,\n        d: 'Base gas costs for curve pairing precompile',\n      },\n      ecPairingWord: {\n        v: 80000,\n        d: 'Gas costs regarding curve pairing precompile input length',\n      },\n      revert: {\n        v: 0,\n        d: 'Base fee of the REVERT opcode',\n      },\n      staticcall: {\n        v: 700,\n        d: 'Base fee of the STATICCALL opcode',\n      },\n      returndatasize: {\n        v: 2,\n        d: 'Base fee of the RETURNDATASIZE opcode',\n      },\n      returndatacopy: {\n        v: 3,\n        d: 'Base fee of the RETURNDATACOPY opcode',\n      },\n    },\n    pow: {\n      minerReward: {\n        v: BigInt('3000000000000000000'),\n        d: 'the amount a miner get rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 3000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  constantinople: {\n    name: 'constantinople',\n    comment: 'Postponed hardfork including EIP-1283 (SSTORE gas metering changes)',\n    url: 'https://eips.ethereum.org/EIPS/eip-1013',\n    status: Status.Final,\n    gasPrices: {\n      netSstoreNoopGas: {\n        v: 200,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      netSstoreInitGas: {\n        v: 20000,\n        d: 'Once per SSTORE operation from clean zero',\n      },\n      netSstoreCleanGas: {\n        v: 5000,\n        d: 'Once per SSTORE operation from clean non-zero',\n      },\n      netSstoreDirtyGas: {\n        v: 200,\n        d: 'Once per SSTORE operation from dirty',\n      },\n      netSstoreClearRefund: {\n        v: 15000,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n      netSstoreResetRefund: {\n        v: 4800,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      netSstoreResetClearRefund: {\n        v: 19800,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      shl: {\n        v: 3,\n        d: 'Base fee of the SHL opcode',\n      },\n      shr: {\n        v: 3,\n        d: 'Base fee of the SHR opcode',\n      },\n      sar: {\n        v: 3,\n        d: 'Base fee of the SAR opcode',\n      },\n      extcodehash: {\n        v: 400,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      create2: {\n        v: 32000,\n        d: 'Base fee of the CREATE2 opcode',\n      },\n    },\n    pow: {\n      minerReward: {\n        v: BigInt('2000000000000000000'),\n        d: 'The amount a miner gets rewarded for mining a block',\n      },\n      difficultyBombDelay: {\n        v: 5000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  petersburg: {\n    name: 'petersburg',\n    comment:\n      'Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople',\n    url: 'https://eips.ethereum.org/EIPS/eip-1716',\n    status: Status.Final,\n    gasPrices: {\n      netSstoreNoopGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreInitGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreCleanGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreDirtyGas: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreClearRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreResetRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n      netSstoreResetClearRefund: {\n        v: null,\n        d: 'Removed along EIP-1283',\n      },\n    },\n  },\n  istanbul: {\n    name: 'istanbul',\n    comment: 'HF targeted for December 2019 following the Constantinople/Petersburg HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-1679',\n    status: Status.Final,\n    gasConfig: {},\n    gasPrices: {\n      blake2Round: {\n        v: 1,\n        d: 'Gas cost per round for the Blake2 F precompile',\n      },\n      ecAdd: {\n        v: 150,\n        d: 'Gas costs for curve addition precompile',\n      },\n      ecMul: {\n        v: 6000,\n        d: 'Gas costs for curve multiplication precompile',\n      },\n      ecPairing: {\n        v: 45000,\n        d: 'Base gas costs for curve pairing precompile',\n      },\n      ecPairingWord: {\n        v: 34000,\n        d: 'Gas costs regarding curve pairing precompile input length',\n      },\n      txDataNonZero: {\n        v: 16,\n        d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n      },\n      sstoreSentryGasEIP2200: {\n        v: 2300,\n        d: 'Minimum gas required to be present for an SSTORE call, not consumed',\n      },\n      sstoreNoopGasEIP2200: {\n        v: 800,\n        d: \"Once per SSTORE operation if the value doesn't change\",\n      },\n      sstoreDirtyGasEIP2200: {\n        v: 800,\n        d: 'Once per SSTORE operation if a dirty value is changed',\n      },\n      sstoreInitGasEIP2200: {\n        v: 20000,\n        d: 'Once per SSTORE operation from clean zero to non-zero',\n      },\n      sstoreInitRefundEIP2200: {\n        v: 19200,\n        d: 'Once per SSTORE operation for resetting to the original zero value',\n      },\n      sstoreCleanGasEIP2200: {\n        v: 5000,\n        d: 'Once per SSTORE operation from clean non-zero to something else',\n      },\n      sstoreCleanRefundEIP2200: {\n        v: 4200,\n        d: 'Once per SSTORE operation for resetting to the original non-zero value',\n      },\n      sstoreClearRefundEIP2200: {\n        v: 15000,\n        d: 'Once per SSTORE operation for clearing an originally existing storage slot',\n      },\n      balance: {\n        v: 700,\n        d: 'Base fee of the BALANCE opcode',\n      },\n      extcodehash: {\n        v: 700,\n        d: 'Base fee of the EXTCODEHASH opcode',\n      },\n      chainid: {\n        v: 2,\n        d: 'Base fee of the CHAINID opcode',\n      },\n      selfbalance: {\n        v: 5,\n        d: 'Base fee of the SELFBALANCE opcode',\n      },\n      sload: {\n        v: 800,\n        d: 'Base fee of the SLOAD opcode',\n      },\n    },\n  },\n  muirGlacier: {\n    name: 'muirGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://eips.ethereum.org/EIPS/eip-2384',\n    status: Status.Final,\n    pow: {\n      difficultyBombDelay: {\n        v: 9000000,\n        d: 'the amount of blocks to delay the difficulty bomb with',\n      },\n    },\n  },\n  berlin: {\n    name: 'berlin',\n    comment: 'HF targeted for July 2020 following the Muir Glacier HF',\n    url: 'https://eips.ethereum.org/EIPS/eip-2070',\n    status: Status.Final,\n    eips: [2565, 2929, 2718, 2930],\n  },\n  london: {\n    name: 'london',\n    comment: 'HF targeted for July 2021 following the Berlin fork',\n    url: 'https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md',\n    status: Status.Final,\n    eips: [1559, 3198, 3529, 3541],\n  },\n  arrowGlacier: {\n    name: 'arrowGlacier',\n    comment: 'HF to delay the difficulty bomb',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md',\n    status: Status.Final,\n    eips: [4345],\n  },\n  grayGlacier: {\n    name: 'grayGlacier',\n    comment: 'Delaying the difficulty bomb to Mid September 2022',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md',\n    status: Status.Final,\n    eips: [5133],\n  },\n  paris: {\n    name: 'paris',\n    comment: 'Hardfork to upgrade the consensus mechanism to Proof-of-Stake',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md',\n    status: Status.Final,\n    consensus: {\n      type: 'pos',\n      algorithm: 'casper',\n      casper: {},\n    },\n    eips: [3675, 4399],\n  },\n  mergeForkIdTransition: {\n    name: 'mergeForkIdTransition',\n    comment: 'Pre-merge hardfork to fork off non-upgraded clients',\n    url: 'https://eips.ethereum.org/EIPS/eip-3675',\n    status: Status.Final,\n    eips: [],\n  },\n  shanghai: {\n    name: 'shanghai',\n    comment:\n      'Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md',\n    status: Status.Final,\n    eips: [3651, 3855, 3860, 4895],\n  },\n  cancun: {\n    name: 'cancun',\n    comment:\n      'Next feature hardfork after shanghai, includes proto-danksharding EIP 4844 blobs (still WIP hence not for production use), transient storage opcodes, parent beacon block root availability in EVM, selfdestruct only in same transaction, and blob base fee opcode',\n    url: 'https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/cancun.md',\n    status: Status.Final,\n    eips: [1153, 4844, 4788, 5656, 6780, 7516],\n  },\n}\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums.js'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n    excessBlobGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n    excessBlobGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit,\n      difficulty,\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n      excessBlobGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.Cancun]: { name: 'cancunTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  for (const hf of params.hardforks) {\n    if (hf.timestamp === genesisTimestamp) {\n      hf.timestamp = 0\n    }\n  }\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Paris,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    const required = ['config', 'difficulty', 'gasLimit', 'nonce', 'alloc']\n    if (required.some((field) => !(field in json))) {\n      const missingField = required.filter((field) => !(field in json))\n      throw new Error(`Invalid format, expected geth genesis field \"${missingField}\" missing`)\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import {\n  BIGINT_0,\n  TypeOutput,\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  intToBytes,\n  toType,\n} from '@ethereumjs/util'\nimport { crc32 as crc } from 'crc'\nimport { EventEmitter } from 'events'\n\nimport { chains as CHAIN_SPECS } from './chains.js'\nimport { EIPs } from './eips.js'\nimport { Chain, CustomChain, Hardfork } from './enums.js'\nimport { hardforks as HARDFORK_SPECS } from './hardforks.js'\nimport { parseGethGenesis } from './utils.js'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums.js'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EIPConfig,\n  EIPOrHFConfig,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkByOpts,\n  HardforkConfig,\n  HardforkTransitionConfig,\n} from './types.js'\nimport type { BigIntLike, PrefixedHexString } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = string // keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n\ntype ParamsCacheConfig = Omit<EIPOrHFConfig, 'comment' | 'url' | 'status'>\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  protected _chainParams: ChainConfig\n  protected _hardfork: string | Hardfork\n  protected _eips: number[] = []\n  protected _customChains: ChainConfig[]\n\n  protected _paramsCache: ParamsCacheConfig = {}\n  protected _activatedEIPsCache: number[] = []\n\n  protected HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  public events: EventEmitter\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this.getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  protected static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this.getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    this.events = new EventEmitter()\n\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Shanghai\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n    if (Object.keys(this._paramsCache).length === 0) {\n      this._buildParamsCache()\n      this._buildActivatedEIPsCache()\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this._buildParamsCache()\n          this._buildActivatedEIPsCache()\n          this.events.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork either based on block numer (older HFs) or\n   * timestamp (Shanghai upwards).\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param Opts Block number, timestamp or TD (all optional)\n   * @returns The name of the HF\n   */\n  getHardforkBy(opts: HardforkByOpts): string {\n    let { blockNumber, timestamp, td } = opts\n\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.BigInt)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (blockNumber !== undefined &&\n          hf.block !== null &&\n          BigInt(hf.block) > (blockNumber as bigint)) ||\n        (timestamp !== undefined && hf.timestamp !== undefined && hf.timestamp > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) < td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp !== undefined) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce(\n          (acc: number, hf: HardforkTransitionConfig) => Math.max(Number(hf.timestamp ?? '0'), acc),\n          0\n        )\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkTransitionConfig) =>\n            Math.min(Number(hf.timestamp ?? timestamp), acc),\n          Number(timestamp)\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork either based on block numer (older HFs) or\n   * timestamp (Shanghai upwards).\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param Opts Block number, timestamp or TD (all optional)\n   * @returns The name of the HF set\n   */\n  setHardforkBy(opts: HardforkByOpts): string {\n    const hardfork = this.getHardforkBy(opts)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  protected _getHardfork(hardfork: string | Hardfork): HardforkTransitionConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork((EIPs as any)[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n    }\n    this._eips = eips\n    this._buildParamsCache()\n    this._buildActivatedEIPsCache()\n\n    for (const eip of eips) {\n      if ((EIPs as any)[eip].requiredEIPs !== undefined) {\n        for (const elem of (EIPs as any)[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Internal helper for _buildParamsCache()\n   */\n  protected _mergeWithParamsCache(params: HardforkConfig | EIPConfig) {\n    this._paramsCache['gasConfig'] = {\n      ...this._paramsCache['gasConfig'],\n      ...params['gasConfig'],\n    }\n    this._paramsCache['gasPrices'] = {\n      ...this._paramsCache['gasPrices'],\n      ...params['gasPrices'],\n    }\n    this._paramsCache['pow'] = {\n      ...this._paramsCache['pow'],\n      ...params['pow'],\n    }\n    this._paramsCache['sharding'] = {\n      ...this._paramsCache['sharding'],\n      ...params['sharding'],\n    }\n    this._paramsCache['vm'] = {\n      ...this._paramsCache['vm'],\n      ...params['vm'],\n    }\n  }\n\n  /**\n   * Build up a cache for all parameter values for the current HF and all activated EIPs\n   */\n  protected _buildParamsCache() {\n    this._paramsCache = {}\n    // Iterate through all hardforks up to hardfork set\n    const hardfork = this.hardfork()\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF config (e.g. for berlin)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs!) {\n          if (!(eip in EIPs)) {\n            throw new Error(`${eip} not supported`)\n          }\n\n          this._mergeWithParamsCache(EIPs[eip])\n        }\n        // Parameter-inlining HF config (e.g. for istanbul)\n      } else {\n        this._mergeWithParamsCache(hfChanges[1])\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    // Iterate through all additionally activated EIPs\n    for (const eip of this._eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n\n      this._mergeWithParamsCache(EIPs[eip])\n    }\n  }\n\n  protected _buildActivatedEIPsCache() {\n    this._activatedEIPsCache = []\n\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        this._activatedEIPsCache = this._activatedEIPsCache.concat(hf['eips'] as number[])\n      }\n    }\n    this._activatedEIPsCache = this._activatedEIPsCache.concat(this._eips)\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter is taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    if (\n      (this._paramsCache as any)[topic] !== undefined &&\n      (this._paramsCache as any)[topic][name] !== undefined\n    ) {\n      value = (this._paramsCache as any)[topic][name].v\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF config (e.g. for berlin)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs!) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF config (e.g. for istanbul)\n      } else {\n        if (\n          (hfChanges[1] as any)[topic] !== undefined &&\n          (hfChanges[1] as any)[topic][name] !== undefined\n        ) {\n          value = (hfChanges[1] as any)[topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = (EIPs as any)[eip]\n    if (!(topic in eipParams)) {\n      return undefined\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkBy({ blockNumber, td, timestamp })\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this._activatedEIPsCache.includes(eip)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BIGINT_0 && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if ((hf['eips'] as any).includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Paris) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Paris &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  protected _calcForkHash(hardfork: string | Hardfork, genesisHash: Uint8Array): PrefixedHexString {\n    let hfBytes = new Uint8Array(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Paris\n      ) {\n        const hfBlockBytes = hexToBytes('0x' + blockOrTime.toString(16).padStart(16, '0'))\n        hfBytes = concatBytes(hfBytes, hfBlockBytes)\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBytes = concatBytes(genesisHash, hfBytes)\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = bytesToHex(intToBytes(crc(inputBytes) >>> 0))\n    return forkhash\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Uint8Array): PrefixedHexString {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkTransitionConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkTransitionConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Uint8Array) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkTransitionConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the additionally activated EIPs\n   * (by using the `eips` constructor option)\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = (hfChanges[1] as any)['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']!['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        const config = hfChanges[1]\n        const algorithm = config['consensus']!['algorithm']\n        value = (config['consensus'] as any)[algorithm]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.events = new EventEmitter()\n    return copy\n  }\n\n  static getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { ...CHAIN_SPECS } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","import { bytesToBigInt, toBytes } from '@ethereumjs/util'\n\nimport type { FeeMarketEIP1559Transaction } from './eip1559Transaction.js'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction.js'\nimport type { BlobEIP4844Transaction } from './eip4844Transaction.js'\nimport type { LegacyTransaction } from './legacyTransaction.js'\nimport type { AccessList, AccessListBytes, Common, Hardfork } from '@ethereumjs/common'\nimport type { Address, AddressLike, BigIntLike, BytesLike } from '@ethereumjs/util'\nexport type {\n  AccessList,\n  AccessListBytes,\n  AccessListBytesItem,\n  AccessListItem,\n} from '@ethereumjs/common'\n\n/**\n * Can be used in conjunction with {@link Transaction[TransactionType].supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\nexport function isAccessListBytes(input: AccessListBytes | AccessList): input is AccessListBytes {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBytes | AccessList): input is AccessList {\n  return !isAccessListBytes(input) // This is exactly the same method, except the output is negated.\n}\n\nexport interface TransactionCache {\n  hash?: Uint8Array\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n  senderPubKey?: Uint8Array\n}\n\n/**\n * Encompassing type for all transaction types.\n */\nexport enum TransactionType {\n  Legacy = 0,\n  AccessListEIP2930 = 1,\n  FeeMarketEIP1559 = 2,\n  BlobEIP4844 = 3,\n}\n\nexport interface Transaction {\n  [TransactionType.Legacy]: LegacyTransaction\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559Transaction\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930Transaction\n  [TransactionType.BlobEIP4844]: BlobEIP4844Transaction\n}\n\nexport type TypedTransaction = Transaction[TransactionType]\n\nexport function isLegacyTx(tx: TypedTransaction): tx is LegacyTransaction {\n  return tx.type === TransactionType.Legacy\n}\n\nexport function isAccessListEIP2930Tx(tx: TypedTransaction): tx is AccessListEIP2930Transaction {\n  return tx.type === TransactionType.AccessListEIP2930\n}\n\nexport function isFeeMarketEIP1559Tx(tx: TypedTransaction): tx is FeeMarketEIP1559Transaction {\n  return tx.type === TransactionType.FeeMarketEIP1559\n}\n\nexport function isBlobEIP4844Tx(tx: TypedTransaction): tx is BlobEIP4844Transaction {\n  return tx.type === TransactionType.BlobEIP4844\n}\n\nexport interface TransactionInterface<T extends TransactionType = TransactionType> {\n  readonly common: Common\n  readonly nonce: bigint\n  readonly gasLimit: bigint\n  readonly to?: Address\n  readonly value: bigint\n  readonly data: Uint8Array\n  readonly v?: bigint\n  readonly r?: bigint\n  readonly s?: bigint\n  readonly cache: TransactionCache\n  supports(capability: Capability): boolean\n  type: TransactionType\n  getBaseFee(): bigint\n  getDataFee(): bigint\n  getUpfrontCost(): bigint\n  toCreationAddress(): boolean\n  raw(): TxValuesArray[T]\n  serialize(): Uint8Array\n  getMessageToSign(): Uint8Array | Uint8Array[]\n  getHashedMessageToSign(): Uint8Array\n  hash(): Uint8Array\n  getMessageToVerifySignature(): Uint8Array\n  getValidationErrors(): string[]\n  isSigned(): boolean\n  isValid(): boolean\n  verifySignature(): boolean\n  getSenderAddress(): Address\n  getSenderPublicKey(): Uint8Array\n  sign(privateKey: Uint8Array): Transaction[T]\n  toJSON(): JsonTx\n  errorStr(): string\n}\n\nexport interface LegacyTxInterface<T extends TransactionType = TransactionType>\n  extends TransactionInterface<T> {}\n\nexport interface EIP2718CompatibleTx<T extends TransactionType = TransactionType>\n  extends TransactionInterface<T> {\n  readonly chainId: bigint\n  getMessageToSign(): Uint8Array\n}\n\nexport interface EIP2930CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP2718CompatibleTx<T> {\n  readonly accessList: AccessListBytes\n  readonly AccessListJSON: AccessList\n}\n\nexport interface EIP1559CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP2930CompatibleTx<T> {\n  readonly maxPriorityFeePerGas: bigint\n  readonly maxFeePerGas: bigint\n}\n\nexport interface EIP4844CompatibleTx<T extends TransactionType = TransactionType>\n  extends EIP1559CompatibleTx<T> {\n  readonly maxFeePerBlobGas: bigint\n  blobVersionedHashes: Uint8Array[]\n  blobs?: Uint8Array[]\n  kzgCommitments?: Uint8Array[]\n  kzgProofs?: Uint8Array[]\n  serializeNetworkWrapper(): Uint8Array\n  numBlobs(): number\n}\n\nexport interface TxData {\n  [TransactionType.Legacy]: LegacyTxData\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930TxData\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559TxData\n  [TransactionType.BlobEIP4844]: BlobEIP4844TxData\n}\n\nexport type TypedTxData = TxData[TransactionType]\n\nexport function isLegacyTxData(txData: TypedTxData): txData is LegacyTxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.Legacy\n}\n\nexport function isAccessListEIP2930TxData(txData: TypedTxData): txData is AccessListEIP2930TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.AccessListEIP2930\n}\n\nexport function isFeeMarketEIP1559TxData(txData: TypedTxData): txData is FeeMarketEIP1559TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.FeeMarketEIP1559\n}\n\nexport function isBlobEIP4844TxData(txData: TypedTxData): txData is BlobEIP4844TxData {\n  const txType = Number(bytesToBigInt(toBytes(txData.type)))\n  return txType === TransactionType.BlobEIP4844\n}\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type LegacyTxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BytesLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends LegacyTxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBytes | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * {@link BlobEIP4844Transaction} data.\n */\nexport interface BlobEIP4844TxData extends FeeMarketEIP1559TxData {\n  /**\n   * The versioned hashes used to validate the blobs attached to a transaction\n   */\n  blobVersionedHashes?: BytesLike[]\n  /**\n   * The maximum fee per blob gas paid for the transaction\n   */\n  maxFeePerBlobGas?: BigIntLike\n  /**\n   * The blobs associated with a transaction\n   */\n  blobs?: BytesLike[]\n  /**\n   * The KZG commitments corresponding to the versioned hashes for each blob\n   */\n  kzgCommitments?: BytesLike[]\n  /**\n   * The KZG proofs associated with the transaction\n   */\n  kzgProofs?: BytesLike[]\n  /**\n   * An array of arbitrary strings that blobs are to be constructed from\n   */\n  blobsData?: string[]\n}\n\nexport interface TxValuesArray {\n  [TransactionType.Legacy]: LegacyTxValuesArray\n  [TransactionType.AccessListEIP2930]: AccessListEIP2930TxValuesArray\n  [TransactionType.FeeMarketEIP1559]: FeeMarketEIP1559TxValuesArray\n  [TransactionType.BlobEIP4844]: BlobEIP4844TxValuesArray\n}\n\n/**\n * Bytes values array for a legacy {@link Transaction}\n */\ntype LegacyTxValuesArray = Uint8Array[]\n\n/**\n * Bytes values array for an {@link AccessListEIP2930Transaction}\n */\ntype AccessListEIP2930TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\n/**\n * Bytes values array for a {@link FeeMarketEIP1559Transaction}\n */\ntype FeeMarketEIP1559TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\n/**\n * Bytes values array for a {@link BlobEIP4844Transaction}\n */\ntype BlobEIP4844TxValuesArray = [\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  AccessListBytes,\n  Uint8Array,\n  Uint8Array[],\n  Uint8Array?,\n  Uint8Array?,\n  Uint8Array?\n]\n\nexport type BlobEIP4844NetworkValuesArray = [\n  BlobEIP4844TxValuesArray,\n  Uint8Array[],\n  Uint8Array[],\n  Uint8Array[]\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerBlobGas?: string\n  blobVersionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerBlobGas?: string // QUANTITY - max data fee for blob transactions\n  blobVersionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n","import { bytesToHex, hexToBytes, setLengthLeft } from '@ethereumjs/util'\n\nimport { isAccessList } from './types.js'\n\nimport type { AccessList, AccessListBytes, AccessListItem, TransactionType } from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBytes | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBytes = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBytes = hexToBytes(item.address)\n        const storageItems: Uint8Array[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(hexToBytes(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBytes, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bytesToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bytesToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBytes) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = accessListItem[0]\n      const storageSlots = accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBytes) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: bytesToHex(setLengthLeft(item[0], 20)),\n        storageKeys: [],\n      }\n      const storageSlots: Uint8Array[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push(bytesToHex(setLengthLeft(storageSlot, 32)))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBytes, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n\nexport function txTypeBytes(txType: TransactionType): Uint8Array {\n  return hexToBytes('0x' + txType.toString(16).padStart(2, '0'))\n}\n","import { Chain, Common } from '@ethereumjs/common'\nimport {\n  Address,\n  BIGINT_0,\n  MAX_INTEGER,\n  MAX_UINT64,\n  bigIntToHex,\n  bytesToBigInt,\n  bytesToHex,\n  ecsign,\n  publicToAddress,\n  toBytes,\n  unpadBytes,\n} from '@ethereumjs/util'\n\nimport { Capability, TransactionType } from './types.js'\nimport { checkMaxInitCodeSize } from './util.js'\n\nimport type {\n  JsonTx,\n  Transaction,\n  TransactionCache,\n  TransactionInterface,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types.js'\nimport type { BigIntLike } from '@ethereumjs/util'\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<T extends TransactionType>\n  implements TransactionInterface<T>\n{\n  protected readonly _type: TransactionType\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Uint8Array\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  public cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n    senderPubKey: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  constructor(txData: TxData[T], opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bytesToBigInt(toBytes(type)))\n\n    this.txOptions = opts\n\n    const toB = toBytes(to === '' ? '0x' : to)\n    const vB = toBytes(v === '' ? '0x' : v)\n    const rB = toBytes(r === '' ? '0x' : r)\n    const sB = toBytes(s === '' ? '0x' : s)\n\n    this.nonce = bytesToBigInt(toBytes(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bytesToBigInt(toBytes(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bytesToBigInt(toBytes(value === '' ? '0x' : value))\n    this.data = toBytes(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bytesToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bytesToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bytesToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilities` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Validates the transaction signature and minimum gas requirements.\n   * @returns {string[]} an array of error strings\n   */\n  getValidationErrors(): string[] {\n    const errors = []\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    return errors\n  }\n\n  /**\n   * Validates the transaction signature and minimum gas requirements.\n   * @returns {boolean} true if the transaction is valid, false otherwise\n   */\n  isValid(): boolean {\n    const errors = this.getValidationErrors()\n\n    return errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BIGINT_0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.bytes.length === 0\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray[T]\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Uint8Array\n\n  // Returns the raw unsigned tx, which is used to sign the transaction.\n  abstract getMessageToSign(): Uint8Array | Uint8Array[]\n\n  // Returns the hashed unsigned tx, which is used to sign the transaction.\n  abstract getHashedMessageToSign(): Uint8Array\n\n  abstract hash(): Uint8Array\n\n  abstract getMessageToVerifySignature(): Uint8Array\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBytes(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Uint8Array\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Uint8Array): Transaction[T] {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === TransactionType.Legacy &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getHashedMessageToSign()\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    return {\n      type: bigIntToHex(BigInt(this.type)),\n      nonce: bigIntToHex(this.nonce),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: bytesToHex(this.data),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a T\n  protected abstract _processSignature(v: bigint, r: Uint8Array, s: Uint8Array): Transaction[T]\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bytesToBigInt(toBytes(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN })\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bytesToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import type { EIP1559CompatibleTx } from '../types.js'\n\nexport function getUpfrontCost(tx: EIP1559CompatibleTx, baseFee: bigint): bigint {\n  const prio = tx.maxPriorityFeePerGas\n  const maxBase = tx.maxFeePerGas - baseFee\n  const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n  const gasPrice = inclusionFeePerGas + baseFee\n  return tx.gasLimit * gasPrice + tx.value\n}\n","import { SECP256K1_ORDER_DIV_2, bigIntToUnpaddedBytes, ecrecover } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { BaseTransaction } from '../baseTransaction.js'\nimport { Capability } from '../types.js'\n\nimport type { LegacyTxInterface } from '../types.js'\n\nexport function errorMsg(tx: LegacyTxInterface, msg: string) {\n  return `${msg} (${tx.errorStr()})`\n}\n\nexport function isSigned(tx: LegacyTxInterface): boolean {\n  const { v, r, s } = tx\n  if (v === undefined || r === undefined || s === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx: LegacyTxInterface, extraCost?: bigint): bigint {\n  if (tx.cache.dataFee && tx.cache.dataFee.hardfork === tx.common.hardfork()) {\n    return tx.cache.dataFee.value\n  }\n\n  const cost = BaseTransaction.prototype.getDataFee.bind(tx)() + (extraCost ?? 0n)\n\n  if (Object.isFrozen(tx)) {\n    tx.cache.dataFee = {\n      value: cost,\n      hardfork: tx.common.hardfork(),\n    }\n  }\n\n  return cost\n}\n\nexport function hash(tx: LegacyTxInterface): Uint8Array {\n  if (!tx.isSigned()) {\n    const msg = errorMsg(tx, 'Cannot call hash method if transaction is not signed')\n    throw new Error(msg)\n  }\n\n  if (Object.isFrozen(tx)) {\n    if (!tx.cache.hash) {\n      tx.cache.hash = keccak256(tx.serialize())\n    }\n    return tx.cache.hash\n  }\n\n  return keccak256(tx.serialize())\n}\n\n/**\n * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n * Reasoning: https://ethereum.stackexchange.com/a/55728\n */\nexport function validateHighS(tx: LegacyTxInterface): void {\n  const { s } = tx\n  if (tx.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n    const msg = errorMsg(\n      tx,\n      'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n    )\n    throw new Error(msg)\n  }\n}\n\nexport function getSenderPublicKey(tx: LegacyTxInterface): Uint8Array {\n  if (tx.cache.senderPubKey !== undefined) {\n    return tx.cache.senderPubKey\n  }\n\n  const msgHash = tx.getMessageToVerifySignature()\n\n  const { v, r, s } = tx\n\n  validateHighS(tx)\n\n  try {\n    const sender = ecrecover(\n      msgHash,\n      v!,\n      bigIntToUnpaddedBytes(r!),\n      bigIntToUnpaddedBytes(s!),\n      tx.supports(Capability.EIP155ReplayProtection) ? tx.common.chainId() : undefined\n    )\n    if (Object.isFrozen(tx)) {\n      tx.cache.senderPubKey = sender\n    }\n    return sender\n  } catch (e: any) {\n    const msg = errorMsg(tx, 'Invalid Signature')\n    throw new Error(msg)\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport { BIGINT_0, BIGINT_1, concatBytes } from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { txTypeBytes } from '../util.js'\n\nimport { errorMsg } from './legacy.js'\n\nimport type { EIP2718CompatibleTx } from '../types'\nimport type { Input } from '@ethereumjs/rlp'\n\nexport function getHashedMessageToSign(tx: EIP2718CompatibleTx): Uint8Array {\n  return keccak256(tx.getMessageToSign())\n}\n\nexport function serialize(tx: EIP2718CompatibleTx, base?: Input): Uint8Array {\n  return concatBytes(txTypeBytes(tx.type), RLP.encode(base ?? tx.raw()))\n}\n\nexport function validateYParity(tx: EIP2718CompatibleTx) {\n  const { v } = tx\n  if (v !== undefined && v !== BIGINT_0 && v !== BIGINT_1) {\n    const msg = errorMsg(tx, 'The y-parity of the transaction should either be 0 or 1')\n    throw new Error(msg)\n  }\n}\n","import { AccessLists } from '../util.js'\n\nimport * as Legacy from './legacy.js'\n\nimport type { EIP2930CompatibleTx } from '../types.js'\n\n/**\n * The amount of gas paid for the data in this tx\n */\nexport function getDataFee(tx: EIP2930CompatibleTx): bigint {\n  return Legacy.getDataFee(tx, BigInt(AccessLists.getDataFeeEIP2930(tx.accessList, tx.common)))\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP1559 from './capabilities/eip1559.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.FeeMarketEIP1559]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.FeeMarketEIP1559]\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<TransactionType.FeeMarketEIP1559> {\n  // implements EIP1559CompatibleTx<TransactionType.FeeMarketEIP1559>\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.FeeMarketEIP1559)) ===\n      false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${\n          TransactionType.FeeMarketEIP1559\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(serialized.subarray(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.FeeMarketEIP1559 }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bytesToBigInt(\n      toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BIGINT_0): bigint {\n    return EIP1559.getUpfrontCost(this, baseFee)\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBytes(this.maxFeePerGas),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 9))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      accessList: accessListJSON,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  bytesToHex,\n  equalsBytes,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.AccessListEIP2930]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.AccessListEIP2930]\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<TransactionType.AccessListEIP2930> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.AccessListEIP2930)) ===\n      false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${\n          TransactionType.AccessListEIP2930\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(Uint8Array.from(serialized.subarray(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.AccessListEIP2930 }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bytesToBigInt(toBytes(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytess of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 8))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      gasPrice: bigIntToHex(this.gasPrice),\n      accessList: accessListJSON,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","/** EIP4844 constants */\n\nexport const MAX_CALLDATA_SIZE = 16777216 // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216 // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216 // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 16777216 // 2 ** 24\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216 // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096 // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_0,\n  BIGINT_27,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  blobsToCommitments,\n  blobsToProofs,\n  bytesToBigInt,\n  bytesToHex,\n  commitmentsToVersionedHashes,\n  computeVersionedHash,\n  equalsBytes,\n  getBlobs,\n  kzg,\n  toBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as EIP1559 from './capabilities/eip1559.js'\nimport * as EIP2718 from './capabilities/eip2718.js'\nimport * as EIP2930 from './capabilities/eip2930.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { LIMIT_BLOBS_PER_TX } from './constants.js'\nimport { TransactionType } from './types.js'\nimport { AccessLists, txTypeBytes } from './util.js'\n\nimport type {\n  AccessList,\n  AccessListBytes,\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  BlobEIP4844NetworkValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.BlobEIP4844]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.BlobEIP4844]\n\nconst validateBlobTransactionNetworkWrapper = (\n  blobVersionedHashes: Uint8Array[],\n  blobs: Uint8Array[],\n  commitments: Uint8Array[],\n  kzgProofs: Uint8Array[],\n  version: number\n) => {\n  if (!(blobVersionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n    throw new Error('Number of blobVersionedHashes, blobs, and commitments not all equal')\n  }\n  if (blobVersionedHashes.length === 0) {\n    throw new Error('Invalid transaction with empty blobs')\n  }\n\n  let isValid\n  try {\n    isValid = kzg.verifyBlobKzgProofBatch(blobs, commitments, kzgProofs)\n  } catch (error) {\n    throw new Error(`KZG verification of blobs fail with error=${error}`)\n  }\n  if (!isValid) {\n    throw new Error('KZG proof cannot be verified from blobs/commitments')\n  }\n\n  for (let x = 0; x < blobVersionedHashes.length; x++) {\n    const computedVersionedHash = computeVersionedHash(commitments[x], version)\n    if (!equalsBytes(computedVersionedHash, blobVersionedHashes[x])) {\n      throw new Error(`commitment for blob at index ${x} does not match versionedHash`)\n    }\n  }\n}\n\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 3\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction<TransactionType.BlobEIP4844> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBytes\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n  public readonly maxFeePerBlobGas: bigint\n\n  public readonly common: Common\n  public blobVersionedHashes: Uint8Array[]\n  blobs?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgCommitments?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgProofs?: Uint8Array[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static constructors or factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.BlobEIP4844 }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerBlobGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n\n    if (this.common.isActivatedEIP(4844) === false) {\n      throw new Error('EIP-4844 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bytesToBigInt(toBytes(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bytesToBigInt(\n      toBytes(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this.maxFeePerBlobGas = bytesToBigInt(\n      toBytes((maxFeePerBlobGas ?? '') === '' ? '0x' : maxFeePerBlobGas)\n    )\n\n    this.blobVersionedHashes = (txData.blobVersionedHashes ?? []).map((vh) => toBytes(vh))\n    EIP2718.validateYParity(this)\n    Legacy.validateHighS(this)\n\n    for (const hash of this.blobVersionedHashes) {\n      if (hash.length !== 32) {\n        const msg = this._errorMsg('versioned hash is invalid length')\n        throw new Error(msg)\n      }\n      if (BigInt(hash[0]) !== this.common.param('sharding', 'blobCommitmentVersionKzg')) {\n        const msg = this._errorMsg('versioned hash does not start with KZG commitment version')\n        throw new Error(msg)\n      }\n    }\n    if (this.blobVersionedHashes.length > LIMIT_BLOBS_PER_TX) {\n      const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`)\n      throw new Error(msg)\n    }\n\n    this.blobs = txData.blobs?.map((blob) => toBytes(blob))\n    this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBytes(commitment))\n    this.kzgProofs = txData.kzgProofs?.map((proof) => toBytes(proof))\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  public static fromTxData(txData: TxData, opts?: TxOptions) {\n    if (txData.blobsData !== undefined) {\n      if (txData.blobs !== undefined) {\n        throw new Error('cannot have both raw blobs data and encoded blobs in constructor')\n      }\n      if (txData.kzgCommitments !== undefined) {\n        throw new Error('cannot have both raw blobs data and KZG commitments in constructor')\n      }\n      if (txData.blobVersionedHashes !== undefined) {\n        throw new Error('cannot have both raw blobs data and versioned hashes in constructor')\n      }\n      if (txData.kzgProofs !== undefined) {\n        throw new Error('cannot have both raw blobs data and KZG proofs in constructor')\n      }\n      txData.blobs = getBlobs(txData.blobsData.reduce((acc, cur) => acc + cur))\n      txData.kzgCommitments = blobsToCommitments(txData.blobs as Uint8Array[])\n      txData.blobVersionedHashes = commitmentsToVersionedHashes(\n        txData.kzgCommitments as Uint8Array[]\n      )\n      txData.kzgProofs = blobsToProofs(\n        txData.blobs as Uint8Array[],\n        txData.kzgCommitments as Uint8Array[]\n      )\n    }\n\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates the minimal representation of a blob transaction from the network wrapper version.\n   * The minimal representation is used when adding transactions to an execution payload/block\n   * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n   * @param opts - dictionary of {@link TxOptions}\n   * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n   */\n  public static minimalFromNetworkWrapper(\n    txData: BlobEIP4844Transaction,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    const tx = BlobEIP4844Transaction.fromTxData(\n      {\n        ...txData,\n        ...{ blobs: undefined, kzgCommitments: undefined, kzgProofs: undefined },\n      },\n      opts\n    )\n    return tx\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x03 || rlp([chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${\n          TransactionType.BlobEIP4844\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    const values = RLP.decode(serialized.subarray(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return BlobEIP4844Transaction.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 11 && values.length !== 14) {\n      throw new Error(\n        'Invalid EIP-4844 transaction. Only expecting 11 values (for unsigned tx) or 14 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      maxFeePerBlobGas,\n      blobVersionedHashes,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      value,\n      maxFeePerBlobGas,\n      v,\n      r,\n      s,\n    })\n\n    return new BlobEIP4844Transaction(\n      {\n        chainId: bytesToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        maxFeePerBlobGas,\n        blobVersionedHashes,\n        v: v !== undefined ? bytesToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Uint8Array)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n   * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   */\n\n  public static fromSerializedBlobTxNetworkWrapper(\n    serialized: Uint8Array,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    if (!opts || !opts.common) {\n      throw new Error('common instance required to validate versioned hashes')\n    }\n\n    if (\n      equalsBytes(serialized.subarray(0, 1), txTypeBytes(TransactionType.BlobEIP4844)) === false\n    ) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-4844 transaction (wrong tx type, expected: ${\n          TransactionType.BlobEIP4844\n        }, received: ${bytesToHex(serialized.subarray(0, 1))}`\n      )\n    }\n\n    // Validate network wrapper\n    const networkTxValues = RLP.decode(serialized.subarray(1))\n    if (networkTxValues.length !== 4) {\n      throw Error(`Expected 4 values in the deserialized network transaction`)\n    }\n    const [txValues, blobs, kzgCommitments, kzgProofs] =\n      networkTxValues as BlobEIP4844NetworkValuesArray\n\n    // Construct the tx but don't freeze yet, we will assign blobs etc once validated\n    const decodedTx = BlobEIP4844Transaction.fromValuesArray(txValues, { ...opts, freeze: false })\n    if (decodedTx.to === undefined) {\n      throw Error('BlobEIP4844Transaction can not be send without a valid `to`')\n    }\n\n    const version = Number(opts.common.param('sharding', 'blobCommitmentVersionKzg'))\n    validateBlobTransactionNetworkWrapper(\n      decodedTx.blobVersionedHashes,\n      blobs,\n      kzgCommitments,\n      kzgProofs,\n      version\n    )\n\n    // set the network blob data on the tx\n    decodedTx.blobs = blobs\n    decodedTx.kzgCommitments = kzgCommitments\n    decodedTx.kzgProofs = kzgProofs\n\n    // freeze the tx\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(decodedTx)\n    }\n\n    return decodedTx\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return EIP2930.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BIGINT_0): bigint {\n    return EIP1559.getUpfrontCost(this, baseFee)\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the EIP-4844 transaction, in order.\n   *\n   * Format: [chain_id, nonce, max_priority_fee_per_gas, max_fee_per_gas, gas_limit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s]`.\n   *\n   * Use {@link BlobEIP4844Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Bytes values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BlobEIP4844Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.chainId),\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBytes(this.maxFeePerGas),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.accessList,\n      bigIntToUnpaddedBytes(this.maxFeePerBlobGas),\n      this.blobVersionedHashes,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-4844 transaction.\n   *\n   * Format: `0x03 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * access_list, max_fee_per_data_gas, blob_versioned_hashes, y_parity, r, s])`.\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Uint8Array {\n    return EIP2718.serialize(this)\n  }\n\n  /**\n   * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n   */\n  serializeNetworkWrapper(): Uint8Array {\n    if (\n      this.blobs === undefined ||\n      this.kzgCommitments === undefined ||\n      this.kzgProofs === undefined\n    ) {\n      throw new Error(\n        'cannot serialize network wrapper without blobs, KZG commitments and KZG proofs provided'\n      )\n    }\n\n    return EIP2718.serialize(this, [this.raw(), this.blobs, this.kzgCommitments, this.kzgProofs])\n  }\n\n  /**\n   * Returns the raw serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign() // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array {\n    return EIP2718.serialize(this, this.raw().slice(0, 11))\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   */\n  getHashedMessageToSign(): Uint8Array {\n    return EIP2718.getHashedMessageToSign(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link BlobEIP4844Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  getMessageToVerifySignature(): Uint8Array {\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    const baseJson = super.toJSON()\n\n    return {\n      ...baseJson,\n      chainId: bigIntToHex(this.chainId),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      accessList: accessListJSON,\n      maxFeePerBlobGas: bigIntToHex(this.maxFeePerBlobGas),\n      blobVersionedHashes: this.blobVersionedHashes.map((hash) => bytesToHex(hash)),\n    }\n  }\n\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array): BlobEIP4844Transaction {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return BlobEIP4844Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BIGINT_27, // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n        maxFeePerBlobGas: this.maxFeePerBlobGas,\n        blobVersionedHashes: this.blobVersionedHashes,\n        blobs: this.blobs,\n        kzgCommitments: this.kzgCommitments,\n        kzgProofs: this.kzgProofs,\n      },\n      opts\n    )\n  }\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n\n  /**\n   * @returns the number of blobs included with this transaction\n   */\n  public numBlobs(): number {\n    return this.blobVersionedHashes.length\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  BIGINT_2,\n  BIGINT_8,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBytes,\n  bytesToBigInt,\n  toBytes,\n  unpadBytes,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak.js'\n\nimport { BaseTransaction } from './baseTransaction.js'\nimport * as Legacy from './capabilities/legacy.js'\nimport { Capability, TransactionType } from './types.js'\n\nimport type {\n  TxData as AllTypesTxData,\n  TxValuesArray as AllTypesTxValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types.js'\nimport type { Common } from '@ethereumjs/common'\n\ntype TxData = AllTypesTxData[TransactionType.Legacy]\ntype TxValuesArray = AllTypesTxValuesArray[TransactionType.Legacy]\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class LegacyTransaction extends BaseTransaction<TransactionType.Legacy> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new LegacyTransaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Uint8Array, opts: TxOptions = {}) {\n    const values = RLP.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values as TxValuesArray, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Uint8Arrays, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new LegacyTransaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TransactionType.Legacy }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bytesToBigInt(toBytes(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Uint8Array Array of the raw Bytes of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Bytes values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBytes(this.v) : new Uint8Array(0),\n      this.r !== undefined ? bigIntToUnpaddedBytes(this.r) : new Uint8Array(0),\n      this.s !== undefined ? bigIntToUnpaddedBytes(this.s) : new Uint8Array(0),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Uint8Array values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Uint8Array {\n    return RLP.encode(this.raw())\n  }\n\n  /**\n   * Returns the raw unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign()\n   * const serializedMessage = RLP.encode(message)) // use this for the HW wallet input\n   * ```\n   */\n  getMessageToSign(): Uint8Array[] {\n    const message = [\n      bigIntToUnpaddedBytes(this.nonce),\n      bigIntToUnpaddedBytes(this.gasPrice),\n      bigIntToUnpaddedBytes(this.gasLimit),\n      this.to !== undefined ? this.to.bytes : new Uint8Array(0),\n      bigIntToUnpaddedBytes(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      message.push(bigIntToUnpaddedBytes(this.common.chainId()))\n      message.push(unpadBytes(toBytes(0)))\n      message.push(unpadBytes(toBytes(0)))\n    }\n\n    return message\n  }\n\n  /**\n   * Returns the hashed serialized unsigned tx, which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   */\n  getHashedMessageToSign() {\n    const message = this.getMessageToSign()\n    return keccak256(RLP.encode(message))\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    return Legacy.getDataFee(this)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Uint8Array {\n    return Legacy.hash(this)\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    return this.getHashedMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Uint8Array {\n    return Legacy.getSenderPublicKey(this)\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Uint8Array, s: Uint8Array) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BIGINT_2 + BIGINT_8\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return LegacyTransaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bytesToBigInt(r),\n        s: bytesToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    const baseJson = super.toJSON()\n    return {\n      ...baseJson,\n      gasPrice: bigIntToHex(this.gasPrice),\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  protected _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BIGINT_2\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return Legacy.errorMsg(this, msg)\n  }\n}\n","import { fetchFromProvider, getProvider } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction.js'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction.js'\nimport { BlobEIP4844Transaction } from './eip4844Transaction.js'\nimport { normalizeTxParams } from './fromRpc.js'\nimport { LegacyTransaction } from './legacyTransaction.js'\nimport {\n  TransactionType,\n  isAccessListEIP2930TxData,\n  isBlobEIP4844TxData,\n  isFeeMarketEIP1559TxData,\n  isLegacyTxData,\n} from './types.js'\n\nimport type { Transaction, TxData, TxOptions, TypedTxData } from './types.js'\nimport type { EthersProvider } from '@ethereumjs/util'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData<T extends TransactionType>(\n    txData: TypedTxData,\n    txOptions: TxOptions = {}\n  ): Transaction[T] {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return LegacyTransaction.fromTxData(txData, txOptions) as Transaction[T]\n    } else {\n      if (isLegacyTxData(txData)) {\n        return LegacyTransaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isAccessListEIP2930TxData(txData)) {\n        return AccessListEIP2930Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isFeeMarketEIP1559TxData(txData)) {\n        return FeeMarketEIP1559Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else if (isBlobEIP4844TxData(txData)) {\n        return BlobEIP4844Transaction.fromTxData(txData, txOptions) as Transaction[T]\n      } else {\n        throw new Error(`Tx instantiation with type ${(txData as TypedTxData)?.type} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Uint8Array\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData<T extends TransactionType>(\n    data: Uint8Array,\n    txOptions: TxOptions = {}\n  ): Transaction[T] {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case TransactionType.AccessListEIP2930:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        case TransactionType.FeeMarketEIP1559:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        case TransactionType.BlobEIP4844:\n          return BlobEIP4844Transaction.fromSerializedTx(data, txOptions) as Transaction[T]\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return LegacyTransaction.fromSerializedTx(data, txOptions) as Transaction[T]\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Uint8Array (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Uint8Array[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Uint8Array or Uint8Array[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Uint8Array | Uint8Array[], txOptions: TxOptions = {}) {\n    if (data instanceof Uint8Array) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return LegacyTransaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - a url string for a JSON-RPC provider or an Ethers JsonRPCProvider object\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromJsonRpcProvider(\n    provider: string | EthersProvider,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPC(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPC<T extends TransactionType>(\n    txData: TxData[T],\n    txOptions: TxOptions = {}\n  ): Promise<Transaction[T]> {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n","import { TypeOutput, setLengthLeft, toBytes, toType } from '@ethereumjs/util'\n\nimport type { TypedTxData } from './types.js'\n\nexport const normalizeTxParams = (_txParams: any): TypedTxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBytes(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x' || txParams.r !== '0x' || txParams.s !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport type { SpanContext, TransactionContext } from \"@sentry/types\";\nimport merge from \"lodash.merge\";\nimport logLevel, { levels, LogLevelDesc } from \"loglevel\";\n\nconst log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\n\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n  logTracingHeader?: boolean;\n}\n\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\ninterface Sentry {\n  startTransaction(_: TransactionContext): {\n    startChild(a: SpanContext): {\n      finish(): void;\n    };\n    finish(): void;\n  };\n}\n\nlet sentry: Sentry | null = null;\nconst tracingOrigins: string[] = [];\nconst tracingPaths: string[] = [];\n\nexport function enableSentryTracing(_sentry: Sentry, _tracingOrigins: string[], _tracingPaths: string[]) {\n  sentry = _sentry;\n  tracingOrigins.push(..._tracingOrigins);\n  tracingPaths.push(..._tracingPaths);\n}\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n\n// #endregion\n\nexport function setLogLevel(level: LogLevelDesc) {\n  log.setLevel(level);\n}\n\nasync function fetchAndTrace(url: string, init: RequestInit): Promise<Response> {\n  let _url: URL | null = null;\n  try {\n    _url = new URL(url);\n  } catch (error) {}\n  if (sentry && _url && (tracingOrigins.includes(_url.origin) || tracingPaths.includes(_url.pathname))) {\n    const transaction = sentry.startTransaction({\n      name: url,\n    });\n    const span = transaction.startChild({\n      op: \"http\",\n    }); // This function returns a Span\n\n    const response = await fetch(url, init);\n    span.finish(); // Remember that only finished spans will be sent with the transaction\n\n    transaction.finish(); // Finishing the transaction will send it to Sentry\n\n    return response;\n  }\n\n  return fetch(url, init);\n}\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers: Record<string, string> = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response: Response) {\n  log.info(`Response: ${response.status} ${response.statusText}`);\n  log.info(`Url: ${response.url}`);\n}\n\nfunction logTracingHeader(response: Response) {\n  log.info(`Request tracing with traceID=${response.headers.get(\"x-web3-correlation-id\")}`);\n}\n\nexport const promiseTimeout = async <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  let timeoutFunc: ReturnType<typeof setTimeout> | null = null;\n  try {\n    const timeout = new Promise<T>((_resolve, reject) => {\n      timeoutFunc = setTimeout(() => {\n        reject(new Error(`Timed out in ${ms}ms`));\n      }, ms);\n    });\n\n    const result = await Promise.race<T>([promise, timeout]);\n    // promise.race will return the first resolved promise\n    // then we clear the timeout\n    if (timeoutFunc != null) {\n      clearTimeout(timeoutFunc);\n    }\n    return result;\n  } catch (err) {\n    // clear the timeout\n    if (timeoutFunc != null) {\n      clearTimeout(timeoutFunc);\n    }\n    // rethrow the original error\n    throw err;\n  }\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetchAndTrace(url, options).then((response) => {\n      if (customOptions.logTracingHeader) {\n        logTracingHeader(response);\n      }\n      if (response.ok) {\n        const responseContentType = response.headers.get(\"content-type\");\n        if (responseContentType?.includes(\"application/json\")) {\n          return response.json() as Promise<T>;\n        }\n        return response.text() as Promise<T>;\n      }\n      debugLogResponse(response);\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const put = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PUT\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetchAndTrace(url, options);\n  if (response.ok) {\n    const responseContentType = response.headers.get(\"content-type\");\n    if (responseContentType?.includes(\"application/json\")) {\n      return response.json() as Promise<T>;\n    }\n    return response.text() as Promise<T>;\n  }\n  debugLogResponse(response);\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((_resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw rpcErrors.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const txParams: TransactionParams =\n      (req.params as TransactionParams[])[0] ||\n      ({\n        from: \"\",\n      } as TransactionParams);\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const txParams: TransactionParams =\n      (req.params as TransactionParams[])[0] ||\n      ({\n        from: \"\",\n      } as TransactionParams);\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as { warning: string }).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw rpcErrors.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw rpcErrors.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import { rpcErrors } from \"@metamask/rpc-errors\";\nimport {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }) as JRPCMiddleware<unknown, unknown>,\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw rpcErrors.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw rpcErrors.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw rpcErrors.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw rpcErrors.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw rpcErrors.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain) as JRPCMiddleware<unknown, unknown>,\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain) as JRPCMiddleware<unknown, unknown>,\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw rpcErrors.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount) as JRPCMiddleware<unknown, unknown>,\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  Block,\n  JRPCEngineEndCallback,\n  JRPCEngineNextCallback,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, string> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, CustomChainConfig> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<string[], Block>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([\n    createChainIdMiddleware(chainId) as JRPCMiddleware<unknown, unknown>,\n    createProviderConfigMiddleware(providerConfig) as JRPCMiddleware<unknown, unknown>,\n    fetchMiddleware as JRPCMiddleware<unknown, unknown>,\n  ]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { ISignClient, SessionTypes } from \"@walletconnect/types\";\nimport { getAccountsFromNamespaces, parseAccountId } from \"@walletconnect/utils\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nasync function getLastActiveSession(signClient: ISignClient): Promise<SessionTypes.Struct | null> {\n  if (signClient.session.length) {\n    const lastKeyIndex = signClient.session.keys.length - 1;\n    return signClient.session.get(signClient.session.keys[lastKeyIndex]);\n  }\n  return null;\n}\n\nexport async function sendJrpcRequest<T, U>(signClient: ISignClient, chainId: number, method: string, params: U): Promise<T> {\n  const session = await getLastActiveSession(signClient);\n  if (!session) {\n    throw providerErrors.disconnected();\n  }\n  return signClient.request<T>({\n    topic: session.topic,\n    chainId: `eip155:${chainId}`,\n    request: {\n      method,\n      params,\n    },\n  });\n}\n\nexport async function getAccounts(signClient: ISignClient): Promise<string[]> {\n  const session = await getLastActiveSession(signClient);\n  if (!session) {\n    throw providerErrors.disconnected();\n  }\n  const accounts = getAccountsFromNamespaces(session.namespaces);\n  if (accounts && accounts.length) {\n    return [\n      ...new Set(\n        accounts.map((add) => {\n          return parseAccountId(add).address;\n        })\n      ),\n    ];\n  }\n  throw new Error(\"Failed to get accounts\");\n}\n\nexport function getProviderHandlers({ connector, chainId }: { connector: ISignClient; chainId: number }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw rpcErrors.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      return getAccounts(connector);\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, TransactionParams[]>(connector, chainId, \"eth_sendTransaction\", [txParams]);\n      return methodRes;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, TransactionParams[]>(connector, chainId, \"eth_signTransaction\", [txParams]);\n      return methodRes;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, string[]>(connector, chainId, \"eth_sign\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, string[]>(connector, chainId, \"personal_sign\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData\", [msgParams.data, msgParams.from]);\n      return methodRes;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData_v3\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const methodRes = await sendJrpcRequest<string, unknown[]>(connector, chainId, \"eth_signTypedData_v4\", [msgParams.from, msgParams.data]);\n      return methodRes;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw rpcErrors.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw rpcErrors.methodNotSupported();\n    },\n  };\n}\n","import { providerErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { ISignClient, SignClientTypes } from \"@walletconnect/types\";\nimport { getAccountsFromNamespaces, getChainsFromNamespaces, parseAccountId, parseChainId } from \"@walletconnect/utils\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, log, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getAccounts, getProviderHandlers } from \"./walletConnectV2Utils\";\n\nexport interface WalletConnectV2ProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectV2ProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectV2Provider extends BaseProvider<BaseProviderConfig, WalletConnectV2ProviderState, ISignClient> {\n  private connector: ISignClient | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectV2ProviderConfig; state?: BaseProviderState; connector?: ISignClient }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: ISignClient;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectV2Provider> => {\n    const providerFactory = new WalletConnectV2Provider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw providerErrors.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: ISignClient): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId }: { chainId: string }): Promise<void> {\n    if (!this.connector)\n      throw providerErrors.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.configure({ chainConfig: currentChainConfig });\n    await this.setupEngine(this.connector);\n    this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    super.addChain(chainConfig);\n  }\n\n  // no need to implement this method in wallet connect v2.\n  protected async lookupNetwork(_: ISignClient): Promise<string> {\n    const newChainId = this.config.chainConfig.chainId;\n    this.update({ chainId: newChainId });\n    this.emit(\"chainChanged\", newChainId);\n    this.emit(\"connect\", { chainId: newChainId });\n    return this.config.chainConfig.chainId;\n  }\n\n  private async setupEngine(connector: ISignClient): Promise<void> {\n    const { chainId } = this.config.chainConfig;\n    const numChainId = parseInt(chainId, 16);\n    const providerHandlers = getProviderHandlers({ connector, chainId: numChainId });\n    const jrpcRes = await getAccounts(connector);\n\n    this.update({\n      accounts: jrpcRes || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.EIP155,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private connectedTopic() {\n    if (!this.connector) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (this.connector?.session?.length) {\n      // currently we are supporting only 1 active session\n      const lastKeyIndex = this.connector.session.keys.length - 1;\n      return this.connector.session.get(this.connector.session.keys[lastKeyIndex])?.topic;\n    }\n    return undefined;\n  }\n\n  private checkIfChainIdAllowed(chainId: string) {\n    if (!this.connector || !this.connectedTopic()) return false;\n    const sessionData = this.connector.session.get(this.connectedTopic());\n    const allChains = getChainsFromNamespaces(sessionData.namespaces);\n\n    let chainAllowed = false;\n    for (const chain of allChains) {\n      const parsedId = parseChainId(chain);\n      if (Number.parseInt(parsedId.reference, 10) === Number.parseInt(chainId, 10)) {\n        chainAllowed = true;\n        break;\n      }\n    }\n    return chainAllowed;\n  }\n\n  private checkIfAccountAllowed(address: string) {\n    if (!this.connector || !this.connectedTopic()) return false;\n    const sessionData = this.connector.session.get(this.connectedTopic());\n    const allAccounts = getAccountsFromNamespaces(sessionData.namespaces);\n    let accountAllowed = false;\n    for (const account of allAccounts) {\n      const parsedAccount = parseAccountId(account);\n      if (parsedAccount.address?.toLowerCase() === address?.toLowerCase()) {\n        accountAllowed = true;\n        break;\n      }\n    }\n    return accountAllowed;\n  }\n\n  private async onConnectorStateUpdate(connector: ISignClient) {\n    connector.events.on(\"session_event\", async (payload: SignClientTypes.EventArguments[\"session_event\"]) => {\n      log.debug(\"session_event data\", payload);\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      const { event } = payload.params;\n      const { name, data } = event || {};\n      // Check if accounts changed and trigger event\n      if (name === \"accountsChanged\" && data?.length && this.state.accounts[0] !== data[0] && this.checkIfAccountAllowed(data[0])) {\n        this.update({\n          accounts: data,\n        });\n        this.emit(\"accountsChanged\", data);\n      }\n\n      if (event.name === \"chainChanged\") {\n        const { chainId: connectedChainId, rpcUrl } = data;\n        const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n\n        if (!this.checkIfChainIdAllowed(connectedHexChainId)) return;\n        // Check if chainId changed and trigger event\n        if (connectedHexChainId && this.state.chainId !== connectedHexChainId) {\n          const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedHexChainId) || {};\n          // Handle rpcUrl update\n          this.configure({\n            chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n          });\n          await this.setupEngine(connector);\n        }\n      }\n    });\n  }\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string | BigNumber {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport {\n  MessageTypeProperty,\n  SignTypedDataVersion,\n  TYPED_MESSAGE_SCHEMA,\n  TypedDataV1Field,\n  TypedMessage,\n  typedSignatureHash,\n} from \"@metamask/eth-sig-util\";\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, EthereumGasFeeEstimates, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex).toString();\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EthereumGasFeeEstimates> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates: EthereumGasFeeEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data: unknown = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4: {\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        const typedData = data as TypedMessage<{\n          EIP712Domain: MessageTypeProperty[];\n        }>;\n\n        assert.ok(typedData.primaryType in typedData.types, `Primary type of \"${typedData.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(typedData, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = typedData.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      }\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw rpcErrors.invalidInput({\n      message: (error as Error)?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { providerErrors } from \"@metamask/rpc-errors\";\nimport { signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return Buffer.from(signedTx);\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${Buffer.from(privateToAddress(Buffer.from(privKey, \"hex\"))).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      if (txParams.input && !txParams.data) txParams.data = txParams.input;\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<[string], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      if (txParams.input && !txParams.data) txParams.data = txParams.input;\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw providerErrors.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<never, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a: string | number, b: string | number) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, AddressLike, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport BigNumber from \"bignumber.js\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, EthereumGasFeeEstimates, FallbackGasData, FeeHistoryResponse, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  // https://0x.org/docs/introduction/0x-cheat-sheet#swap-api-endpoints\n  readonly API_SUPPORTED_CHAINIDS = new Set([\"0x1\", \"0x5\", \"0x13881\", \"0xa4b1\", \"0xa86a\", \"0x2105\", \"0x38\", \"0xfa\", \"0xa\", \"0x89\"]);\n\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<never, CustomChainConfig>({ method: \"eth_provider_config\" })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.Paris : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<[string, string], number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if user provides gas Limit, we should use it instead\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gasLimit) {\n        if (!clonedTxParams.gas) {\n          const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n          if (defaultGasLimit) {\n            clonedTxParams.gasLimit = defaultGasLimit;\n          }\n        } else {\n          clonedTxParams.gasLimit = clonedTxParams.gas;\n        }\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gasLimit) {\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<[], string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async fetchGasEstimatesViaEthFeeHistory(): Promise<EthereumGasFeeEstimates> {\n    const noOfBlocks = 10;\n    const newestBlock = \"latest\";\n    // get the 10, 50 and 95th percentile of the tip fees from the last 10 blocks\n    const percentileValues = [10, 50, 95];\n    const feeHistory = await this.providerProxy.request<[number, string, number[]], FeeHistoryResponse>({\n      method: \"eth_feeHistory\",\n      params: [noOfBlocks, newestBlock, percentileValues],\n    });\n\n    // this is in hex wei\n    const finalBaseFeePerGas = feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length - 1];\n    // this is in hex wei\n    const priorityFeeCalcs = feeHistory.reward.reduce(\n      (acc, curr) => {\n        return {\n          slow: acc.slow.plus(new BigNumber(curr[0], 16)),\n          average: acc.average.plus(new BigNumber(curr[1], 16)),\n          fast: acc.fast.plus(new BigNumber(curr[2], 16)),\n        };\n      },\n      { slow: new BigNumber(0), average: new BigNumber(0), fast: new BigNumber(0) }\n    );\n    return {\n      estimatedBaseFee: hexWEIToDecGWEI(finalBaseFeePerGas).toString(),\n      high: {\n        maxWaitTimeEstimate: 30_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.fast.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.fast.toString(16)).toString(),\n      },\n      medium: {\n        maxWaitTimeEstimate: 45_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.average.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.average.toString(16)).toString(),\n      },\n      low: {\n        maxWaitTimeEstimate: 60_000,\n        minWaitTimeEstimate: 15_000,\n        suggestedMaxFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.slow.plus(finalBaseFeePerGas).toString(16)).toString(),\n        suggestedMaxPriorityFeePerGas: hexWEIToDecGWEI(priorityFeeCalcs.slow.toString(16)).toString(),\n      },\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<[string, boolean], Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        let estimates: EthereumGasFeeEstimates;\n        try {\n          if (this.API_SUPPORTED_CHAINIDS.has(this.chainConfig.chainId)) {\n            estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n          } else {\n            throw new Error(\"Chain id not supported by api\");\n          }\n        } catch (error) {\n          estimates = await this.fetchGasEstimatesViaEthFeeHistory();\n        }\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<[TransactionParams], string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<[string, boolean], Block>({\n      method: \"eth_getBlockByNumber\",\n      params: [\"latest\", false],\n    })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<[AddressLike, string], string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerErrors, rpcErrors } from \"@metamask/rpc-errors\";\nimport { JRPCEngine, JRPCMiddleware, providerFromEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\n\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw providerErrors.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<never, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<never, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<never, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw providerErrors.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw rpcErrors.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw providerErrors.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this.emit(\"chainChanged\", chainId);\n      this.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.EIP155,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","'use strict'\n\nconst { SymbolDispose } = require('../../ours/primordials')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { isNodeStream, isWebStream, kControllerErrorFunction } = require('./utils')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\nlet addAbortListener\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = isNodeStream(stream)\n    ? () => {\n        stream.destroy(\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n    : () => {\n        stream[kControllerErrorFunction](\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    addAbortListener = addAbortListener || require('../../ours/util').addAbortListener\n    const disposable = addAbortListener(signal, onAbort)\n    eos(stream, disposable[SymbolDispose])\n  }\n  return stream\n}\n","'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n","'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst {\n  isNodeStream,\n  isReadable,\n  isWritable,\n  isWebStream,\n  isTransformStream,\n  isWritableStream,\n  isReadableStream\n} = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (\n      n < streams.length - 1 &&\n      !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head))\n  const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail))\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.readableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function (chunk, encoding, callback) {\n        if (head.write(chunk, encoding)) {\n          callback()\n        } else {\n          ondrain = callback\n        }\n      }\n      d._final = function (callback) {\n        head.end()\n        onfinish = callback\n      }\n      head.on('drain', function () {\n        if (ondrain) {\n          const cb = ondrain\n          ondrain = null\n          cb()\n        }\n      })\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head\n      const writer = writable.getWriter()\n      d._write = async function (chunk, encoding, callback) {\n        try {\n          await writer.ready\n          writer.write(chunk).catch(() => {})\n          callback()\n        } catch (err) {\n          callback(err)\n        }\n      }\n      d._final = async function (callback) {\n        try {\n          await writer.ready\n          writer.close().catch(() => {})\n          onfinish = callback\n        } catch (err) {\n          callback(err)\n        }\n      }\n    }\n    const toRead = isTransformStream(tail) ? tail.readable : tail\n    eos(toRead, () => {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable', function () {\n        if (onreadable) {\n          const cb = onreadable\n          onreadable = null\n          cb()\n        }\n      })\n      tail.on('end', function () {\n        d.push(null)\n      })\n      d._read = function () {\n        while (true) {\n          const buf = tail.read()\n          if (buf === null) {\n            onreadable = d._read\n            return\n          }\n          if (!d.push(buf)) {\n            return\n          }\n        }\n      }\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail\n      const reader = readable.getReader()\n      d._read = async function () {\n        while (true) {\n          try {\n            const { value, done } = await reader.read()\n            if (!d.push(value)) {\n              return\n            }\n            if (done) {\n              d.push(null)\n              return\n            }\n          } catch {\n            return\n          }\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      if (isNodeStream(tail)) {\n        destroyer(tail, err)\n      }\n    }\n  }\n  return d\n}\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kIsDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w !== null && w !== undefined && w.emitClose) || (r !== null && r !== undefined && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w !== null && w !== undefined && w.errorEmitted) || (r !== null && r !== undefined && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    return this\n  }\n  if ((r !== null && r !== undefined && r.autoDestroy) || (w !== null && w !== undefined && w.autoDestroy))\n    stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct, err)\n    })\n  } catch (err) {\n    process.nextTick(onConstruct, err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return (stream === null || stream === undefined ? undefined : stream.setHeader) && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kIsDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream,\n  isReadableStream,\n  isWritableStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n  if (isReadableStream(body)) {\n    return _duplexify({\n      readable: Readable.fromWeb(body)\n    })\n  }\n  if (isWritableStream(body)) {\n    return _duplexify({\n      writable: Writable.fromWeb(body)\n    })\n  }\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n  if (\n    isReadableStream(body === null || body === undefined ? undefined : body.readable) &&\n    isWritableStream(body === null || body === undefined ? undefined : body.writable)\n  ) {\n    return Duplexify.fromWeb(body)\n  }\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require('../validators')\nconst { Promise, PromisePrototypeThen, SymbolDispose } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose,\n  kIsClosedPromise\n} = require('./utils')\nlet addAbortListener\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream, options, callback)\n  }\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onclosed = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclosed)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      addAbortListener = addAbortListener || require('../../ours/util').addAbortListener\n      const disposable = addAbortListener(options.signal, abort)\n      const originalCallback = callback\n      callback = once((...args) => {\n        disposable[SymbolDispose]()\n        originalCallback.apply(stream, args)\n      })\n    }\n  }\n  return cleanup\n}\nfunction eosWeb(stream, options, callback) {\n  let isAborted = false\n  let abort = nop\n  if (options.signal) {\n    abort = () => {\n      isAborted = true\n      callback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      addAbortListener = addAbortListener || require('../../ours/util').addAbortListener\n      const disposable = addAbortListener(options.signal, abort)\n      const originalCallback = callback\n      callback = once((...args) => {\n        disposable[SymbolDispose]()\n        originalCallback.apply(stream, args)\n      })\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream, args))\n    }\n  }\n  PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn)\n  return nop\n}\nfunction finished(stream, opts) {\n  var _opts\n  let autoCleanup = false\n  if (opts === null) {\n    opts = kEmptyObject\n  }\n  if ((_opts = opts) !== null && _opts !== undefined && _opts.cleanup) {\n    validateBoolean(opts.cleanup, 'cleanup')\n    autoCleanup = opts.cleanup\n  }\n  return new Promise((resolve, reject) => {\n    const cleanup = eos(stream, opts, (err) => {\n      if (autoCleanup) {\n        cleanup()\n      }\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n","'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n","'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n","'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst kResistStopPropagation = require('../../ours/primordials').Symbol('kResistStopPropagation')\nconst { finished } = require('./end-of-stream')\nconst staticCompose = require('./compose')\nconst { addAbortSignalNoValidate } = require('./add-abort-signal')\nconst { isWritable, isNodeStream } = require('./utils')\nconst { deprecate } = require('../../ours/util')\nconst {\n  ArrayPrototypePush,\n  Boolean,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromiseResolve,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction compose(stream, options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream', stream, 'must be writable')\n  }\n  const composedStream = staticCompose(this, stream)\n  if (options !== null && options !== undefined && options.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(options.signal, composedStream)\n  }\n  return composedStream\n}\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  let highWaterMark = concurrency - 1\n  if ((options === null || options === undefined ? undefined : options.highWaterMark) != null) {\n    highWaterMark = MathFloor(options.highWaterMark)\n  }\n  validateInteger(concurrency, 'options.concurrency', 1)\n  validateInteger(highWaterMark, 'options.highWaterMark', 0)\n  highWaterMark += concurrency\n  return async function* map() {\n    const signal = require('../../ours/util').AbortSignalAny(\n      [options === null || options === undefined ? undefined : options.signal].filter(Boolean)\n    )\n    const stream = this\n    const queue = []\n    const signalOpt = {\n      signal\n    }\n    let next\n    let resume\n    let done = false\n    let cnt = 0\n    function onCatch() {\n      done = true\n      afterItemProcessed()\n    }\n    function afterItemProcessed() {\n      cnt -= 1\n      maybeResume()\n    }\n    function maybeResume() {\n      if (resume && !done && cnt < concurrency && queue.length < highWaterMark) {\n        resume()\n        resume = null\n      }\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n            if (val === kEmpty) {\n              continue\n            }\n            val = PromiseResolve(val)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          cnt += 1\n          PromisePrototypeThen(val, afterItemProcessed, onCatch)\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, afterItemProcessed, onCatch)\n        queue.push(val)\n      } finally {\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          maybeResume()\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal = options.signal) !== null &&\n        _options$signal !== undefined &&\n        _options$signal.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal2\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal2 = options.signal) !== null &&\n    _options$signal2 !== undefined &&\n    _options$signal2.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this,\n      [kResistStopPropagation]: true\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal3\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal3 = options.signal) !== null &&\n        _options$signal3 !== undefined &&\n        _options$signal3.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal4\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal4 = options.signal) !== null &&\n      _options$signal4 !== undefined &&\n      _options$signal4.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal5\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal5 = options.signal) !== null &&\n      _options$signal5 !== undefined &&\n      _options$signal5.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal6\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal8\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal8 = options.signal) !== null &&\n        _options$signal8 !== undefined &&\n        _options$signal8.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      }\n\n      // Don't get another item from iterator in case we reached the end\n      if (number <= 0) {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs: deprecate(asIndexedPairs, 'readable.asIndexedPairs will be removed in a future version.'),\n  drop,\n  filter,\n  flatMap,\n  map,\n  take,\n  compose\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator, SymbolDispose } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst {\n  isIterable,\n  isReadable,\n  isReadableNodeStream,\n  isNodeStream,\n  isTransformStream,\n  isWebStream,\n  isReadableStream,\n  isReadableFinished\n} = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nlet addAbortListener\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pumpToNode(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n      await wait()\n    }\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nasync function pumpToWeb(readable, writable, finish, { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter()\n  try {\n    for await (const chunk of readable) {\n      await writer.ready\n      writer.write(chunk).catch(() => {})\n    }\n    await writer.ready\n    if (end) {\n      await writer.close()\n    }\n    finish()\n  } catch (err) {\n    try {\n      await writer.abort(err)\n      finish(err)\n    } catch (err) {\n      finish(err)\n    }\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  addAbortListener = addAbortListener || require('../../ours/util').addAbortListener\n  let disposable\n  if (outerSignal) {\n    disposable = addAbortListener(outerSignal, abort)\n  }\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    var _disposable\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    ;(_disposable = disposable) === null || _disposable === undefined ? undefined : _disposable[SymbolDispose]()\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        var _ret\n        ret = makeAsyncIterable((_ret = ret) === null || _ret === undefined ? undefined : _ret.readable)\n      } else {\n        ret = makeAsyncIterable(ret)\n      }\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret2\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret2 = ret) === null || _ret2 === undefined ? undefined : _ret2.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pumpToNode(ret, pt, finish, {\n            end\n          })\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret\n          finishCount++\n          pumpToNode(toRead, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret\n        finishCount++\n        pumpToNode(toRead, stream, finish, {\n          end\n        })\n      } else if (isIterable(ret)) {\n        finishCount++\n        pumpToNode(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++\n        pumpToWeb(makeAsyncIterable(ret), stream, finish, {\n          end\n        })\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++\n        pumpToWeb(ret, stream, finish, {\n          end\n        })\n      } else if (isTransformStream(ret)) {\n        finishCount++\n        pumpToWeb(ret.readable, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end: false\n  }) // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n\n    function endFn() {\n      ended = true\n      dst.end()\n    }\n    if (isReadableFinished(src)) {\n      // End the destination if the source has already ended.\n      process.nextTick(endFn)\n    } else {\n      src.once('end', endFn)\n    }\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncDispose,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nconst kObjectMode = 1 << 0\nconst kEnded = 1 << 1\nconst kEndEmitted = 1 << 2\nconst kReading = 1 << 3\nconst kConstructed = 1 << 4\nconst kSync = 1 << 5\nconst kNeedReadable = 1 << 6\nconst kEmittedReadable = 1 << 7\nconst kReadableListening = 1 << 8\nconst kResumeScheduled = 1 << 9\nconst kErrorEmitted = 1 << 10\nconst kEmitClose = 1 << 11\nconst kAutoDestroy = 1 << 12\nconst kDestroyed = 1 << 13\nconst kClosed = 1 << 14\nconst kCloseEmitted = 1 << 15\nconst kMultiAwaitDrain = 1 << 16\nconst kReadingMore = 1 << 17\nconst kDataEmitted = 1 << 18\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false,\n    get() {\n      return (this.state & bit) !== 0\n    },\n    set(value) {\n      if (value) this.state |= bit\n      else this.state &= ~bit\n    }\n  }\n}\nObjectDefineProperties(ReadableState.prototype, {\n  objectMode: makeBitMapDescriptor(kObjectMode),\n  ended: makeBitMapDescriptor(kEnded),\n  endEmitted: makeBitMapDescriptor(kEndEmitted),\n  reading: makeBitMapDescriptor(kReading),\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed),\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  sync: makeBitMapDescriptor(kSync),\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  needReadable: makeBitMapDescriptor(kNeedReadable),\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable),\n  readableListening: makeBitMapDescriptor(kReadableListening),\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled),\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted),\n  emitClose: makeBitMapDescriptor(kEmitClose),\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy),\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed),\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed),\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted),\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain),\n  // If true, a maybeReadMore has been scheduled.\n  readingMore: makeBitMapDescriptor(kReadingMore),\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\n})\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Bit map field to store ReadableState more effciently with 1 bit per field\n  // instead of a V8 slot per field.\n  this.state = kEmitClose | kAutoDestroy | kConstructed | kSync\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  if (options && options.objectMode) this.state |= kObjectMode\n  if (isDuplex && options && options.readableObjectMode) this.state |= kObjectMode\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this[kPaused] = null\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this.state &= ~kEmitClose\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this.state &= ~kAutoDestroy\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nReadable.prototype[SymbolAsyncDispose] = function () {\n  let error\n  if (!this.destroyed) {\n    error = this.readableEnded ? null : new AbortError()\n    this.destroy(error)\n  }\n  return new Promise((resolve, reject) => eos(this, (err) => (err && err !== error ? reject(err) : resolve(null))))\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if ((state.state & kObjectMode) === 0) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.state &= ~kReading\n    onEofChunk(stream, state)\n  } else if ((state.state & kObjectMode) !== 0 || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if ((state.state & kEndEmitted) !== 0) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.state &= ~kReading\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.state &= ~kReading\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if ((state.state & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if ((state.state & kNeedReadable) !== 0) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if ((state.state & kObjectMode) !== 0) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.state &= ~kEmittedReadable\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = (state.state & kNeedReadable) !== 0\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.state |= kReading | kSync\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.state |= kNeedReadable\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.state &= ~kSync\n\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    pause()\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n","'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { validateInteger } = require('../validators')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nlet defaultHighWaterMarkBytes = 16 * 1024\nlet defaultHighWaterMarkObjectMode = 16\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes\n}\nfunction setDefaultHighWaterMark(objectMode, value) {\n  validateInteger(value, 'value', 0)\n  if (objectMode) {\n    defaultHighWaterMarkObjectMode = value\n  } else {\n    defaultHighWaterMarkBytes = value\n  }\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark,\n  setDefaultHighWaterMark\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n","'use strict'\n\nconst { SymbolAsyncIterator, SymbolIterator, SymbolFor } = require('../../ours/primordials')\n\n// We need to use SymbolFor to make these globally available\n// for interopt with readable-stream, i.e. readable-stream\n// and node core needs to be able to read/write private state\n// from each other for proper interoperability.\nconst kIsDestroyed = SymbolFor('nodejs.stream.destroyed')\nconst kIsErrored = SymbolFor('nodejs.stream.errored')\nconst kIsReadable = SymbolFor('nodejs.stream.readable')\nconst kIsWritable = SymbolFor('nodejs.stream.writable')\nconst kIsDisturbed = SymbolFor('nodejs.stream.disturbed')\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise')\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  )\n}\nfunction isWritableStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === 'function' && typeof obj.abort === 'function')\n}\nfunction isTransformStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.readable === 'object' && typeof obj.writable === 'object')\n}\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj)\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kIsDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (stream && stream[kIsWritable] != null) return stream[kIsWritable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  isDestroyed,\n  kIsDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  kIsClosedPromise,\n  kControllerErrorFunction,\n  kIsWritable,\n  isClosed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWebStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose,\n  isTransformStream\n}\n","/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n","/* eslint jsdoc/require-jsdoc: \"error\" */\n\n'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of \"dictionary\" here, which means any value\n *                                whose Type is either Undefined, Null, or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames((value, name) => {\n  if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i]\n    const indexedName = `${name}[${i}]`\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName, 'AbortSignal', signal)\n    }\n    validateAbortSignal(signal, indexedName)\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === 'undefined' || !RegExpPrototypeExec(linkValueRegExp, value)) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name,\n      value,\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n    )\n  }\n}\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints, 'hints')\n    return hints\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length\n    let result = ''\n    if (hintsLength === 0) {\n      return result\n    }\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i]\n      validateLinkHeaderFormat(link, 'hints')\n      result += link\n      if (i !== hintsLength - 1) {\n        result += ', '\n      }\n    }\n    return result\n  }\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints',\n    hints,\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n  )\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateStringArray,\n  validateBooleanArray,\n  validateAbortSignalArray,\n  validateBoolean,\n  validateBuffer,\n  validateDictionary,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal,\n  validateLinkHeaderValue\n}\n","'use strict'\n\nconst CustomStream = require('../stream')\nconst promises = require('../stream/promises')\nconst originalDestroy = CustomStream.Readable.destroy\nmodule.exports = CustomStream.Readable\n\n// Explicit export naming is needed for ESM\nmodule.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\nmodule.exports._isUint8Array = CustomStream._isUint8Array\nmodule.exports.isDisturbed = CustomStream.isDisturbed\nmodule.exports.isErrored = CustomStream.isErrored\nmodule.exports.isReadable = CustomStream.isReadable\nmodule.exports.Readable = CustomStream.Readable\nmodule.exports.Writable = CustomStream.Writable\nmodule.exports.Duplex = CustomStream.Duplex\nmodule.exports.Transform = CustomStream.Transform\nmodule.exports.PassThrough = CustomStream.PassThrough\nmodule.exports.addAbortSignal = CustomStream.addAbortSignal\nmodule.exports.finished = CustomStream.finished\nmodule.exports.destroy = CustomStream.destroy\nmodule.exports.destroy = originalDestroy\nmodule.exports.pipeline = CustomStream.pipeline\nmodule.exports.compose = CustomStream.compose\nObject.defineProperty(CustomStream, 'promises', {\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nmodule.exports.Stream = CustomStream.Stream\n\n// Allow default importing\nmodule.exports.default = module.exports\n","'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n","'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  PromiseResolve(val) {\n    return Promise.resolve(val)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolFor: Symbol.for,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  SymbolDispose: Symbol.dispose || Symbol('Symbol.dispose'),\n  SymbolAsyncDispose: Symbol.asyncDispose || Symbol('Symbol.asyncDispose'),\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Boolean: Boolean,\n  Uint8Array\n}\n","'use strict'\n\nconst bufferModule = require('buffer')\nconst { kResistStopPropagation, SymbolDispose } = require('./primordials')\nconst AbortSignal = globalThis.AbortSignal || require('abort-controller').AbortSignal\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\nconst validateAbortSignal = (signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nconst validateFunction = (value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n}\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob,\n  deprecate(fn, message) {\n    return fn\n  },\n  addAbortListener:\n    require('events').addAbortListener ||\n    function addAbortListener(signal, listener) {\n      if (signal === undefined) {\n        throw new ERR_INVALID_ARG_TYPE('signal', 'AbortSignal', signal)\n      }\n      validateAbortSignal(signal, 'signal')\n      validateFunction(listener, 'listener')\n      let removeEventListener\n      if (signal.aborted) {\n        queueMicrotask(() => listener())\n      } else {\n        signal.addEventListener('abort', listener, {\n          __proto__: null,\n          once: true,\n          [kResistStopPropagation]: true\n        })\n        removeEventListener = () => {\n          signal.removeEventListener('abort', listener)\n        }\n      }\n      return {\n        __proto__: null,\n        [SymbolDispose]() {\n          var _removeEventListener\n          ;(_removeEventListener = removeEventListener) === null || _removeEventListener === undefined\n            ? undefined\n            : _removeEventListener()\n        }\n      }\n    },\n  AbortSignalAny:\n    AbortSignal.any ||\n    function AbortSignalAny(signals) {\n      // Fast path if there is only one signal.\n      if (signals.length === 1) {\n        return signals[0]\n      }\n      const ac = new AbortController()\n      const abort = () => ac.abort()\n      signals.forEach((signal) => {\n        validateAbortSignal(signal, 'signals')\n        signal.addEventListener('abort', abort, {\n          once: true\n        })\n      })\n      ac.signal.addEventListener(\n        'abort',\n        () => {\n          signals.forEach((signal) => signal.removeEventListener('abort', abort))\n        },\n        {\n          once: true\n        }\n      )\n      return ac.signal\n    }\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n","/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { setDefaultHighWaterMark, getDefaultHighWaterMark } = require('./internal/streams/state')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDestroyed = utils.isDestroyed\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.isWritable = utils.isWritable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n","'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream, isWebStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nrequire('../../lib/stream.js')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (\n      lastArg &&\n      typeof lastArg === 'object' &&\n      !isNodeStream(lastArg) &&\n      !isIterable(lastArg) &&\n      !isWebStream(lastArg)\n    ) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n",null,null,null,null,null,null,null,"import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}","import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;"],"names":["encode","input","Array","isArray","output","outputLength","i","length","encoded","push","concatBytes","encodeLength","inputBuf","toBytes","safeSlice","start","end","Error","slice","decodeLength","v","parseHexByte","bytesToHex","len","offset","Uint8Array","from","hexLength","numberToHex","firstByte","hexToBytes","decode","stream","decoded","_decode","remainder","data","llength","innerRemainder","d","totalLength","exports","cachedHexes","_v","toString","padStart","uint8a","hex","hexByte","byte","Number","parseInt","isNaN","TypeError","array","j","arrays","reduce","a","arr","result","pad","set","utf8ToBytes","utf","TextEncoder","integer","isHexPrefixed","str","undefined","_0n","BigInt","Account","constructor","nonce","balance","storageRoot","constants_1","codeHash","this","_validate","static","accountData","bufferToBigInt","toBuffer","serialized","values","arrToBufArr","rlp_1","fromValuesArray","raw","bigIntToUnpaddedBuffer","serialize","Buffer","bufArrToArr","isContract","equals","isEmpty","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","buf","hash","keccak256","ret","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","salt","initCode","concat","privateKey","secp256k1_1","utils","isValidPrivateKey","publicKey","sanitize","ProjectivePoint","fromHex","pubKey","toRawBytes","fromPrivateKey","publicToAddress","privateToPublic","addr","zeros","bufferToHex","accountBodyFromSlim","body","zeroAddress","emptyUint8Arr","accountBody","Address","isBuffer","pubToAddress","privateToAddress","generateAddress","bigIntToBuffer","generateAddress2","isZero","zero","isPrecompileOrSystemAddress","rangeMin","rangeMax","AsyncEventEmitter","events_1","emit","event","args","callback","self","listeners","_events","fn","async","context","tasks","error","task","call","Promise","resolve","reject","runInSeries","then","catch","listenerCount","once","listener","g","next","removeListener","on","first","unshift","before","target","beforeOrAfter","after","index","add","splice","super","addListener","prependListener","prependOnceListener","removeAllListeners","eventNames","getMaxListeners","setMaxListeners","maxListeners","isSafeInteger","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","assertIsArray","isHexString","intToBuffer","n","toArray","num","res","asIntN","asUintN","buffer","maxLength","bufferStr","replace","ba","baToJSON","k","Object","entries","map","value","unpadBuffer","CURVE","buffer_1","nibbles","bi","ni","terminator","hasTerminator","subarray","nibblesToBytes","l","b","compact","base","bytesToNibbles","chop","__exportStar","enumerable","get","arrayContainsArray","fromAscii","fromUtf8","getBinarySize","getKeys","toAscii","byteLength","superset","subset","some","indexOf","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","key","allowEmpty","match","permits","promiseResolverQueue","resolver","release","console","warn","nextResolver","shift","url","headers","type","method","jsonrpc","id","provider","connection","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sig","sign","toCompactRawBytes","r","s","signature","setLengthLeft","senderPubKey","Signature","fromCompact","addRecoveryBit","recoverPublicKey","ss","bufferToInt","homesteadOrLater","rBigInt","sBigInt","message","TypeOutput","outputType","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","Withdrawal","validatorIndex","amount","withdrawalData","indexData","validatorIndexData","addressData","amountData","toType","types_1","address_1","withdrawalArray","fromWithdrawalData","withdrawal","indexBuffer","alloc","validatorIndexBuffer","addressBuffer","toBufferArray","toValue","toJSON","bigIntToHex","types","packed","tight","pack","errors_1","getErrorMessage","createBytes","unpack","assert","isObject","hasProperty","stack","ParserError","originalError","name","originalStack","getErrorStack","size","pointer","skip","parsers","parsers_1","bool","fixedBytes","function","number","string","tuple","staticParser","parser","find","isType","isDynamic","arrayPacked","byteArray","staticBuffer","dynamicBuffer","pointers","getParser","isDynamicParser","position","dynamicStart","updatedBuffer","numberToBytes","iterator","iterate","done","bytesToNumber","bytesValue","getByteLength","addressValue","getAddress","add0x","ARRAY_REGEX","groups","innerType","join","getArrayType","isArrayType","tuple_1","getTupleType","arrayType","fixedLength","fixed_bytes_1","arrayLength","rest","BooleanCoercer","coerce","boolean","union","literal","create","booleanValue","getBooleanValue","bigIntToBytes","number_1","bufferValue","paddedSize","Math","ceil","padEnd","BYTES_REGEX","FunctionStruct","object","utils_1","selector","instance","fnValue","getFunction","NUMBER_REGEX","startsWith","getLength","maxValue","isSigned","createBigInt","bigIntValue","getBigInt","assertNumberLength","signedBigIntToBytes","numberValue","bytesToSignedBigInt","bytesToBigInt","bytes_1","stringToBytes","bytesToString","TUPLE_REGEX","endsWith","elements","current","depth","char","trim","getTupleElements","element","isTupleType","total","BUFFER_WIDTH","padding","max","encrypt","version","isNullish","ephemeralKeyPair","nacl","box","keyPair","pubKeyUInt8Array","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","receiverPrivateKeyUint8Array","naclDecodeHex","receiverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","dataWithPadding","modVal","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","messageHash","hashPersonalMessage","legacyToBuffer","ecsign","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","includes","parseNumber","reallyStrangeAddressToBytes","character","encodeField","V3","V4","encodeData","isStrictHexString","Boolean","parsedType","lastIndexOf","typeValuePairs","item","t","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","has","hashStruct","hashed","encodedHashType","sanitizeData","sanitizedData","properties","EIP712Domain","eip712DomainHash","typedData","domain","normalizeValue","abs","normalizeIntegers","_typedSignatureHash","normalizedData","schema","encodePacked","additionalProperties","items","required","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","prototype","rSig","fromSigned","sSig","vSig","rStr","toUnsigned","sStr","vStr","remove0x","sigParams","fromRpcSig","ecrecover","getHash","hmac","msgs","curveDef","defHash","weierstrass","freeze","_1n","c","bits","constTimeNegate","condition","neg","negate","opts","W","windows","windowSize","unsafeLadder","elm","p","ZERO","double","precomputeWindow","points","window","wNAF","precomputes","f","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","curve","validateField","Fp","validateObject","h","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","os2ip","utils_js_1","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","H","outputLen","b_in_bytes","blockLen","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xof","dkLen","update","digest","hash_to_field","count","options","m","expand","_DST","dst","validateDST","log2p","L","len_in_bytes","prb","u","elm_offset","tv","mod","COEFF","reverse","x","y","xNum","xDen","yNum","yDen","val","acc","mul","div","Point","mapToCurve","def","hashToCurve","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","_2n","_3n","_4n","_5n","_8n","pow","power","modulo","invert","q","tonelliShanks","legendreC","Q","S","Z","p1div4","root","eql","sqr","Q1div2","ONE","t2","ge","FpSqrt","c1","n2","nv","sub","FIELD_FIELDS","FpPow","FpInvertBatch","nums","tmp","lastMultiplied","is0","inverted","inv","reduceRight","_nBitLength","MASK","BYTES","BITS","lhs","rhs","legendreConst","bitLen","isLE","redef","sqrtP","bitMask","isValid","isOdd","sqrN","addN","subN","mulN","sqrt","invertBatch","lst","cmov","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","bytesToNumberBE","groupOrder","hashLen","ensureBytes","minLen","u8a","hexes","numberToHexUnpadded","hexToNumber","sum","forEach","title","expectedLength","b1","b2","pos","u8n","u8fr","qByteLen","hmacFn","reset","reseed","seed","gen","out","sl","pred","validatorFns","bigint","validators","optValidators","checkField","fieldName","isOptional","checkVal","b2n","h2b","ut","Err","_parseInt","E","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","validateBasic","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","point","isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","lengths","pointPrecomputes","Map","assertPrjPoint","other","px","py","pz","toInv","multiply","_setWindowSize","left","hasEvenY","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wnaf","multiplyUnsafe","I","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","normalizeZ","multiplyAndAddUnsafe","G","iz","z","ax","ay","zz","cofactor","toHex","_bits","SWUFpSqrtRatio","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","sqrtRatio","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","y2","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","numToNByteStr","isBiggerThanHalfOrder","slcNum","to","rec","radj","R","ir","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactHex","randomPrivateKey","rand","hashToPrivateScalar","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","privKey","C","createHmacDrbg","drbg","verify","sg","_sig","fromDER","derError","is","A","B","tv6","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","Field","createCurve","a1","a2","POW_2_128","sha256_1","fe","TAGGED_HASH_PREFIXES","taggedHash","tag","tagP","tagH","sha256","messages","pointToBytes","numTo32b","modP","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","modular_js_1","isoMap","isogenyMap","mapSWU","mapToCurveSimpleSWU","htf","createHasher","scalars","writeUint16BE","writeUint16LE","readInt32BE","readUint32BE","readInt32LE","readUint32LE","writeUint32BE","writeUint32LE","writeUint64BE","writeUint64LE","hi","lo","bitLength","int_1","DataView","byteOffset","getFloat32","getFloat64","setFloat32","setFloat64","ROUNDS","core","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","binary_1","streamXOR","src","nonceInplaceCounterLength","nc","counterLength","block","incrementCounter","wipe_1","counter","carry","ZEROS","tagLength","_key","ChaCha20Poly1305","plaintext","associatedData","authKey","chacha_1","resultLength","_authenticate","sealed","calculatedTag","constant_time_1","tagOut","poly1305_1","clean","compare","subject","resultIfOne","resultIfZero","saveState","restoreState","cleanSavedState","info","_counter","_hash","_info","okm","hmac_1","_hmac","_buffer","digestLength","_bufpos","HKDF","ctr","finish","_fillBuffer","_finished","_inner","_outer","blockSize","hash_1","_innerKeyedState","_outerKeyedState","HMAC","savedState","imul","al","bl","isInteger","isFinite","floor","_r","Uint16Array","_h","_pad","_leftover","_fin","t6","t7","Poly1305","mpos","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","_blocks","want","prng","system_1","wipe","ALPHANUMERIC","randomString","charset","charsLen","maxByte","randomByte","charAt","log","LN2","isAvailable","isInstantiated","browserCrypto","crypto","msCrypto","getRandomValues","_crypto","min","nodeCrypto","require","_source","browser_1","node_1","_state","Int32Array","_temp","_bufferLength","_bytesHashed","SHA256","_initState","dataLength","dataPos","hashBlocks","bytesHashed","bitLenHi","bitLenLo","state","bufferLength","K","w","gf","init","Float64Array","_9","_121665","car25519","sel25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b4","b5","b7","b8","b10","b12","b13","b14","b15","square","scalarMult","unpack25519","x32","x16","inp","inv25519","pack25519","scalarMultBase","generateKeyPairFromSeed","mySecretKey","theirPublicKey","rejectZero","tslib_1","seconds","miliseconds","timeout","setTimeout","Watch","label","timestamps","started","Date","now","stop","timestamp","elapsed","__spreadArray","arguments","ar","BrowserInfo","os","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","matchUserAgent","ua","matched","_a","browser","regex","uaMatch","exec","matchedRule","versionParts","split","ii","createVersionParts","detectOS","searchBotMatch","RELAY_JSONRPC","waku","publish","batchPublish","subscribe","batchSubscribe","subscription","unsubscribe","batchUnsubscribe","irn","iridium","getFromWindow","getFromWindowOrThrow","doc","loc","window_getters_1","getWindowMetadataOfAny","metaTags","getElementsByTagName","attributes","getAttribute","filter","attr","content","getName","description","origin","icons","links","link","rel","href","absoluteHref","protocol","host","path","pathname","pop","absoluteUrl","getIcons","safeApply","handler","Reflect","apply","SafeEventEmitter","EventEmitter","doError","events","er","arrayClone","SerializableError","_defineProperty","createScaffoldMiddleware","handlers","req","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","JRPCEngine","_middleware","middlewareStack","returnHandlers","isComplete","middleware","_runMiddleware","serializeError","returnHandler","_req","handle","cb","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","_runAllMiddleware","_runReturnHandlers","handlerCallback","reqs","responses","all","bind","_err","callerReq","_processRequest","_error","_checkForCompletion","mergeMiddleware","engine","providerFromEngine","sendAsync","fallbackError","_res$error","_res$error2","rpcErrors","send","request","random","Symbol","RLP","assertIsBytes","BIGINT_0","hexByByte","BIGINT_CACHE","byteLen","intToBytes","unpadBytes","_unprefixedHexToBytes","unprefixedHexToBytes","addHexPrefix","validateNoLeadingZeroes","bigIntToUnpaddedBytes","MAX_UINT64","MAX_INTEGER","SECP256K1_ORDER_DIV_2","secp256k1","BIGINT_1","BIGINT_2","BIGINT_8","BIGINT_27","equalsBytes","KeyEncoding","ValueEncoding","kzgNotLoaded","kzg","loadTrustedSetup","blobToKzgCommitment","computeBlobKzgProof","verifyKzgProof","verifyBlobKzgProofBatch","FIELD_ELEMENTS_PER_BLOB","USEFUL_BYTES_PER_BLOB","MAX_USEFUL_BYTES_PER_TX","BLOB_SIZE","get_blob","blob","chunk","getBlobs","blobs_len","pdata","get_padded","blobs","computeVersionedHash","commitment","blobCommitmentVersion","computedVersionedHash","crc","accum","encoding","defineCrc","model","calculator","previous","createBuffer","signed","unsigned","crc1","TABLE","chains","mainnet","networkId","defaultHardfork","consensus","algorithm","ethash","comment","genesis","gasLimit","difficulty","extraData","hardforks","forkHash","ttd","bootstrapNodes","ip","port","location","dnsNetworks","goerli","clique","period","epoch","sepolia","holesky","baseFeePerGas","Chain","Mainnet","Goerli","Sepolia","Holesky","Hardfork","ConsensusType","ConsensusAlgorithm","CustomChain","Status","EIPs","status","Review","minimumHardfork","Chainstart","requiredEIPs","gasPrices","tstore","tload","Final","Berlin","gasConfig","baseFeeMaxChangeDenominator","elasticityMultiplier","initialBaseFee","Draft","Istanbul","beginsub","returnsub","jumpsub","Byzantium","modexpGquaddivisor","coldsload","coldaccountaccess","warmstorageread","sstoreCleanGasEIP2200","sstoreNoopGasEIP2200","sstoreDirtyGasEIP2200","sstoreInitRefundEIP2200","sstoreCleanRefundEIP2200","callcode","delegatecall","staticcall","extcodesize","extcodecopy","extcodehash","sload","sstore","accessListStorageKeyCost","accessListAddressCost","London","auth","authcall","authcallValueTransfer","basefee","maxRefundQuotient","selfdestructRefund","sstoreClearRefundEIP2200","MuirGlacier","difficultyBombDelay","vm","push0","SpuriousDragon","initCodeWordCost","maxInitCodeSize","prevrandao","Cancun","historicalRootsLength","Paris","blobGasPerBlob","targetBlobGasPerBlock","maxblobGasPerBlock","blobGasPriceUpdateFraction","simpleGasPerBlob","minBlobGasPrice","kzgPointEvaluationGasPrecompilePrice","blobhash","sharding","blobCommitmentVersionKzg","fieldElementsPerBlob","GrayGlacier","Shanghai","mcopy","blobbasefee","chainstart","minGasLimit","gasLimitBoundDivisor","exp","expByte","keccak256Word","sstoreSet","sstoreReset","sstoreRefund","jumpdest","logData","logTopic","callStipend","callValueTransfer","callNewAccount","memory","quadCoeffDiv","createData","tx","txCreation","txDataZero","txDataNonZero","ecRecover","sha256Word","ripemd160","ripemd160Word","identity","identityWord","sdiv","smod","addmod","mulmod","signextend","lt","gt","slt","sgt","eq","iszero","and","or","xor","not","caller","callvalue","calldataload","calldatasize","calldatacopy","codesize","codecopy","gasprice","blockhash","coinbase","gaslimit","mload","mstore","mstore8","jump","jumpi","pc","msize","gas","dup","swap","return","invalid","selfdestruct","stackLimit","callCreateDepth","maxExtraDataSize","minimumDifficulty","difficultyBoundDivisor","durationLimit","epochDuration","timebombPeriod","minerReward","homestead","dao","tangerineWhistle","spuriousDragon","maxCodeSize","byzantium","ecAdd","ecMul","ecPairing","ecPairingWord","revert","returndatasize","returndatacopy","constantinople","netSstoreNoopGas","netSstoreInitGas","netSstoreCleanGas","netSstoreDirtyGas","netSstoreClearRefund","netSstoreResetRefund","netSstoreResetClearRefund","shr","sar","create2","petersburg","istanbul","blake2Round","sstoreSentryGasEIP2200","sstoreInitGasEIP2200","chainid","selfbalance","muirGlacier","berlin","eips","london","arrowGlacier","grayGlacier","paris","casper","mergeForkIdTransition","shanghai","cancun","parseGethParams","json","mergeForkIdPostMerge","config","mixHash","excessBlobGas","genesisTimestamp","formatNonce","eip155Block","eip158Block","hardfork","blockperiodseconds","epochlength","forkMap","Homestead","Dao","TangerineWhistle","Constantinople","Petersburg","MergeForkIdTransition","postMerge","isTimestamp","forkMapRev","elem","configHardforkNames","nameBlock","fork","hf","Infinity","terminalTotalDifficulty","mergeConfig","postMergeIndex","findIndex","latestHardfork","Common","_eips","_paramsCache","_activatedEIPsCache","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","HARDFORK_CHANGES","HARDFORK_SPECS","_hardfork","setHardfork","setEIPs","_buildParamsCache","_buildActivatedEIPsCache","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","custom","PolygonMumbai","ArbitrumOne","xDaiChain","OptimisticKovan","OptimisticEthereum","genesisJson","genesisHash","genesisParams","missingField","parseGethGenesis","common","setForkHashes","initializedChains","getInitializedChains","param","existing","hfChanges","getHardforkBy","blockNumber","td","hfs","mergeIndex","hfIndex","hfStartIndex","setHardforkBy","_getHardfork","eip","minHF","gteHardfork","isActivatedEIP","_mergeWithParamsCache","hfEIPs","topic","paramByHardfork","valueEIP","paramByEIP","eipParams","paramByBlock","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","posHf1","posHf2","hardforkTimestamp","eipBlock","hardforkTTD","nextHardforkBlockOrTimestamp","currHfTimeOrBlock","nextHf","hfTimeOrBlock","nextHfBlock","_calcForkHash","hfBytes","prevBlockOrTime","blockOrTime","hfBlockBytes","inputBytes","hardforkForForkHash","resArray","chainName","consensusType","consensusAlgorithm","consensusConfig","assign","getPrototypeOf","names","CHAIN_SPECS","Capability","TransactionType","isAccessList","firstItem","isAccessListBytes","AccessLists","accessList","AccessListJSON","bufferAccessList","newAccessList","addressBytes","storageItems","storageKeys","jsonItem","accessListItem","storageSlots","storageSlot","accessListJSON","JSONItem","slot","slots","txTypeBytes","txType","BaseTransaction","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","_type","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","createContract","allowUnlimitedInitCodeSize","_getCommon","checkMaxInitCodeSize","supports","capability","getValidationErrors","errors","verifySignature","getBaseFee","txFee","fee","getDataFee","toCreationAddress","txCreationFee","cost","getSenderPublicKey","getSenderAddress","_errorMsg","hackApplied","Legacy","EIP155ReplayProtection","getHashedMessageToSign","_processSignature","chainIdBigInt","isSupportedChainId","cannotEqual","txDataKeys","_getSharedErrorPostfix","postfix","getUpfrontCost","baseFee","prio","maxPriorityFeePerGas","maxBase","maxFeePerGas","gasPrice","errorMsg","errorStr","extraCost","isFrozen","validateHighS","getMessageToVerifySignature","getMessageToSign","validateYParity","getDataFeeEIP2930","FeeMarketEIP1559Transaction","FeeMarketEIP1559","accessListData","getAccessListData","verifyAccessList","_validateNotArray","EIP2718","EIP2930","EIP1559","fromTxData","getAccessListJSON","AccessListEIP2930Transaction","AccessListEIP2930","LIMIT_BLOBS_PER_TX","BlobEIP4844Transaction","BlobEIP4844","maxFeePerBlobGas","blobVersionedHashes","vh","kzgCommitments","kzgProofs","proof","blobsData","cur","commitments","blobsToCommitments","hashes","commitmentsToVersionedHashes","ctx","networkTxValues","txValues","decodedTx","validateBlobTransactionNetworkWrapper","serializeNetworkWrapper","numBlobs","meetsEIP155","chainIdDoubled","LegacyTransaction","_validateTxV","numSub","TransactionFactory","isLegacyTxData","isAccessListEIP2930TxData","isFeeMarketEIP1559TxData","isBlobEIP4844TxData","fromSerializedTx","fromSerializedData","txHash","prov","_getConnection","getProvider","fetch","fetchFromProvider","fromRPC","_txParams","txParams","normalizeTxParams","logLevel","setLevel","levels","apiKey","embedHost","gatewayAuthHeader","gatewayEmbedHostHeader","sentry","tracingOrigins","tracingPaths","fetchAndTrace","_url","URL","transaction","startTransaction","span","startChild","op","response","getApiKeyHeaders","debugLogResponse","statusText","options_","defaultOptions","mode","useAPIKey","merge","ok","responseContentType","text","resemblesAddress","createWalletMiddleware","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","normalizedAccounts","_address","normalizedAddress","fetchPrivateKey","eth_accounts","eth_private_key","private_key","eth_coinbase","accounts","eth_sendTransaction","eth_signTransaction","eth_sign","extraParams","msgParams","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","firstParam","secondParam","warning","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","eth_syncing","createChainSwitchMiddleware","addChain","switchChain","wallet_addEthereumChain","chainParams","_req$params","rpcUrls","nativeCurrency","wallet_switchEthereumChain","_req$params2","createChainIdMiddleware","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getLastActiveSession","signClient","session","lastKeyIndex","sendJrpcRequest","providerErrors","getAccountsFromNamespaces","namespaces","parseAccountId","WalletConnectV2Provider","BaseProvider","connector","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","setupProvider","_providerEngineProxy","onConnectorStateUpdate","setupEngine","currentChainConfig","getChainConfig","configure","lookupNetwork","_","newChainId","getProviderHandlers","jrpcRes","ethMiddleware","chainSwitchMiddleware","getChainSwitchMiddleware","updateProviderEngineProxy","blockExplorerUrls","ticker","symbol","tickerName","displayName","blockExplorer","decimals","connectedTopic","WalletLoginError","_this$connector","_this$connector$sessi","checkIfChainIdAllowed","sessionData","allChains","getChainsFromNamespaces","chainAllowed","parsedId","parseChainId","reference","checkIfAccountAllowed","allAccounts","accountAllowed","account","_parsedAccount$addres","payload","connectedChainId","rpcUrl","connectedHexChainId","maybeConfig","_class","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","toNumericBase","fromDenomination","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","validateTypedMessageParams","parameters","activeChainId","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","_typedData$domain","isHexStrict","signTx","txFormatter","finalTxParams","formatTransaction","getCommonConfiguration","signedTx","getProviderEngineProxy","providerEngineProxy","signMessage","privKeyBuffer","personalSign","finalChainId","signTypedData","getEncryptionPublicKey","stripped","buff","bnToHex","inputBn","hexToBn","inputHex","BN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","providerProxy","isEIP1559Compatible","getEIP1559Compatibility","customChainParams","clonedTxParams","defaultGasLimit","getDefaultGasLimit","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","getDefaultGasFees","feeHistory","finalBaseFeePerGas","priorityFeeCalcs","reward","curr","slow","plus","average","fast","estimatedBaseFee","high","maxWaitTimeEstimate","minWaitTimeEstimate","suggestedMaxFeePerGas","suggestedMaxPriorityFeePerGas","medium","low","latestBlock","isLegacyGasAPICompatible","gasData","estimates","API_SUPPORTED_CHAINIDS","fetchEip1159GasEstimates","fetchGasEstimatesViaEthFeeHistory","gasFeeEstimates","gasEstimateType","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","fetchLegacyGasPriceEstimates","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","estimatedGasHex","targetBN","numerator","denominator","numberBN","denomBN","BnMultiplyByFraction","estimateTxGas","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","upperGasLimitBn","muln","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","analyzeGasUsage","EthereumPrivateKeyProvider","getAccountMiddleware","network","updatePrivatekey","wallet_updateAccount","accountParams","_req$params3","createAccountMiddleware","updateAccount","SymbolDispose","AbortError","codes","isNodeStream","isWebStream","kControllerErrorFunction","eos","ERR_INVALID_ARG_TYPE","addAbortListener","module","addAbortSignal","signal","validateAbortSignal","addAbortSignalNoValidate","onAbort","destroy","cause","reason","aborted","disposable","StringPrototypeSlice","SymbolIterator","TypedArrayPrototypeSet","inspect","entry","clear","consume","hasStrings","_getString","_getBuffer","retLen","for","customInspect","pipeline","Duplex","destroyer","isReadable","isWritable","isTransformStream","isWritableStream","isReadableStream","ERR_INVALID_ARG_VALUE","ERR_MISSING_ARGS","streams","orgStreams","idx","ondrain","onfinish","onreadable","onclose","readable","writable","writableObjectMode","readableObjectMode","_write","write","_final","writer","getWriter","ready","close","toRead","_read","read","reader","getReader","_destroy","aggregateTwoErrors","ERR_MULTIPLE_CALLBACK","kIsDestroyed","isDestroyed","isFinished","isServerRequest","kDestroy","kConstruct","checkError","errored","called","onDestroy","_readableState","_writableState","closed","nextTick","emitErrorCloseNT","emitCloseNT","emitErrorNT","closeEmitted","emitClose","errorEmitted","errorOrDestroy","sync","destroyed","autoDestroy","constructNT","onConstruct","constructed","emitConstructNT","_construct","isRequest","setHeader","abort","emitCloseLegacy","emitErrorCloseLegacy","construct","socket","undestroy","reading","ended","endEmitted","finalCalled","prefinished","ending","finished","ObjectDefineProperties","ObjectGetOwnPropertyDescriptor","ObjectKeys","ObjectSetPrototypeOf","Readable","Writable","allowHalfOpen","webStreamsAdapters","duplexify","lazyWebStreams","__proto__","writableHighWaterMark","writableBuffer","writableLength","writableFinished","writableCorked","writableEnded","writableNeedDrain","fromWeb","pair","newStreamDuplexFromReadableWritablePair","toWeb","duplex","newReadableWritablePairFromDuplex","bufferModule","isIterable","isReadableNodeStream","isWritableNodeStream","isDuplexNodeStream","ERR_INVALID_RETURN_VALUE","createDeferredPromise","Blob","globalThis","isBlob","AbortController","FunctionPrototypeCall","Duplexify","_duplexify","wrap","onfinished","final","promise","ac","_promise","_resolve","fromAsyncGen","objectMode","arrayBuffer","ERR_STREAM_PREMATURE_CLOSE","kEmptyObject","validateFunction","validateBoolean","PromisePrototypeThen","isClosed","isReadableFinished","isReadableErrored","isWritableFinished","isWritableErrored","willEmitClose","_willEmitClose","kIsClosedPromise","nop","_options$readable","_options$writable","isAborted","originalCallback","resolverFn","eosWeb","wState","rState","onlegacyfinish","readableFinished","onend","onerror","onclosed","onrequest","cleanup","endCallback","_opts","autoCleanup","SymbolAsyncIterator","ERR_STREAM_NULL_VALUES","iterable","isAsync","highWaterMark","hadError","hasThrow","throw","ArrayIsArray","EE","Stream","emitter","pipe","dest","source","ondata","pause","resume","_isStdio","didOnEnd","ERR_OUT_OF_RANGE","validateInteger","kWeakHandler","kResistStopPropagation","staticCompose","deprecate","ArrayPrototypePush","MathFloor","NumberIsNaN","PromiseReject","PromiseResolve","kEmpty","kEof","concurrency","queue","signalOpt","cnt","onCatch","afterItemProcessed","maybeResume","pump","unused","ReduceAwareErrMissingArgs","toIntegerOrInfinity","streamReturningOperators","asIndexedPairs","_options$signal","drop","_options$signal5","_options$signal6","flatMap","take","_options$signal7","_options$signal8","compose","composedStream","promiseReturningOperators","every","reducer","initialValue","_options$signal2","hasInitialValue","addEventListener","gotAnyItemFromStream","_options$signal3","_options$signal4","PassThrough","Transform","_transform","destroyImpl","ERR_STREAM_DESTROYED","writing","makeAsyncIterable","fromReadable","pumpToNode","onresolve","wait","off","pumpToWeb","pipelineImpl","outerSignal","lastStreamCleanup","finishImpl","destroys","finishCount","_disposable","isLastStream","onError","_ret","_ret2","pt","endFn","popCallback","ArrayPrototypeIndexOf","NumberIsInteger","NumberParseInt","SafeSet","SymbolAsyncDispose","ReadableState","debug","BufferList","getHighWaterMark","getDefaultHighWaterMark","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kPaused","StringDecoder","kObjectMode","kEndEmitted","kReading","kConstructed","kSync","kNeedReadable","kEmitClose","kAutoDestroy","kMultiAwaitDrain","makeBitMapDescriptor","bit","isDuplex","pipes","flowing","defaultEncoding","awaitDrainWriters","decoder","needReadable","maybeReadMore","readableAddChunk","addToFront","_isUint8Array","_uint8ArrayToBuffer","emitReadable","emittedReadable","emitReadable_","onEofChunk","addChunk","dataEmitted","readableListening","resumeScheduled","multiAwaitDrain","readingMore","_undestroy","captureRejectionSymbol","readableEnded","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","streamToAsyncIterator","iter","destroyOnReturn","createAsyncIterator","fromList","endReadable","endReadableNT","endWritableNT","NaN","nOrig","computeNewHighWaterMark","doRead","pipeOpts","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanedUp","needDrain","pipeOnDrain","dests","ev","paused","streamKeys","readableDidRead","readableAborted","readableHighWaterMark","readableBuffer","readableFlowing","readableLength","readableEncoding","pipesCount","_fromList","readableStream","newStreamReadableFromReadableStream","streamReadable","newReadableStreamFromStreamReadable","_ref","_src$readableObjectMo","defaultHighWaterMarkBytes","defaultHighWaterMarkObjectMode","duplexKey","hwm","highWaterMarkFrom","setDefaultHighWaterMark","kCallback","flush","_flush","prefinish","SymbolFor","kIsErrored","kIsReadable","kIsWritable","kIsDisturbed","obj","strict","_obj$_readableState","_obj$_writableState","pipeThrough","cancel","isWritableEnded","isOutgoingMessage","_closed","_defaultKeepAlive","_removedConnection","_removedContLen","isServerResponse","_sent100","isDisturbed","_stream$kIsDisturbed","isErrored","_ref2","_ref3","_ref4","_ref5","_stream$kIsErrored","_stream$_readableStat3","_stream$_writableStat3","_stream$_readableStat4","_stream$_writableStat4","readableErrored","writableErrored","isReadableEnded","_stream$_readableStat","_stream$_readableStat2","_stream$_writableStat","_stream$_writableStat2","_stream$req","_consuming","_dumped","upgradeOrConnect","ArrayPrototypeSlice","FunctionPrototypeSymbolHasInstance","ObjectDefineProperty","StringPrototypeToLowerCase","SymbolHasInstance","WritableState","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_ALREADY_FINISHED","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","kOnFinished","noDecode","decodeStrings","corked","bufferProcessing","onwrite","writecb","writelen","afterWriteTickInfo","resetBuffer","pendingcb","buffered","bufferedIndex","allBuffers","allNoop","writev","_writev","clearBuffer","finishMaybe","isEncoding","writeOrBuffer","doWrite","onwriteError","errorBuffer","afterWriteTick","afterWrite","_state$errored","onfinishCallbacks","_state$errored2","bufferedLength","chunks","needFinish","onFinish","callFinal","getBuffer","cork","uncork","setDefaultEncoding","writableAborted","writableStream","newStreamWritableFromWritableStream","streamWritable","newWritableStreamFromStreamWritable","ArrayPrototypeIncludes","ArrayPrototypeJoin","ArrayPrototypeMap","NumberMAX_SAFE_INTEGER","NumberMIN_SAFE_INTEGER","ObjectPrototypeHasOwnProperty","RegExpPrototypeExec","StringPrototypeToUpperCase","StringPrototypeTrim","hideStackFrames","ERR_SOCKET_BAD_PORT","ERR_UNKNOWN_SIGNAL","normalizeEncoding","isAsyncFunction","isArrayBufferView","signals","octalReg","modeDesc","validateInt32","validateUint32","positive","validateString","validateOneOf","oneOf","allowed","getOwnPropertyValueOrDefault","defaultValue","allowArray","allowFunction","validateDictionary","validateArray","minLength","validateBuffer","validatePlainFunction","validateUndefined","linkValueRegExp","validateLinkHeaderFormat","isInt32","isUint32","parseFileMode","validateStringArray","validateBooleanArray","validateAbortSignalArray","indexedName","validateEncoding","normalizedEncoding","validateNumber","validatePort","allowZero","validateSignalName","validateUnion","validateLinkHeaderValue","hints","hintsLength","CustomStream","promises","originalDestroy","defineProperty","configurable","format","AggregateError","CustomAggregateError","kIsNodeError","kTypes","classRegExp","nodeInternalPrefix","ERR_INTERNAL_ASSERTION","addNumericalSeparator","Base","NodeError","getMessage","defineProperties","hidden","expected","actual","instances","last","_actual$constructor","inspected","colors","_value$constructor","range","received","RangeError","innerError","outerError","el","sep","ArrayPrototypePop","thisArgs","Function","hasInstance","MIN_SAFE_INTEGER","props","prop","getOwnPropertyDescriptor","proto","setPrototypeOf","PromisePrototypeCatch","thenFn","catchFn","ReflectApply","RegExpPrototypeTest","asyncIterator","dispose","asyncDispose","AbortSignal","AsyncFunction","rej","promisify","debuglog","_unused","replacement","toFixed","ArrayBuffer","isView","removeEventListener","queueMicrotask","_removeEventListener","AbortSignalAny","any","customPromisify","ERR_ILLEGAL_CONSTRUCTOR","pl","lastArg","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","tokens","encodedURI","replaceMap","customDecodeURIComponent","keccak512","keccak384","keccak224","sha3_1","wrapHash","keccak_224","keccak_256","keccak_384","keccak_512","__importDefault","__esModule","bytesToUtf8","createView","assertBytes","assertBool","_assert_1","default","utils_2","TextDecoder","sliced","webCrypto","nodeRequire","node","web","predicate","isArr","helpers","ValidatorResult","SchemaError","attribute","testSchemaNoThrow","throwError","throwAll","validateSchema","valid","getEnumerableProperty","hasOwnProperty","propertyIsEnumerable","testAdditionalProperty","property","addError","argument","preValidateProperty","makeChild","importErrors","testType","list","$id","anyOf","inner","nestedErrors","allOf","if","isSchema","ifValid","else","propertyNames","subschema","patternProperties","pattern","regexp","_e","minProperties","maxProperties","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","errorMessage","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","round","testArrays","deepCompareStrict","multipleOf","divisibleBy","disableFormat","isFormat","hsp","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","disallow","notTypes","schemaId","uri","ValidationError","makeSuffix","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","propertyName","FORMAT_REGEXPS","parseFloat","ipv4","validator","customFormats","deepMerger","deepMerge","copyist","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","validate","urilib","found","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","resolved","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","parsed","fragment","date","InvalidStatusCodeError","InvalidCertError","DEFAULT_OPT","redirect","expectStatusCode","full","keepAlive","cors","sslAllowSelfSigned","_redirectCount","fingerprint256","statusCode","detectType","fatal","agents","fetchNode","_options","http","https","zlib","urlResolve","isSecure","compactFP","agentOpt","keepAliveMsecs","maxFreeSockets","maxCachedSessions","agentKey","sslPinnedCertificates","agent","Agent","rejectUnauthorized","handleError","brotliDecompress","unzip","handleRes","pinned","mfetchSecureConnect","fp256","getPeerCertificate","isSessionReused","setNoDelay","SAFE_HEADERS","FORBIDDEN_HEADERS","fetchBrowser","Headers","username","btoa","password","fromEntries","IS_NODE","versions","v8","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","keysSorter","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","parseBooleans","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","arrayValue","parserForArrayFormat","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","pick","exclude","exclusionFilter","qs","maxKeys","kstr","vstr","stringifyPrimitive","ks","separator","separatorIndex","extendStatics","__extends","__","__assign","__rest","getOwnPropertySymbols","__decorate","decorators","desc","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","generator","fulfilled","step","rejected","__generator","sent","trys","ops","verb","__createBinding","__values","__read","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","__classPrivateFieldGet","receiver","privateMap","__classPrivateFieldSet","util","validateBase64","unescape","escape","atob","nodeType","freeGlobal","global","punycode","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","stringFromCharCode","mapDomain","ucs2decode","extra","ucs2encode","digitToBasic","digit","flag","adapt","numPoints","firstTime","basic","oldi","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","define","Url","slashes","hostname","search","urlParse","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","queryIndex","splitter","uSplit","simplePath","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","toASCII","ae","esc","qm","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","isAbsolute","arg","StructError","failures","cached","explanation","failure","isPlainObject","print","toFailure","struct","branch","refinement","toFailures","run","coercer","ts","refiner","Struct","tuples","shiftIterator","Structs","dynamic","lazy","partial","optional","Element","getTime","enums","func","Class","intersection","constant","Key","Value","never","nullable","knowns","Never","unknowns","coerced","unknown","defaulted","fallback","changed","trimmed","empty","refine","getSize","threshold","exclusive","nonempty","of","asUint8Array","fromString","bases","encoder","ALPHABET","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","ComposedDecoder","decoders","Codec","baseX","alphabet","basex","rfc4648","bitsPerChar","written","SyntaxError","base2","base8","base10","base16","base16upper","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36","base36upper","base58btc","base58flickr","base64","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","byts","byt","encode_1","oldOffset","INT","MSB","MSBALL","REST$1","MSB$1","N1","N2","N3","N4","N5","N6","N7","N8","N9","encodingLength","encodeTo","int","varint","sizeOffset","digestOffset","Digest","Hasher","sha","subtle","sha512","textEncoder","textDecoder","CID","multihash","asCID","_baseCache","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","toStringV0","toStringV1","toStringTag","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","cid","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","identityBase","base58","createCodec","ascii","utf8","latin1","binary"],"sourceRoot":""}